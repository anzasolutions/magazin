<html><head><meta http-equiv=Content-Type content="text/html; charset=iso-8859-2"><link rel=stylesheet href=magazin.css TYPE=text/css><title>MagaZin
#12 :: sierpieñ 2002</title></head><body link=#478DE7 vlink=#478DE7 alink=#478DE7 topmargin=0 bottommargin=0 bgcolor=#000000><div align=center><center><table border=0 width=650 style="border-style: solid; border-width: 0" cellspacing=0 cellpadding=0 height=100% bgcolor=#FFFFFF><tr><td width=100% height=20 valign=top>
        <p align="justify">&nbsp;</td></tr></center><tr><td width=100% height=25 valign=middle bgcolor=#4048A8><div align=center><table border=0 width=583 cellspacing=0 cellpadding=0><center><td width=400 class=9ptV valign=bottom colspan=3><p class=9ptV><font color=#FFFFFF><b>MAGAZIN
            #12 :: STRONA 19</b></font></td></center><td width=133 class=9ptV valign=bottom><p align=right><font color=#FFFFFF><img border=0 src=../img/direct.gif width=7 height=10><img border=0 src=../img/direct3.gif width=7 height=10><img border=0 src=../img/direct2.gif width=7 height=10></font></td><center><td width=8 class=9ptV valign=bottom></td><td width=55 class=9ptV><b><font color=#FFFFFF>KOMPUTER</font></b></td></table></center></div></td></tr><center><tr><td width=100% height=5 valign=top><p class=9ptV>&nbsp;</td></tr><tr><td width=100% height=20 valign=bottom></center><div align=center><table border=0 width=586 height=20 cellspacing=0 cellpadding=0><tr><td width=135 background=../img/line3.gif><p align=right><img border=0 src=../img/line.gif width=9 height=20></td><center><td width=310 valign=bottom><p align=center class=9ptV><a href="18.htm" class="link2"><font color=#4048A8>poprzednia strona</a> ::
              </font><a href=spis.htm class=link2><font color=#4048A8>spis tre¶ci</font></a><font color=#4048A8> ::<a href="20.htm" class="link2">
              </a> </font><a href="20.htm" class="link2"><font color=#4048A8>nastêpna strona</font></a></td><td width=135 background=../img/line3.gif><img border=0 src=../img/line2.gif width=9 height=20></td></tr></table></center></div></td></tr><center><tr><td width=100% height=5 valign=top><p class=9ptV>&nbsp;</td></tr><tr><td width=100% height=21 valign=top><div align=center><center><table border=0 width=600 cellspacing=0 cellpadding=6 height=20 bgcolor=#FFFFFF><tr><td width=288 height=20 valign=top class=9pt><div align=center><center><table border=0 width=100% cellspacing=0 cellpadding=0><tr><td width=100% valign=top class=9ptV height=15>
                      <p align="justify"><i>Software</i></p>
                    </td></tr><tr><td width=100%><p class=u align="justify">Kurs Delphi
                      #3</td></tr></table></center></div>
              <p class="9ptV" align="justify">Witam, witam w moich nowych programach... :) Jak obieca³em w poprzedniej czê¶ci kursu dzisiaj zajmiemy siê... Delphi! :) Tym razem jednak na powa¿nie, czyli napiszemy program w ¶rodowisku Windows. Co prawda nie poka¿e od razu ca³ej mocy Delphi, bo od tego bêdzie ca³y ten kurs. Jednak powoli, powoli, a do wszystkiego dojdziecie.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
              Niestety muszê na pocz±tku was trochê przynudziæ wstêpem. W³±czcie Delphi i czytajcie. Na samej górze mamy okno g³ówne Delphi, w którym mo¿emy wykonywaæ operacje na projekcie (nowy, otwórz, zapisz itp) oraz mo¿emy wstawiaæ obiekty z kilku palet (w zale¿no¶ci od wersji ilo¶æ bywa ró¿na). Po lewej stronie mamy
              <font color="#4048A8"> Object Inspector</font>, czyli inspektora obiektów, który odpowiada za ustawianie w³a¶ciwo¶ci naszych obiektów. Po ¶rodku ekranu mamy dwa okna
              <font color="#4048A8"> Form1</font> (okno g³ówne naszej aplikacji, tutaj bêdziemy decydowali o wygl±dzie naszej aplikacji) oraz Unit1.pas, czyli okno, w którym bêdziemy mogli edytowaæ wszystkie modu³y w naszej aplikacji (w tym przypadku Unit1.pas). Proszê zauwa¿yæ, ¿e z
              <font color="#4048A8"> Project -> View Source </font> nie bêdziemy praktycznie korzystaæ (a i tak mo¿na napisaæ bardzo du¿± aplikacjê).<br>
              <font color="#4048A8">Formularz</font> czyli <font color="#4048A8">Form1</font>, s³u¿y nam za okienko, jak zreszt± widzicie, ca³kiem standardowe. Tutaj oprócz mo¿liwo¶ci wstawiania innych obiektów mo¿emy te okienko troszeczkê zmieniæ, np.: jego rozmiar. Mo¿emy to zrobiæ rêcznie (klikn±æ i przesun±æ krawêd¼ okna) lub pos³uguj±c siê jego w³a¶ciwo¶ciami w
              <font color="#4048A8"> Object Inspectorze</font> (<font color="#4048A8">width</font> i
              <font color="#4048A8">height</font>).<br>
              <font color="#4048A8">Form1</font> jest obiektem klasy <font color="#4048A8">TForm</font>, czyli posiada jego wszystkie w³a¶ciwo¶ci, które zosta³y ustalone przez projektantów Delphi. Klasy odró¿niaj± siê od obiektów liter± T na pocz±tku. Czyli np.:
              <font color="#4048A8"> Button1</font> (obiekt) jest obiektem klasy
              <font color="#4048A8">TButton</font>, ale równie¿ je¶li tak ustalimy (w³a¶ciwo¶æ
              <font color="#4048A8"> Name</font> przycisku) to równie¿ <font color="#4048A8"> Marek</font> mo¿e byæ z klasy
              <font color="#4048A8">TButton</font>. Kapujecie? W kodzie wygl±da to tak:<br>
              <font color="#4048A8">Button1: TButton;<br>
              Marek: TButton;<br>
              Cos: TSpeedButton;</font><br>
              Klas jest wiêcej, a my mo¿emy w naszym projekcie tworzyæ ich wiêcej i ustalaæ ich w³a¶ciwo¶ci jak chcemy.<br>
              Ka¿dy obiekt ma swoje w³a¶ciwo¶ci, o których wspomina³em ju¿ wy¿ej. Ka¿da klasa ma inne w³a¶ciwo¶ci, ale wiele z parametrów obiektów mo¿e wystêpowaæ w innych obiektach. Aby ustaliæ
              <font color="#4048A8"> Caption</font> (tekst na obiekcie) obiektu <font color="#4048A8"> Przycisk
              </font>(TButton) nale¿y napisaæ tak:<br>
              <font color="#4048A8">Przycisk.Caption := 'OK';</font><br>
              Jak zauwa¿yli¶cie w³a¶ciwo¶æ obiektu od jego nazwy oddzielamy kropk±. Poza tym w³a¶ciwo¶æ
              <font color="#4048A8"> Caption</font> jest typu <font color="#4048A8"> String</font> i dlatego poda³em j± w apostrofach. Natomiast
              <font color="#4048A8"> Width </font> jest typem <font color="#4048A8"> Integer</font> i ustalamy go tak:<br>
              <font color="#4048A8">Przycisk.Width := 100;</font><br>
              Nic nie stoi na przeszkodzie aby wykonywaæ ró¿ne funkcje na w³a¶ciwo¶ciach obiektów. Mo¿emy je pomno¿yæ:<br>
              <font color="#4048A8">Button1.Caption := 'Pole zajmowane przez obiekt Button1: ' + IntToStr(Button1.Width * Button1.Height);</font><br>
              Dziêki temu, gdy przycisk bêdzie mia³ rozmiary 100x32 wtedy otrzymamy takiego stringa:<br>
              Pole zajmowane przez obiekt <font color="#4048A8"> Button1: 3200</font><br>
              Oczywi¶cie oprócz stringów s± tak¿e inne typy zmiennych w w³a¶ciwo¶ciach:
              <font color="#4048A8"> Enabled</font> (aktywno¶æ obiektu) jest typu
              <font color="#4048A8"> Boolean:</font><br>
              <font color="#4048A8">Button1.Enabled := True;</font><br>
              <br>
              Do obiektów zaraz wrócimy, a teraz zobaczmy jak wygl±da domy¶lny kod
              <font color="#4048A8">Unit1</font>:<br>
              <font color="#4048A8">unit Unit1;<br>
              <br>
              interface<br>
              <br>
              uses<br>
              Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs;<br>
              <br>
              type<br>
              TForm1 = class(TForm)<br>
              private<br>
              { Private declarations }<br>
              public<br>
              { Public declarations }<br>
              end;<br>
              <br>
              var<br>
              Form1: TForm1;<br>
              <br>
              implementation<br>
              <br>
              {$R *.DFM}<br>
              <br>
              end.<br>
              </font><br>
              <font color="#4048A8">unit Unit1; </font> - tak nazywa siê nasz modu³ okna g³ównego. Aby go zmieniæ nale¿y zapisaæ projekt na dysk.<br>
              <font color="#4048A8">uses {...}</font> - tutaj du¿a lista modu³ów, z których korzysta nasz program.<br>
              <font color="#4048A8">type TForm1 = class(TForm) </font> - tutaj podali nam nazwê klasy naszego okna g³ównego. Po tym s³owie zwykle s± podawane obiekty jakie wstawili¶my do naszego okna oraz ich klasy.<br>
              <font color="#4048A8">private i public </font> - po tych s³owach podajemy deklaracje prywatne (private), niewidoczne dla innych modu³ów oraz public czyli widoczne dla innych modu³ów.<br>
              <font color="#4048A8">var Form1: TForm; </font> - tutaj mamy podan± nazwê naszego okna oraz zdefiniowanie z jakiej klasy ono pochodzi (TFrom).<br>
              <font color="#4048A8">implementation </font> - po tym s³owie koñczymy sekcjê interface i zaczynamy implementation. Tutaj mo¿emy definiowaæ zmienne u¿ywane tylko przez ten modu³. Bêd± tu te¿ procedury.<br>
              <font color="#4048A8">{$R *.DFM}</font> - tutaj modu³ podaje nazwê pliku RES naszego projektu (o zasobach kiedy indziej).<br>
              end. - to s³owo koñczy ca³kowicie modu³, po nim nic nie mo¿emy wpisywaæ, bo program i tak to zignoruje.<br>
              <br>
              My¶lê, ¿e wstêpu do¶æ, czas na praktykê. W³±czcie Delphi, nowy projekt i wstawcie do niego obiekt typu TButton (karta Standard). Teraz zmieñcie jego nazwê na Przycisk i dwukrotnie na niego kliknijcie. Teraz powinno siê wam pokazaæ ¼ród³o naszego programu, ale takie jakby inne?<br>
              <br>
              <font color="#4048A8">unit Unit1;<br>
              <br>
              interface<br>
              <br>
              uses Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs;<br>
              <br>
              type<br>
              TForm1 = class(TForm)<br>
              Przycisk: TButton;<br>
              procedure PrzyciskClick(Sender: TObject);<br>
              private<br>
              { Private declarations }<br>
              public<br>
              { Public declarations }<br>
              end;<br>
              <br>
              var<br>
              Form1: TForm1;<br>
              <br>
              implementation<br>
              <br>
              {$R *.DFM}<br>
              <br>
              procedure TForm1.PrzyciskClick(Sender: TObject);<br>
              begin<br>
              <br>
              end;<br>
              <br>
              end.<br>
              </font><br>
              Obja¶nienia po deklaracji <font color="#4048A8"> TForm1 =
              class(TForm):</font><br>
              <font color="#4048A8">Przycisk: TButton; </font> - tutaj dosz³a nam nowa deklaracja: Przycisk: TButton; czyli program utworzy nam obiekt typu TButton o nazwie Przycisk.<br>
              <font color="#4048A8">procedure PrzyciskClick(Sender: TObject);</font> - tutaj dziêki naszemu dwukrotnemu klikniêciu na obiekt Przycisk utworzyli¶my zdarzenie, które bêdzie wykonywane po naci¶niêciu na niego. Ta deklaracja mówi tylko programowi, ¿e tak± procedurê powinien znale¼æ w dalszej czê¶ci kodu.<br>
              Po s³owie <font color="#4048A8">implementation</font>:<br>
              <font color="#4048A8">procedure TForm1.PrzyciskClick(Sender: TObject);<br>
              begin<br>
              <br>
              end;</font><br>
              - tutaj utworzyli¶my procedurê, o której wspominali¶my w poprzedniej czê¶ci kodu. Procedura ta ma nazwê: PrzyciskClick. Przed t± nazw± jest wyraz TForm1, który mówi, ¿e ta procedura nale¿y do obiektu TForm1 (nasze okno). Mogli¶my sobie utworzyæ w³asn± procedurê bez deklaracji w obiekcie TForm, ale wtedy mieliby¶my mniejszy z niej u¿ytek. W nawiasie jest taka deklaracja: Sender: TObject, która s³u¿y g³ównie do rozpoznania jaki obiekt j± wywo³a³ (w tym przypadku Przycisk, ale s± przypadki w których kilka obiektów korzysta z jednej procedury i czasami potrzebujemy sprawdzenia kto j± wywo³a³). Teraz trochê o samej procedurze. Mo¿emy wstawiæ do niej jej w³asne zmienne i sta³e, z których nie bêd± mog³y korzystaæ inne procedury. Aby stworzyæ zmienn± lub sta³e, które bêd± widzia³y wszystkie procedury (zadeklarowane do obiektu TForm1) trzeba je zadeklarowaæ po s³owie implementation:<br>
              <font color="#4048A8"><br>
              implementation<br>
              var tekst: String;</font><br>
              <br>
              Zerknijcie jeszcze do <font color="#4048A8"> Object Inspectora </font> edytujcie obiekt Przycisk i zobaczcie jego kartê
              <font color="#4048A8"> Events...</font> trochê tego du¿o, prawda? S± to wszystkie zdarzenia jakie mo¿e obs³ugiwaæ dany obiekt. Jak widzicie zdarzenie
              <font color="#4048A8"> OnClick</font> jest ju¿ ustawione... to w³a¶nie nasz efekt dwukrotnego klikniêcia na Przycisk. Teraz klikaj±c dwukrotnie na które¶ zdarzenie Delphi automatycznie utworzy do niego procedurê i przeniesie nasz do edycji kodu. kliknijcie teraz dwa razy na
              <font color="#4048A8">OnClick</font>... przeniesie nas to do kodu i...</td><td width=282 height=20 valign=top class=9pt></center></center>
          <p class="9ptV" align="justify"><b>Tworzymy zdarzenie</b><br>
          <br>
          Skoro wiêkszo¶æ podstaw mamy za sob± czas na jaki¶ przyk³ad. Do naszego aktualnie tworzonego projektu dodaj jeden obiekt
          <font color="#4048A8"> TEdit </font> (karta <font color="#4048A8">Standard</font>). Wróæ z powrotem do kodu do procedury
          <font color="#4048A8"> OnClick</font> Przycisku i napisz tak:<br>
          <font color="#4048A8"><br>
          procedure TForm1.PrzyciskClick(Sender: TObject);<br>
          begin<br>
          ShowMessage(Edit1.Text);<br>
          end;<br>
          </font><br>
          W³±czcie program... jak widzicie tworzy on nam nowe komunikatowe okienko i wypisuje tekst, który napiszemy w komponencie
          <font color="#4048A8"> TEdit</font> (jednowierszowe pole edycji tekstu). Czas na wyja¶nienia:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          <font color="#4048A8">ShowMessage(const Msg: String);</font> - procedura ta tworzy okno komunikatowe z przyciskiem OK i wypisuje tekst zawarty w nawiasach. Mogli¶my równie¿ napisaæ: ShowMessage('Hello world!'); co spowoduje wypisanie nam tekstu Hello world! ;)<br>
          <font color="#4048A8">Edit1.Text </font> - tutaj skorzysta³em z w³a¶ciwo¶ci obiektu typu TEdit Text, który ma pod swoj± warto¶ci± podstawiony tekst zawarty w Edit1 (w polu edycji). Tekst ten mo¿emy odczytaæ (jak wy¿ej) oraz podstawiæ pod niego co¶...<br>
          <br>
          Skoro wszystko jasne wybierzcie w <font color="#4048A8"> Object Inspectorze
          </font> obiekt <font color="#4048A8"> Form1</font> i edytujcie jego zdarzenie (karta
          <font color="#4048A8">Events</font>) <font color="#4048A8">OnCreate</font>. Tam wpiszcie:<br>
          <font color="#4048A8"><br>
          procedure TForm1.FormCreate(Sender: TObject);<br>
          begin<br>
          Edit1.Text := 'Tutaj wpisz tekst';<br>
          end;</font><br>
          <br>
          Zdarzenie <font color="#4048A8"> OnCreate</font> wystêpuje wtedy, gdy jest tworzony nasz formularz czyli na pocz±tku programu. Dziêki temu w polu edycji bêdziemy mieli taki tekst po uruchomieniu programu: Tutaj wpisz tekst. Czyli mówi±c fachowo: w³a¶ciwo¶æ obiektu<font color="#4048A8"> Edit1 Text</font> ma warto¶æ Tutaj wpisz tekst. Zróbcie jeszcze jeden eksperyment: wpiszcie co¶ w
          <font color="#4048A8"> Object Inspectorze</font> obiektu <font color="#4048A8"> Edit1</font> w w³a¶ciwo¶æ
          <font color="#4048A8">Text</font>. Zmieni³ siê tekst w polu edycji, ale teraz uruchomcie program... i co? Pole edycji ma taki tekst: Tutaj wpisz tekst, chocia¿ zmienili¶my go w
          <font color="#4048A8"> Object Inspectorze.</font> Wyja¶nienie znajdziecie w
          <font color="#4048A8"> OnCreate Form1</font>, bo tutaj wpisali¶my t± warto¶æ. Do czego zmierzam? W³a¶nie wam pokaza³em, ¿e ustalaæ warto¶ci obiektu mo¿na w dwa sposoby: w
          <font color="#4048A8"> Object Inspectorze </font> i w <font color="#4048A8">kodzie</font>. To co bêdziemy mieli w efekcie koñcowym zale¿y od tego w jakiej kolejno¶ci s± u³o¿one procedury. Najpierw program generuje warto¶ci dla naszych obiektów podczas tworzenia okna (tego nie widzimy), a pó¼niej w innych procedurach. W tym przypadku w procedurze po utworzeniu okna zostaje podstawiona nowa warto¶æ dla
          <font color="#4048A8">Edit1.Text</font>. Ufff...<br>
          <br>
          <b>Idziemy dalej</b><br>
          <br>
          Przyznam, ¿e d³ugo my¶la³em nad nastêpnym waszym krokiem w Delphi i postanowi³em, ¿e jednak czêsto bywaj± problemy przesy³ania danych miêdzy dwoma oknami. Wiêc, do naszego projektu dodamy nowe okno
          <font color="#4048A8"> File -> New Form </font> lub dostêpna ikona na pasku. Klikajcie! Dziêki temu utworzy³ siê nam nowy obiekt
          <font color="#4048A8"> Form2 </font> oraz nowy modu³ <font color="#4048A8">Unit2</font>. Teraz spójrzcie na ¼ród³o
          <font color="#4048A8"> Unit1 </font> i dopiszcie to co ja napisa³em.<br>
          </p>
          <p class="9ptV" align="justify">
          <br>
          <font color="#4048A8">unit Unit1;<br>
          <br>
          interface<br>
          <br>
          uses Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs, StdCtrls;<br>
          <br>
          type<br>
          TForm1 = class(TForm)<br>
          Przycisk: TButton;<br>
          Edit1: TEdit;<br>
          procedure FormCreate(Sender: TObject);<br>
          procedure PrzyciskClick(Sender: TObject);<br>
          private<br>
          { Private declarations }<br>
          public<br>
          { Public declarations }<br>
          end;<br>
          <br>
          var<br>
          Form1: TForm1;<br>
          <br>
          implementation<br>
          uses Unit2;<br>
          {$R *.DFM}<br>
          <br>
          procedure TForm1.FormCreate(Sender: TObject);<br>
          begin<br>
          Edit1.Text := 'Tutaj wpisz tekst';<br>
          end;<br>
          <br>
          procedure TForm1.PrzyciskClick(Sender: TObject);<br>
          begin<br>
          Form2.Label1.Caption := Edit1.Text;<br>
          ShowMessage('Przes³ano tekst');<br>
          end;<br>
          <br>
          end.</font><br>
          <br>
          Jak widzicie do sekcji<font color="#4048A8"> implementation </font> doda³em co¶ takiego:
          <font color="#4048A8"> uses Unit2</font>. Dziêki temu mo¿emy porozumiewaæ siê tym oknem z
          <font color="#4048A8"> Form2 </font> i mo¿emy korzystaæ z jego procedur, funkcji i obiektów. Jak zauwa¿yli¶cie zmieni³o siê zdarzenie
          <font color="#4048A8"> OnClick</font> przycisku:<br>
          <font color="#4048A8">Form2.Label1.Caption := Edit1.Text;<br>
          ShowMessage('Przes³ano tekst');</font><br>
          Pierwsza linijka odwo³uje siê do <font color="#4048A8"> Form2 </font> do obiektu o nazwie
          <font color="#4048A8"> Label1</font> do jego w³a¶ciwo¶ci <font color="#4048A8"> Caption</font> i zmienia j± na warto¶æ
          <font color="#4048A8">Edit1</font>. Je¶li jeste¶ rozumny to na pewno zauwa¿y³e¶, ze takiego obiektu w
          <font color="#4048A8"> Form2 </font> nie ma, wiêc go wstaw (<font color="#4048A8">TLabel</font>). Aby wszystko gra³o do koñca to ustawcie w³a¶ciwo¶æ
          <font color="#4048A8"> Visible Form2</font> na <font color="#4048A8">True</font>, dziêki czemu bêdziemy widzieæ obydwa okna aplikacji. Dzia³a?<br>
          <br>
          Tym razem nie bêdê siê t³umaczy³ wielko¶ci± pliku i zakoñczê t± lekcjê. Czemu? To co chcia³bym napisaæ wymaga trochê wiêcej miejsca i szkoda zaczynaæ to tu i teraz bez skoñczenia. ¯eby¶cie natomiast nie gadali, ¿e za ma³o, to na koniec dajê jeszcze najczê¶ciej spotykane w³a¶ciwo¶ci obiektów i ich wyja¶nienie.
          Sayonara!<br>
          </p>
          <div align="justify">
            <table borderColor="#c0c0c0" cellSpacing="0" cellPadding="4" width="100%" border="1">
              <tbody>
                <tr>
                  <td width="50%" class="9ptV">
                    <p align="justify"><b>W³a¶ciwo¶æ</b></p>
                  </td>
                  <td width="50%" class="9ptV">
                    <p align="justify"><b> Obja¶nienie&nbsp;</b></p>
                  </td>
                </tr>
                <tr>
                  <td width="50%" class="9ptV">
                    <p align="justify">Caption&nbsp;</p>
                  </td>
                  <td width="50%" class="9ptV"> 
                    <p align="justify"> Nag³ówek obiektu, czyli tekst, który bêdzie wy¶wietlany i widoczny dla u¿ytkownika.&nbsp;</p>
                  </td>
                </tr>
                <tr>
                  <td width="50%" class="9ptV">
                    <p align="justify">Cursor&nbsp;</p>
                  </td>
                  <td width="50%" class="9ptV"> 
                    <p align="justify"> Wygl±d kursora, gdy najedzie na dany obiekt.&nbsp;</p>
                  </td>
                </tr>
                <tr>
                  <td width="50%" class="9ptV">
                    <p align="justify">Enabled&nbsp;</p>
                  </td>
                  <td width="50%" class="9ptV"> 
                    <p align="justify"> Aktywno¶æ obiektu</p>
                  </td>
                </tr>
                <tr>
                  <td width="50%" class="9ptV"> 
                    <p align="justify"> True&nbsp;</p>
                  </td>
                  <td width="50%" class="9ptV">
                    <p align="justify">aktywny</p>
                  </td>
                </tr>
                <tr>
                  <td width="50%" class="9ptV"> 
                    <p align="justify"> False</p>
                  </td>
                  <td width="50%" class="9ptV">
                    <p align="justify">zaciemniony</p>
                  </td>
                </tr>
                <tr>
                  <td width="50%" class="9ptV">
                    <p align="justify">Height&nbsp;</p>
                  </td>
                  <td width="50%" class="9ptV"> 
                    <p align="justify"> Wysoko¶æ obiektu&nbsp;</p>
                  </td>
                </tr>
                <tr>
                  <td width="50%" class="9ptV">
                    <p align="justify">Left</p>
                  </td>
                  <td width="50%" class="9ptV"> 
                    <p align="justify"> Pozycja obiektu od lewej krawêdzi w pixelach&nbsp;</p>
                  </td>
                </tr>
                <tr>
                  <td width="50%" class="9ptV">
                    <p align="justify">Name&nbsp;</p>
                  </td>
                  <td width="50%" class="9ptV"> 
                    <p align="justify"> Nazwa obiektu&nbsp;</p>
                  </td>
                </tr>
                <tr>
                  <td width="50%" class="9ptV">
                    <p align="justify">Top</p>
                  </td>
                  <td width="50%" class="9ptV"> 
                    <p align="justify"> Pozycja obiektu od górnej krawêdzi w pixelach&nbsp;</p>
                  </td>
                </tr>
                <tr>
                  <td width="50%" class="9ptV">
                    <p align="justify">Visible</p>
                  </td>
                  <td width="50%" class="9ptV"> 
                    <p align="justify"> Widoczno¶æ obiektu&nbsp;</p>
                  </td>
                </tr>
                <tr>
                  <td width="50%" class="9ptV">
                    <p align="justify">Width&nbsp;</p>
                  </td>
                  <td width="50%" class="9ptV"> 
                    <p align="justify"> D³ugo¶æ obiektu&nbsp;</p>
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
          <p class="9ptV">&nbsp;</p>
          <p class=9ptV align=right><font color=#000000><b>PC3T</b><br> </font><a href=mailto:przempc@poczta.onet.pl class=link2><font color=#4048A8>przempc@poczta.onet.pl</font></a></td></tr></table></div></td></tr><tr><center><td width=100% height=20 valign=bottom></center><div align=center><table border=0 width=586 height=20 cellspacing=0 cellpadding=0><tr><td width=135 background=../img/line3.gif><p align=right><img border=0 src=../img/line.gif width=9 height=20></td><center><td width=310 valign=bottom><p align=center class=9ptV><a href="18.htm" class="link2"><font color=#4048A8>poprzednia strona</font></a><font color=#4048A8> :: </font><a href=spis.htm class=link2><font color=#4048A8>spis tre¶ci</font></a><font color=#4048A8> :: </font><a href="20.htm" class="link2"><font color=#4048A8>nastêpna strona</font></a></td><td width=135 background=../img/line3.gif><img border=0 src=../img/line2.gif width=9 height=20></td></tr></table></center></div></td></tr><tr><td width=100% height=20 valign=top>&nbsp;</td></tr><tr><td width=100% height=25 valign=middle bgcolor=#4048A8><div align=center><table border=0 width=583 cellspacing=0 cellpadding=0><center><td width=596 class=9ptV valign=bottom colspan=6><p class=9ptV align=center><font color=#FFFFFF><b>WSZELKIE PRAWA ZASTRZE¯ONE :: COPYRIGHT &copy; LOOPUSNET/MAGAZIN 2001-2002</b></font></td></center><center></table></center></div></td></tr><tr><td width=100% height=20 valign=top>&nbsp;</td></tr></table></div></body></html>