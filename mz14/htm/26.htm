<html><head><meta http-equiv=Content-Type content="text/html; charset=iso-8859-2"><link rel=stylesheet href=magazin.css TYPE=text/css><title>MagaZin #14 :: grudzieñ 2002</title></head><body link=#478DE7 vlink=#478DE7 alink=#478DE7 topmargin=0 bottommargin=0 bgcolor=#000000><div align=center><table border=0 width=650 style="border-style: solid; border-width: 0" cellspacing=0 cellpadding=0 bgcolor=#FFFFFF><tr><td width=100% height=70 valign=middle background=../img/003b.png><div align=center><table border=0 width=550 cellspacing=0 cellpadding=0 height=28><tr><td width=550 align=center height=26 valign=bottom><p class=9ptV align=right><font color=#FFFFFF><b>MAGAZIN #14 :: STRONA 26</b></font></td></tr></table></div></td></tr><center><tr><td width=100% height=20 valign=bottom></center><div align=center><table border=0 width=586 height=20 cellspacing=0 cellpadding=0><tr><td width=135 background=../img/line3.gif><p align=right><img border=0 src=../img/line.gif width=9 height=20></td><center><td width=310 valign=bottom><p align=center class=9ptV><a href=25.htm class=link2><font color=#2078A8>poprzednia strona</font></a><font color=#4048A8> </font><font color=#2078A8>::</font><font color=#4048A8> </font><a href=spis.htm class=link2><font color=#2078A8>spis tre¶ci</font></a><font color=#4048A8> </font><font color=#2078A8>::</font><font color=#4048A8> </font><a href=27.htm class=link2><font color=#2078A8>nastêpna strona</font></a></td><td width=135 background=../img/line3.gif><img border=0 src=../img/line2.gif width=9 height=20></td></tr></table></center></div></td></tr><center><tr><td width=100% height=5 valign=top><p class=9ptV>&nbsp;</td></tr><tr><td width=100% height=5 valign=top><div align=center><center><table border=0 width=590 cellspacing=0 cellpadding=0><tr><td width=590 valign=top class=9ptV height=20 style="border-bottom: 1 solid #2078A8" colspan=2><b><font color=#009830><img border=0 src=../img/kwad.gif width=8 height=8> </font></b><b><font color=#2078A8>KURSY</font></b></td></tr><tr><td width=528><p><font face=Impact size=7 color=#E0F0F8><span style="background-color: #2078A8">K</span></font><font face=Impact size=7 color=#000000>urs Delphi, cz. 5</font></td></center></center><td width=58 valign=middle></td></tr><center><center><tr><td width=588 valign=bottom class=9ptV height=20 colspan=2><a href=mailto:przempc@poczta.onet.pl class=link2><b><font color=#2078A8>PC3T</font></b></a></td></tr><tr><td width=588 height=10 colspan=2></td></tr></table></center></div></center></td></tr><tr><td width=100% height=21 valign=top><center><table border=0 width=600 cellspacing=0 cellpadding=6 height=20 bgcolor=#FFFFFF><tr><td width=285 height=20 valign=top class=9pt></center><p class=9ptV align=justify><font color=#2078A8>Niespodzianka! W ostatnim odcinku mówi³em, ¿e dalej bêdziemy pisaæ programy naukowe. Czyli bezu¿yteczne dla szarych u¿ytkowników, ale potrzebne dla nas, programistów. Otó¿ postanowi³em jednak omin±æ ten nieciekawy odcinek i przej¶æ do konkretów, czyli piszemy co¶ u¿ytecznego, a co? Czytajcie dalej...</font><br> <br> <img border=0 src=../img/003_n.gif style="float: left" width=22 height=38>apiszemy kalkulator. Taki podobny do windowsowego, ale nauczy nas wiele, wiêc do dzie³a! Na pocz±tek jak zawsze programowanie obiektowe, czyli uk³adanie obiektów. Poni¿ej rysunek jak powinni¶cie to zrobiæ (wykorzysta³em tu obiekty TButton 25x25):</p><p class=9ptV align=center><img border=0 src=../img/delphi5.jpg style="border-left: 1 solid #000000; border-top: 1 solid #000000" width=164 height=213></p><p class=9ptV align=justify>Jak widzicie wygl±da jak normalny kalkulator tylko bez przycisków Memory. Pomy¶la³em, ¿e z tych opcji zrezygnujemy, bo i tak ma³o siê z nich korzysta. Bêdzie za to dodawanie, odejmowanie, mno¿enie, dzielenie, kwadratowanie, procentowanie i odwracanie liczby. Tyle wystarczy. Na pocz±tku trochê informacji. Jak pamiêtacie mamy dwa rodzaje zmiennych liczbowych: ca³kowite i rzeczywiste. Ca³kowite to liczby, które nie maj± u³amków, natomiast rzeczywiste maj± u³amki. Rozumiecie wiêc, ¿e w kalkulatorze bardziej przydadz± siê liczby rzeczywiste, czyli w Delphi Real. Dobra, wiêc ustawcie w³a¶ciwo¶ci wszystkich obiektów tak, jak widaæ na rysunku. Wszystko powinno byæ czytelne. Jeszcze tylko ustawcie w³a¶ciwo¶ci Form1: BorderIcons: wy³±czcie biMaximize (nie bêdzie mo¿na zmaksymalizowaæ okna) oraz BorderStyle na bsSingle (nie bêdzie mo¿na zmieniaæ rozmiaru okna). To by by³o wszystko z malowania :) idziemy do programowania pisanego.<br> Na sam pocz±tek w sekcji implementation zadeklarujemy trzy zmienne:</p><table border=0 width=100% style="border: 1 solid #2078A8" cellspacing=0 cellpadding=0 bgcolor=#E0F0F8><tr><td width=100%><div align=center><center><table border=0 width=269 cellspacing=0 cellpadding=0><tr><td width=267 height=8><p class=9ptV></td></tr><tr><td width=267 valign=top><p class=9ptV align=left><font color=#2078A8>var<br> liczba:Real;<br> dzialanie:String[1];<br> reset:Boolean = false;</font></td></tr><tr><td width=267 height=8><p class=9ptV></td></tr></table></center></div></td></tr></table><p class=9ptV align=justify>Pierwsza zmienna to liczba, któr± bêdziemy przechowywali w pamiêci, kiedy u¿ytkownik naci¶nie jakie¶ dzia³anie. Druga zmienna typu String, bêdzie zapamiêtywa³a jakie dzia³anie chcia³ wykonaæ u¿ytkownik na powy¿szej liczbie. Funkcjê trzeciej zmiennej poznacie w trakcie pisania programu, bo trudno bêdzie to wyja¶niæ. :) Wiêc wykonujemy zdarzenie, gdy u¿ytkownik naci¶nie CE, czyli Button1:</p><table border=0 width=100% style="border: 1 solid #2078A8" cellspacing=0 cellpadding=0 bgcolor=#E0F0F8><tr><td width=100%><div align=center><center><table border=0 width=269 cellspacing=0 cellpadding=0><tr><td width=267 height=8><p class=9ptV></td></tr><tr><td width=267 valign=top><p class=9ptV align=left><font color=#2078A8>Edit1.Text := '0';<br> liczba := 0;<br> dzialanie := '';</font></td></tr><tr><td width=267 height=8><p class=9ptV></td></tr></table></center></div></td></tr></table><p class=9ptV align=justify>Powy¿sza procedura zeruje wszystkie zmienne (Edit1 - obiekt, liczba, dzia³anie). Chyba nie trzeba wyja¶niaæ po co zerujemy te dane? Przecie¿ taka jest funkcja tego przycisku! :)<br> Spójrzcie teraz na nasze okno, dla ka¿dego przycisku trzeba by by³o teraz tworzyæ oddzieln± procedurê, która pisa³aby nam t± liczbê w Edicie1. Prawda, ¿e to kupa roboty? Ja postanowi³em zrobiæ to przy u¿yciu jednej procedury dla wszystkich liczbowych przycisków. Wykorzystamy Sender, który przy tworzeniu procedury przyjmuje nazwê obiektu, z którego zosta³a wywo³ana. Pó¼niej w procedurze sprawdzamy tylko z jakiego obiektu i po sprawie. Looknijcie zatem:</p><table border=0 width=100% style="border: 1 solid #2078A8" cellspacing=0 cellpadding=0 bgcolor=#E0F0F8><tr><td width=100%><div align=center><center><table border=0 width=269 cellspacing=0 cellpadding=0><tr><td width=267 height=8><p class=9ptV></td></tr><tr><td width=267 valign=top><p class=9ptV align=left><font color=#2078A8>procedure TForm1.Button2Click(Sender: TObject);<br> begin<br> if Edit1.Text = '0' then Edit1.Text := '';<br> if reset = true then<br> begin<br> reset := False;<br> Edit1.Text := '';<br> end;<br> if Sender = Button2 then Edit1.Text := Edit1.Text+'7';<br> if Sender = Button3 then Edit1.Text := Edit1.Text+'8';<br> if Sender = Button4 then Edit1.Text := Edit1.Text+'9';<br> if Sender = Button5 then Edit1.Text := Edit1.Text+'4';<br> if Sender = Button6 then Edit1.Text := Edit1.Text+'5';<br> if Sender = Button7 then Edit1.Text := Edit1.Text+'6';<br> if Sender = Button8 then Edit1.Text := Edit1.Text+'1';<br> if Sender = Button9 then Edit1.Text := Edit1.Text+'2';<br> if Sender = Button10 then Edit1.Text := Edit1.Text+'3';<br> if Sender = Button11 then Edit1.Text := Edit1.Text+'0';<br> end;</font></td></tr><tr><td width=267 height=8><p class=9ptV></td></tr></table></center></div></td></tr></table><p class=9ptV align=justify>Jak zd±¿yli¶cie siê kapn±æ jest tutaj trochê wiêcej rzeczy ni¿ mówi³em. Ju¿ wyja¶niam: pierwsza linijka sprawdza, czy Edit1 ma warto¶æ 0, je¶li tak to ka¿emy mu przyj±æ warto¶æ pustego Stringa (''). Po co to jest? Ano po to, ¿eby nie tworzy³y siê nam liczby w postaci 0345, tylko 345. Dla programu to nie ma ró¿nicy, ale wygl±da to jako¶ dziwnie. Nastêpny warunek sprawdza czy warto¶æ reset ma warto¶æ true. Je¶li tak, to ka¿emy jej przyj±æ warto¶æ False oraz k±¿emy Edit1 przyjmuj±c warto¶æ pustego Stringa. Bêdzie to nam potrzebne, gdy u¿ytkownik naci¶nie dodaj, odejmij, dziel, mnó¿. Po naci¶niêciu tego przycisku, zapamietamy warto¶æ dzia³ania i ustawimy reset na true. Pó¼niej, gdy u¿ytkownik naci¶nie któr±¶ z liczb Edit1 siê nam wyzeruje i dopiero wtedy bêdzie wypisywa³ now± warto¶æ. Nastêpne warunki, to te o których wspomina³em czyli sprawdzanie z jakiego przycisku zosta³a wywo³ana procedura. Jednak dali¶my t± ca³± procedurê tylko dla Button2. Co z reszt±? Kliknijcie raz na Button3, w Object Inspectorze wybierzcie kartê Events, naci¶nijcie raz na zdarzenie OnClick. Powinna pokazaæ siê lista napisanych ju¿ zdarzeñ, wybierzcie Button2Click. Zwrócie tak a¿ do Buttona11 w³±cznie. Teraz wszystkim tym przyciskom ustalili¶my jedno zdarzenie.<br> Teraz pora na Button12, który ma ustalaæ znak liczby (dodatni czy ujemny). Kiedy liczba bêdzie dodatnia, a my naci¶niemy ten przycisk to przed liczb± pojawi siê minus. Natomiast kiedy jednak postanowimy, ¿e liczba ta powinna byæ dodatnia to po naci¶niêciu tego przycisku plus powinien znikn±æ:</p><table border=0 width=100% style="border: 1 solid #2078A8" cellspacing=0 cellpadding=0 bgcolor=#E0F0F8><tr><td width=100%><div align=center><center><table border=0 width=269 cellspacing=0 cellpadding=0><tr><td width=267 height=8><p class=9ptV></td></tr><tr><td width=267 valign=top><p class=9ptV align=left><font color=#2078A8>procedure TForm1.Button12Click(Sender: TObject);<br> var s:String;<br> begin</font></td></tr><tr><td width=267 height=8><p class=9ptV></td></tr></table></center></div></td></tr></table></td><td width=285 height=20 valign=top class=9pt><table border=0 width=100% style="border: 1 solid #2078A8" cellspacing=0 cellpadding=0 bgcolor=#E0F0F8><tr><td width=100%><div align=center><center><table border=0 width=269 cellspacing=0 cellpadding=0><tr><td width=267 height=8><p class=9ptV></td></tr><tr><td width=267 valign=top><p class=9ptV align=left><font color=#2078A8>if Edit1.Text[1] &lt;> '-' then<br> Edit1.Text := '-' + Edit1.Text<br> else<br> begin<br> s := Edit1.Text;<br> Delete(s,1,1);<br> Edit1.Text := s;<br> end;<br> end;</font></td></tr><tr><td width=267 height=8><p class=9ptV></td></tr></table></center></div></td></tr></table><p class=9ptV align=justify>Na pocz±tku sprawdzamy jaki jest pierwszy znak w Edit1. S³u¿y do tego jak gdby tabela znaków danego Stringa. Wiêc je¶li mamy zmienn± tekst: String to, ¿eby sprawdziæ jej drug± liczbê piszemy tekst[2], trzeci± tekst[3] albo liczbê n:byte: tekst[n], albo ostatni znak w Stringu: tekst[length(tekst)]. Funkcja length(s: String):Integer podaje d³ugo¶æ Stringa. W naszym przypadku jest potrzebny tylko pierwszy znak czyli Edit1.Text[1] (przypominam, ¿e Text w Edit1 to String). Kiedy okazuje siê, ¿e pierwszy nzka jest ró¿ny od minusa (&lt;> '-') to wstawiamy przed liczb± minus ( Edit1.Text := '-' + Edit1.Text). Je¶li jest inaczej (przypominam, ¿e wiersza przed wyrazem else nie koñczymy ¶rednikiem!) to pod "s" podstawiamy warto¶æ Edit1.Text i przy u¿yciu procedury Delete kasujemy pierwszy znak z tego tekstu. Pó¼niej podstawiamy z powrotem pod Edit1.Text warto¶æ Stringa s.<br> Teraz zajmiemy siê przyciskiem robi±cym przecinek w liczbie. Jest jednak pewien haczyk: w jednej liczbie mo¿e byæ tylko jeden przecinek. Niestety my, programi¶ci, musimy przewidzieæ sytuacjê, w której u¿ytkownik bêdzie próbowa³ wstawiæ kilka przecinków do jednej liczby. Aby sprawdziæ czy w Edit1.Text jest ju¿ przynajmniej jeden znak "," musimy pos³u¿yæ siê funkcji AnsiPos(s1, s2:String): Integer, która podaje pozycjê Stringa w Stringu. Czyli mówi±c pro¶ciej mówi, gdzie w danym Stringu (s2) znajduje siê dany tekst (s1) i podaje jego pozycjê. Je¶li jednak nie ma takiego tekstu to podaje warto¶æ 0. W naszym programie bêdziemy sprawdzaæ czy AnsiPos jest równa zero, je¶li tak to wstawimy znak ",".</p><table border=0 width=100% style="border: 1 solid #2078A8" cellspacing=0 cellpadding=0 bgcolor=#E0F0F8><tr><td width=100%><div align=center><center><table border=0 width=269 cellspacing=0 cellpadding=0><tr><td width=267 height=8><p class=9ptV></td></tr><tr><td width=267 valign=top><p class=9ptV align=left><font color=#2078A8>procedure TForm1.Button13Click(Sender: TObject);<br> begin<br> if AnsiPos(',', Edit1.Text) = 0 then<br> Edit1.Text := Edit1.Text + ',';<br> end;</font></td></tr><tr><td width=267 height=8><p class=9ptV></td></tr></table></center></div></td></tr></table><p class=9ptV align=justify>Teraz czas na dzia³ania. Kiedy naci¶niemy jakie¶ dzia³anie, program zapamiêta jakie, zapamiêta jak± liczbê podali¶my jako pierwsz±. Musimy jednak przewidzieæ sytuacjê, w której bêdziemy np.: dodawaæ kilka liczb. Wtedy naci¶niemy takie przyciski: 2 + 2 + 2. Wiêc bêdziemy musieli obliczyæ ostatnie dzia³anie jakie wybra³ u¿ytkownik do tej liczby, pokazaæ j± i dopiero wtedy pozwoliæ mu dalej dodawaæ. Zreszt± spójrzcie:</p><table border=0 width=100% style="border: 1 solid #2078A8" cellspacing=0 cellpadding=0 bgcolor=#E0F0F8><tr><td width=100%><div align=center><center><table border=0 width=269 cellspacing=0 cellpadding=0><tr><td width=267 height=8><p class=9ptV></td></tr><tr><td width=267 valign=top><p class=9ptV align=left><font color=#2078A8>procedure TForm1.Button17Click(Sender: TObject);<br> begin<br> if dzialanie = '' then<br> begin<br> if Sender = Button17 then dzialanie := '+';<br> if Sender = Button16 then dzialanie := '-';<br> if Sender = Button15 then dzialanie := '*';<br> if Sender = Button14 then dzialanie := '/';<br> liczba := StrToFloat(Edit1.Text);<br> reset := true;<br> end<br> else<br> begin<br> Button18Click(Sender);<br> if Sender = Button17 then dzialanie := '+';<br> if Sender = Button16 then dzialanie := '-';<br> if Sender = Button15 then dzialanie := '*';<br> if Sender = Button14 then dzialanie := '/';<br> reset := true;<br> end;<br> end;</font></td></tr><tr><td width=267 height=8><p class=9ptV></td></tr></table></center></div></td></tr></table><p class=9ptV align=justify>Tak jak mówi³em na wstêpie potrzebne nam bêd± liczby rzeczywiste. Aby zmieniæ tak± na Stringa u¿yjemy funkcji: FloatToStr, na odwrót StrToFloat. Obydwie czê¶ci procedury niewiele siê od siebie ró¿ni± poza dodaniem w drugiej czê¶ci procedury Button18Click(Sender), która bêdzie oblicza³a podane liczby. Dziêki czemu dodanie liczb nie bêdzie wygl±da³o tak: 2 + 2 = 4 +2 = 6. Rozumiecie? Mam nadziejê, ¿e tak. Teraz wiêc pora na Button18Click, który wykonuje dzia³anie. Jest wiêc to przycisk równa siê (=). Jeszcze tylko jedna uwaga: ¿eby wykonaæ proceurê z obiektu potrzebne jest podanie jaki obiekt to wykona³ (Sender). W wielu procedurach obiektów jest to potrzebne.</p><table border=0 width=100% style="border: 1 solid #2078A8" cellspacing=0 cellpadding=0 bgcolor=#E0F0F8><tr><td width=100%><div align=center><center><table border=0 width=269 cellspacing=0 cellpadding=0><tr><td width=267 height=8><p class=9ptV></td></tr><tr><td width=267 valign=top><p class=9ptV align=left><font color=#2078A8>procedure TForm1.Button18Click(Sender: TObject);<br> begin<br> if dzialanie = '+' then<br> liczba := liczba + StrToFloat(Edit1.Text);<br> if dzialanie = '-' then<br> liczba := liczba - StrToFloat(Edit1.Text);<br> if dzialanie = '*' then<br> liczba := liczba * StrToFloat(Edit1.Text);<br> if dzialanie = '/' then<br> liczba := liczba / StrToFloat(Edit1.Text);<br> dzialanie := '';<br> Edit1.Text := FloatToStr(liczba);<br> end;</font></td></tr><tr><td width=267 height=8><p class=9ptV></td></tr></table></center></div></td></tr></table><p class=9ptV align=justify>Program sprawdza jakie dzia³anie do wykonania jest w pamiêci i oblicza je. Pó¼niej czy¶ci warto¶æ Stringa dzia³anie i wy¶wietla wynik w Edit1.<br> Poeiwm wam w tajemnicy, ¿e przeszli¶my ju¿ najtrudniejsze kawa³ki tej czê¶ci kursu. Teraz na koniec trzy proste procedury dzia³añ: kwadrat liczby, procent z liczby i odwrotno¶æ liczby. Wiêc po kolei:</p><table border=0 width=100% style="border: 1 solid #2078A8" cellspacing=0 cellpadding=0 bgcolor=#E0F0F8><tr><td width=100%><div align=center><center><table border=0 width=269 cellspacing=0 cellpadding=0><tr><td width=267 height=8><p class=9ptV></td></tr><tr><td width=267 valign=top><p class=9ptV align=left><font color=#2078A8>procedure TForm1.Button19Click(Sender: TObject);<br> begin<br> Edit1.Text := FloatToStr(StrToFloat(Edit1.Text) * StrToFloat(Edit1.Text));<br> dzialanie := '';<br> reset := false;<br> end;<br> <br> procedure TForm1.Button20Click(Sender: TObject);<br> begin<br> Edit1.Text := FloatToStr(liczba * StrToFloat(Edit1.Text) / 100);<br> dzialanie := '';<br> reset := false;<br> end;<br> <br> procedure TForm1.Button21Click(Sender: TObject);<br> begin<br> Edit1.Text := FloatToStr(1 / StrToFloat(Edit1.Text));<br> dzialanie := '';<br> reset := false;<br> end;</font></td></tr><tr><td width=267 height=8><p class=9ptV></td></tr></table></center></div></td></tr></table><p class=9ptV align=justify>To by by³o ju¿ wszystko z naszego kalkulatora. Nie jest on super zaawansowany, ale totalne gówno te¿ nie jest. :) My¶lê, ¿e po tej lekcji du¿o siê nauczycie. Pamiêtajcie jednak: najwa¿niejsza K**** jest zaprawa... ekhmm... najwa¿niejsze jest pisanie w³asnych programów. Wtedy najwiêcej siê uczycie.<table border=0 width=100% cellspacing=0 cellpadding=0><tr><td width=100%><p align=right class=9ptV><font face=Arial size=1 color=#000000><img border=0 src=../img/kwad_03.gif width=8 height=8> </font><a href=http://www.magazin.prv.pl class=link><font face=Arial size=1 color=#2078A8>MZ</font></a></p></td></tr></table></td></tr></table></td></tr><tr><center><td width=100% height=20 valign=bottom></center><div align=center><table border=0 width=586 height=20 cellspacing=0 cellpadding=0><tr><td width=135 background=../img/line3.gif><p align=right><img border=0 src=../img/line.gif width=9 height=20></td><center><td width=310 valign=bottom><p align=center class=9ptV><a href=25.htm class=link2><font color=#2078A8>poprzednia strona</font></a><font color=#4048A8> </font><font color=#2078A8>::</font><font color=#4048A8> </font><a href=spis.htm class=link2><font color=#2078A8>spis tre¶ci</font></a><font color=#4048A8> </font><font color=#2078A8>::</font><font color=#4048A8> </font><a href=27.htm class=link2><font color=#2078A8>nastêpna strona</font></a></td><td width=135 background=../img/line3.gif><img border=0 src=../img/line2.gif width=9 height=20></td></tr></table></center></div></td></tr><tr><td width=100% height=65 valign=top background=../img/003c.png><div align=center><center><table border=0 width=592 cellspacing=0 cellpadding=0 height=55><tr><td width=590 height=55><p align=center class=9ptV><b><font color=#FFFFFF>WSZELKIE PRAWA ZASTRZE¯ONE :: COPYRIGHT &copy; LOOPUSNET/MAGAZIN 2001-2002</font></b></td></tr></table></center></div></td></tr></table></div></body></html>