<html><head><meta http-equiv=Content-Type content="text/html; charset=iso-8859-2"><link rel=stylesheet href=magazin.css TYPE=text/css><title>MagaZin #14 :: grudzieñ 2002</title></head><body link=#478DE7 vlink=#478DE7 alink=#478DE7 topmargin=0 bottommargin=0 bgcolor=#000000><div align=center><table border=0 width=650 style="border-style: solid; border-width: 0" cellspacing=0 cellpadding=0 bgcolor=#FFFFFF><tr><td width=100% height=70 valign=middle background=../img/003b.png><div align=center><table border=0 width=550 cellspacing=0 cellpadding=0 height=28><tr><td width=550 align=center height=26 valign=bottom><p class=9ptV align=right><font color=#FFFFFF><b>MAGAZIN #14 :: STRONA 25</b></font></td></tr></table></div></td></tr><center><tr><td width=100% height=20 valign=bottom></center><div align=center><table border=0 width=586 height=20 cellspacing=0 cellpadding=0><tr><td width=135 background=../img/line3.gif><p align=right><img border=0 src=../img/line.gif width=9 height=20></td><center><td width=310 valign=bottom><p align=center class=9ptV><a href=24.htm class=link2><font color=#2078A8>poprzednia strona</font></a><font color=#4048A8> </font><font color=#2078A8>::</font><font color=#4048A8> </font><a href=spis.htm class=link2><font color=#2078A8>spis tre¶ci</font></a><font color=#4048A8> </font><font color=#2078A8>::</font><font color=#4048A8> </font><a href=26.htm class=link2><font color=#2078A8>nastêpna strona</font></a></td><td width=135 background=../img/line3.gif><img border=0 src=../img/line2.gif width=9 height=20></td></tr></table></center></div></td></tr><center><tr><td width=100% height=5 valign=top><p class=9ptV>&nbsp;</td></tr><tr><td width=100% height=5 valign=top><div align=center><center><table border=0 width=590 cellspacing=0 cellpadding=0><tr><td width=590 valign=top class=9ptV height=20 style="border-bottom: 1 solid #2078A8" colspan=2><b><font color=#009830><img border=0 src=../img/kwad.gif width=8 height=8> </font></b><b><font color=#2078A8>KURSY</font></b></td></tr><tr><td width=528><p><font face=Impact size=7 color=#E0F0F8><span style="background-color: #2078A8">K</span></font><font face=Impact size=7 color=#000000>urs C++, cz. 7</font></td></center></center><td width=58 valign=middle></td></tr><center><center><tr><td width=588 valign=bottom class=9ptV height=20 colspan=2><a href=mailto:ralphick@poczta.onet.pl class=link2><b><font color=#2078A8>Ralfik</font></b></a></td></tr><tr><td width=588 height=10 colspan=2></td></tr></table></center></div></center></td></tr><tr><td width=100% height=21 valign=top><center><table border=0 width=600 cellspacing=0 cellpadding=6 height=20 bgcolor=#FFFFFF><tr><td width=285 height=20 valign=top class=9pt></center><p class=9ptV align=justify><b>Wska¼niki</b><br> <br> <font color=#2078A8>Ju¿ siódmy raz spotykamy siê na ³amach MagaZinu. Siódemka to magiczna cyfra, wiêc zajmiemy siê równie¿ czym¶ "magicznym" a mianowicie wska¼nikami.</font><br> <br> <img border=0 src=../img/003_w.gif style="float: left" width=39 height=38>ska¼nik to taki sprytny typ danych, który "wskazuje" na pewne miejsce w pamiêci, gdzie znajduje siê dana okre¶lonego typu. "Wskazuje" oznacza tak naprawdê, ¿e przechowuje adres tego miejsca w pamiêci.<br> Wska¼nik do liczb typu int tworzy siê nastêpuj±co:<br> <br><table border=0 width=100% style="border: 1 solid #2078A8" cellspacing=0 cellpadding=0 bgcolor=#E0F0F8><tr><td width=100%><div align=center><center><table border=0 width=269 cellspacing=0 cellpadding=0><tr><td width=267 height=8><p class=9ptV></td></tr><tr><td width=267 valign=top><p class=9ptV align=left><font color=#2078A8>int *wsk; // wsk jest wska¼nikiem do liczb typu int</font></td></tr><tr><td width=267 height=8><p class=9ptV></td></tr></table></center></div></td></tr></table><p class=9ptV align=center><img border=0 src=../img/c++.gif width=185 height=175><p class=9ptV align=justify>Je¶li mamy jak±¶ zmienn± typu int, mo¿emy ustawiæ wska¼nik, aby na ni± wskazywa³. Sprowadza siê to do podstawienia pod warto¶æ wska¼nika adresu tej zmiennej. Oprócz tego mo¿na odczytaæ lub zmieniæ warto¶æ zmiennej, na któr± wskazuje wska¼nik. Sam wska¼nik nie posiada warto¶ci wskazywanej zmiennej, lecz jej adres - aby odczytaæ warto¶æ wskazywanej zmiennej nale¿y u¿yæ operatora *. Operatora tego u¿yjemy te¿, je¿eli bêdziemy chcieli zmieniæ dan±, na któr± pokazuje wska¼nik. Poni¿szy kod powinien to dobrze zilustrowaæ:<br> <br><table border=0 width=100% style="border: 1 solid #2078A8" cellspacing=0 cellpadding=0 bgcolor=#E0F0F8><tr><td width=100%><div align=center><center><table border=0 width=269 cellspacing=0 cellpadding=0><tr><td width=267 height=8><p class=9ptV></td></tr><tr><td width=267 valign=top><p class=9ptV align=left><font color=#2078A8>#include &lt;iostream.h><br> main()<br> {<br> int a, b, *wsk; /* a, b - zmienne typu int, wsk - wska¼nik do typu int*/<br> a = 5;<br> b = 20;<br> cout&lt;&lt;"Zmienna a ma wartosc "&lt;&lt; a &lt;&lt;endl;<br> cout&lt;&lt;"Zmienna b ma wartosc "&lt;&lt; b &lt;&lt;endl;<br> cout&lt;&lt;"Wskaznik ma wartosc "&lt;&lt; wsk &lt;&lt;endl; /* Warto¶æ wska¼nika to warto¶æ adresu w pamiêci ("na jaki wska¼nik wskazuje") */<br> <br> wsk = &amp;a; /* operator &amp; zwraca adres zmiennej, wska¼nik zostaje ustawiony tak, aby pokazywa³ na zmienn± a */<br> cout &lt;&lt; "Teraz wskaznik pokazuje na zmienna a - Wskaznik ma wartosc "&lt;&lt; wsk &lt;&lt;endl; /* Warto¶æ wska¼nika to warto¶æ adresu w pamiêci ("na jaki wska¼nik wskazuje") */<br> cout &lt;&lt; "Wartosc zmiennej, na ktora pokazuje wskaznik, wynosi " &lt;&lt; *wsk &lt;&lt; endl;<br> *wsk = 10; // Zmiana warto¶ci, na jak± pokazuje wska¼nik<br> cout &lt;&lt; "Zmiana wartosci, na jaka pokazuje wskaznik; Wartosc zmiennej, na ktora pokazuje wskaznik, wynosi " &lt;&lt; *wsk &lt;&lt; endl;<br> cout&lt;&lt;"Zmienna a ma wartosc "&lt;&lt; a &lt;&lt;endl;<br> <br> wsk = &amp;b; /* operator &amp; zwraca adres zmiennej, wska¼nik zostaje ustawiony tak, aby pokazywa³ na zmienn± a */<br> cout &lt;&lt; "Teraz wskaznik pokazuje na zmienna b - Wskaznik ma wartosc "&lt;&lt; wsk &lt;&lt;endl; /* Warto¶æ wska¼nika to warto¶æ adresu w pamiêci ("na jaki wska¼nik wskazuje") */<br> cout &lt;&lt; "Wartosc zmiennej, na ktora pokazuje wskaznik, wynosi " &lt;&lt; *wsk &lt;&lt; endl;<br> <br> return 0;<br> }</font></td></tr><tr><td width=267 height=8><p class=9ptV></td></tr></table></center></div></td></tr></table><p class=9ptV align=justify>Wska¼niki s± bardzo fajn± spraw± i czêsto siê je wykorzystuje, ale z góry wszystkich uprzedzam, ¿e nie od razu zostaje siê mistrzem wska¼ników. Wska¼niki mog± sprawiaæ wiele problemów, szczególnie pocz±tkuj±cym programistom C++ (lub C, bo tam te¿ wystêpuj±). Ponadto b³êdy wynikaj±ce z niew³a¶ciwego u¿ycia wska¼ników, mog± byæ trudne do znalezienia.<br> <br> A teraz przyk³adów, gdzie wska¼niki mo¿na zastosowaæ:<br> <br> Wska¼nik do obiektów danego typu mo¿e pokazywaæ na obiekty tego typu zebrane w tablicy. Oprócz tego mo¿na w "elegancki" sposób poruszaæ siê wska¼nikiem po elementach tablicy:<br> w++; // Jeden element do przodu, to samo co w+=1; lub w=w+1;<br> w--; // Jeden element do ty³u, to samo co w-=1; lub w=w-1;<br> w+=n; // n elementów do przodu (n jest liczb± naturaln±), to samo co w=w+n;<br> w-=n; // n elementów do ty³u (n jest liczb± naturaln±), to samo co w=w-n;<br> <br> Poni¿szy program powinien pokazaæ, jak mo¿na "chodziæ" wska¼nikiem po tablicy. Oprócz funkcji main jest te¿ funkcja wypisz, która wypisuje warto¶æ wska¼nika (adres) i warto¶æ, na któr± wska¼nik pokazuje. Wypisywanie tych dwóch rzeczy umie¶ci³em w funkcji, bo bêdê z niej korzysta³ wielokrotnie, wiêc po co kilka razy pisaæ w main() ten sam kod - lepiej zrobiæ z niego funkcjê i wywo³ywaæ w odpowiednich momentach.<br> <br><table border=0 width=100% style="border: 1 solid #2078A8" cellspacing=0 cellpadding=0 bgcolor=#E0F0F8><tr><td width=100%><div align=center><center><table border=0 width=269 cellspacing=0 cellpadding=0><tr><td width=267 height=8><p class=9ptV></td></tr><tr><td width=267 valign=top><p class=9ptV align=left><font color=#2078A8>#include &lt;iostream.h><br> <br> void wypisz(int *p)<br> {</font></td></tr><tr><td width=267 height=8><p class=9ptV></td></tr></table></center></div></td></tr></table><p>&nbsp;</td><td width=285 height=20 valign=top class=9pt><table border=0 width=100% style="border: 1 solid #2078A8" cellspacing=0 cellpadding=0 bgcolor=#E0F0F8><tr><td width=100%><div align=center><center><table border=0 width=269 cellspacing=0 cellpadding=0><tr><td width=267 height=8><p class=9ptV></td></tr><tr><td width=267 valign=top><p class=9ptV align=left><font color=#2078A8>cout &lt;&lt; "Wartosc wskaznika (adres, na jaki pokazuje) = "&lt;&lt; p &lt;&lt; endl;<br> cout &lt;&lt; "Wartosc obiektu, na jaki wskaznik pokazuje = "&lt;&lt; *p &lt;&lt; endl;<br> }<br> <br> main()<br> {<br> int tablica[10];<br> for(int i=0 ; i&lt;10 ; i++)<br> tablica[i] = i*10;<br> // Wype³niamy tablice liczbami 0, 10, 20, &#8230;, 90<br> <br> int *w; /* Jest nasz bohater, czyli wska¼nik do obiektów typu int*/<br> <br> w = tablica; /* oznacza to samo, co w = tablica[0]; czyli ustawienie wska¼nika na pierwszy element tablicy */<br> <br> wypisz(w);<br> w++;<br> /* Super sprawa - przesuwamy wska¼nik na nastêpny element tablicy!!!<br> Wska¼nik sam wie, jaki jest adres nastêpnego elementu - sam go sobie oblicza, bo zna swój dotychczasowy adres oraz typ, na jaki pokazuje (pokazuje na typ int, wiêc wie ile bajtów w pamiêci bêdzie jedna zmienna tego typu zajmowaæ)<br> Wska¼nik w pokazuje na element tablica[1]<br> */<br> wypisz(w); /* Rzeczywi¶cie, wska¼nik pokazuje na drugi element tablicy */<br> <br> w+=3;<br> /* A teraz przesuwamy wska¼nik o 3 elementy dalej - pokazuje teraz na pi±ty element tablicy, czyli element tablica[4] */<br> wypisz(w);<br> <br> wypisz(w+2); /* A teraz wysy³amy do funkcji wska¼nik równy wska¼nikowi w przesuniêtemu o 2, sam wska¼nik w nie ulega przesuniêciu*/<br> <br> wypisz(w); /* Faktycznie wska¼nik w nie przesun±³ siê o dalsze 2 pozycje*/<br> <br> return 0;<br> }</font></td></tr><tr><td width=267 height=8><p class=9ptV></td></tr></table></center></div></td></tr></table><p class=9ptV align=justify>Podobnie, jak w przypadku tablic, tak i w przypadku wska¼ników - sami musimy martwiæ siê, czy wska¼nik pokazuje jeszcze na jaki¶ element tablicy, czy te¿ pokazuje ju¿ na elementy le¿±ce poza tablic±.<br> <br> Wska¼niki mo¿emy stosowaæ, je¶li chcemy, aby funkcja mog³a modyfikowaæ przekazane parametry. Oprócz wska¼ników, mo¿na do tego celu u¿yæ przekazywania argumentów przez referencjê (referencje to zmienne, które s± jakby "uchwytami" do innych zmiennych i ka¿da modyfikacja referencji poci±gnie za sob± modyfikacjê oryginalnych zmiennych)<br> <br><table border=0 width=100% style="border: 1 solid #2078A8" cellspacing=0 cellpadding=0 bgcolor=#E0F0F8><tr><td width=100%><div align=center><center><table border=0 width=269 cellspacing=0 cellpadding=0><tr><td width=267 height=8><p class=9ptV></td></tr><tr><td width=267 valign=top><p class=9ptV align=left><font color=#2078A8>#include &lt;iostream.h><br> <br> void wypisz(int z)<br> {<br> cout &lt;&lt; "Wartosc zmiennej = " &lt;&lt; z &lt;&lt; endl;<br> }<br> <br> <br> void zwieksz_o_1(int a)<br> {<br> // Przekazywanie przez wartosc<br> a = a+1;<br> cout&lt;&lt;"W funkcji \"zwieksz_o_1\": a = " &lt;&lt; a &lt;&lt; endl;<br> }<br> <br> void naprawde_zwieksz_o_1(int *a)<br> {<br> // Uzywamy wskaznika<br> *a = *a+1;<br> cout &lt;&lt; "W funkcji \"naprawde_zwieksz_o_1\": a = "&lt;&lt; *a &lt;&lt; endl;<br> }<br> <br> void znowu_naprawde_zwieksz_o_1 (int &amp;a)<br> {<br> /* Uzywamy referencji - charakterystyczny znaczek &amp;<br> &amp; uzywany jest tez jako operator adresu */<br> a = a+1;<br> cout&lt;&lt;"W funkcji \"znowu_naprawde_zwieksz_o_1\": a = " &lt;&lt; a &lt;&lt; endl;<br> }<br> <br> main()<br> {<br> int b = 10;<br> wypisz(b);<br> <br> zwieksz_o_1(b);&nbsp;<br> wypisz(b); /* b jest równe 10, czyli nie zosta³o zwiêkszone*/<br> <br> naprawde_zwieksz_o_1(&amp;b); /* &amp;b - adres b, czyli wska¼nik na b*/<br> wypisz(b); // b jest równe 11, czyli zosta³o zwiêkszone<br> <br> znowu_naprawde_zwieksz_o_1(b);<br> wypisz(b); // b jest równe 12, czyli zosta³o zwiêkszone<br> <br> return 0;<br> }</font></td></tr><tr><td width=267 height=8><p class=9ptV></td></tr></table></center></div></td></tr></table><p class=9ptV align=justify>Wska¼niki u¿ywane s± równie¿ przy tzw. dynamicznej alokacji pamiêci. Tworz±c tablicê musimy zawsze podaæ jej dok³adny rozmiar, przy czym nie mo¿e byæ okre¶lony przez jak±¶ zmienn±, tylko byæ wyra¿ony sta³±. Je¿eli nie znamy dok³adnego rozmiaru tablicy w momencie kompilacji, a dopiero podczas wykonania programu - nale¿y dynamicznie zarezerwowaæ tablicê o danym rozmiarze. Tym zagadnieniem oraz innymi rzeczami zwi±zanymi ze wska¼nikami (np. wska¼nikami do funkcji) zajmiemy siê nastêpnym razem.<div align=center><table border=0 width=100% cellspacing=0 cellpadding=0><tr><td width=100%><p align=right class=9ptV><font face=Arial size=1 color=#000000><img border=0 src=../img/kwad_03.gif width=8 height=8> </font><a href=http://www.magazin.prv.pl class=link><font face=Arial size=1 color=#2078A8>MZ</font></a></p></td></tr></table></div></td></tr></table></td></tr><tr><center><td width=100% height=20 valign=bottom></center><div align=center><table border=0 width=586 height=20 cellspacing=0 cellpadding=0><tr><td width=135 background=../img/line3.gif><p align=right><img border=0 src=../img/line.gif width=9 height=20></td><center><td width=310 valign=bottom><p align=center class=9ptV><a href=24.htm class=link2><font color=#2078A8>poprzednia strona</font></a><font color=#4048A8> </font><font color=#2078A8>::</font><font color=#4048A8> </font><a href=spis.htm class=link2><font color=#2078A8>spis tre¶ci</font></a><font color=#4048A8> </font><font color=#2078A8>::</font><font color=#4048A8> </font><a href=26.htm class=link2><font color=#2078A8>nastêpna strona</font></a></td><td width=135 background=../img/line3.gif><img border=0 src=../img/line2.gif width=9 height=20></td></tr></table></center></div></td></tr><tr><td width=100% height=65 valign=top background=../img/003c.png><div align=center><center><table border=0 width=592 cellspacing=0 cellpadding=0 height=55><tr><td width=590 height=55><p align=center class=9ptV><b><font color=#FFFFFF>WSZELKIE PRAWA ZASTRZE¯ONE :: COPYRIGHT &copy; LOOPUSNET/MAGAZIN 2001-2002</font></b></td></tr></table></center></div></td></tr></table></div></body></html>