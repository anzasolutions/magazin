<html><head><meta http-equiv=Content-Type content="text/html; charset=iso-8859-2"><link rel=stylesheet href=magazin.css TYPE=text/css><title>MagaZin #11 :: czerwiec/lipiec 2002</title></head><body link=#478DE7 vlink=#478DE7 alink=#478DE7 topmargin=0 bottommargin=0 bgcolor=#000000><div align=center><center><table border=0 width=650 style="border-style: solid; border-width: 0" cellspacing=0 cellpadding=0 height=100% bgcolor=#FFFFFF><tr><td width=100% height=20 valign=top></td></tr></center><tr><td width=100% height=25 valign=middle bgcolor=#4048A8><div align=center><table border=0 width=583 cellspacing=0 cellpadding=0><center><td width=400 class=9ptV valign=bottom colspan=3><p class=9ptV><font color=#FFFFFF><b>MAGAZIN #11 :: STRONA 18</b></font></td></center><td width=133 class=9ptV valign=bottom><p align=right><font color=#FFFFFF><img border=0 src=../img/direct.gif width=7 height=10><img border=0 src=../img/direct3.gif width=7 height=10><img border=0 src=../img/direct2.gif width=7 height=10></font></td><center><td width=8 class=9ptV valign=bottom></td><td width=55 class=9ptV><b><font color=#FFFFFF>KOMPUTER</font></b></td></table></center></div></td></tr><center><tr><td width=100% height=5 valign=top><p class=9ptV>&nbsp;</td></tr><tr><td width=100% height=20 valign=bottom></center><div align=center><table border=0 width=586 height=20 cellspacing=0 cellpadding=0><tr><td width=135 background=../img/line3.gif><p align=right><img border=0 src=../img/line.gif width=9 height=20></td><center><td width=310 valign=bottom><p align=center class=9ptV><a href=17.htm class=link2><font color=#4048A8>poprzednia strona</font></a><font color=#4048A8> :: </font><a href=spis.htm class=link2><font color=#4048A8>spis tre¶ci</font></a><font color=#4048A8> :: </font><a href=19.htm class=link2><font color=#4048A8>nastêpna strona</font></a></td><td width=135 background=../img/line3.gif><img border=0 src=../img/line2.gif width=9 height=20></td></tr></table></center></div></td></tr><center><tr><td width=100% height=5 valign=top><p class=9ptV>&nbsp;</td></tr><tr><td width=100% height=21 valign=top><div align=center><center><table border=0 width=600 cellspacing=0 cellpadding=6 height=20 bgcolor=#FFFFFF><tr><td width=285 height=20 valign=top class=9pt><div align=center><center><table border=0 width=100% cellspacing=0 cellpadding=0><tr><td width=100% valign=top class=9ptV height=15><i>Software</i></td></tr><tr><td width=100%><p class=u>Kurs C++ #4</td></tr></table></center></div><p class=9ptV align=justify><b>Tablice</b><br> <br> Witajcie po raz kolejny. Dzisiaj zajmiemy siê tablicami, czyli uporz±dkowanymi zbiorami elementów jednego typu/klasy. Tablice naprawdê u³atwiaj± ¿ycie, poniewa¿ nie trzeba siê pos³ugiwaæ setkami zmiennych, lecz wystarczy je umie¶ciæ w tablicy i odwo³ywaæ siê do ka¿dej z nich z osobna poprzez podanie indeksu - pozycji, na której znajduje siê w tablicy. Tablice wystêpuj± w wielu jêzykach programowania; s± np. w Basicu, Pascalu, JavaScript, PHP itp.<br> <br> Zdefiniowanie tablicy 10 liczb typu int mo¿na zrobiæ nastêpuj±co:<br> <br> <font color=#4048A8>int tablica[10];</font><br> <br> Teraz do ka¿dego elementu tablicy mo¿na siê odwo³aæ podaj±c nazwê tablicy i indeks elementu w nawiasach kwadratowych. W przypadku powy¿szej tablicy mo¿emy odwo³aæ siê do 10 liczb int nastêpuj±co:<br> <br> tablica[0] - pierwszy element tablicy<br> tablica[1] - drugi element tablicy<br> tablica[2] - trzeci element tablicy<br> tablica[3] - czwarty element tablicy<br> tablica[4] - pi±ty element tablicy<br> tablica[5] - szósty element tablicy<br> tablica[6] - siódmy element tablicy<br> tablica[7] - ósmy element tablicy<br> tablica[8] - dziewi±ty element tablicy<br> tablica[9] - dziesi±ty element tablicy<br> <br> Wa¿ne jest, aby pamiêtaæ, ¿e elementy tablicy 10-elementowej indeksowane s± od 0 do 9.<br> <br> Najprostszy program, jaki przychodzi mi do g³owy, to wype³nienie tej tablicy liczbami od 0 do 9 i ich wy¶wietlenie (w tej samej pêtli)<br> <br> <font color=#4048A8>#include &lt;iostream.h><br> main()<br> {<br> int tablica[10];<br> for(int i=0 ; i&lt;10 ; i++)<br> {<br> tablica[i] = i;<br> cout&lt;&lt;"tablica["&lt;&lt;i&lt;&lt;"] = "&lt;&lt;i&lt;&lt;endl;<br> }<br> }</font><br> <br> Kolejna rzecz, o której musimy pamiêtaæ, to znajomo¶æ rozmiaru ka¿dej tablicy. C++ umo¿liwia nam odwo³ywanie siê do "elementów" tablicy, których indeks jest wiêkszy lub równy rozmiarowi tablicy, czyli poprawne s± odwo³ania:<br> <br> tablica[10]<br> tablica[11]<br> itp.<br> <br> Oczywi¶cie nasza tablica ma tylko 10 elementów, wiêc powy¿sze odwo³ania tak naprawdê nie bêd± dotyczyæ ¿adnego elementu, a jedynie miejsc w pamiêci le¿±cych za tablic±. O ile operacja odczytu takich "elementów" nie jest specjalnie niebezpieczna - co najwy¿ej otrzymamy jakie¶ dodatkowe, nikomu niepotrzebne liczby, to operacja przypisania takim "elementom" tablicy jakich¶ warto¶ci mo¿e byæ katastrofalna w skutkach. Takie miejsca w pamiêci nie przechowuj± przecie¿ warto¶ci zmiennych w naszej tablicy, lecz jakie¶ inne dane, np. dane zawarte w innych zmiennych lub w innej tablicy. Choæ wydaje siê to dziwne, ¿e C++ nie sprawdza rozmiaru tablicy, gdy odwo³ujemy siê do zmiennej w tej tablicy, to jednak dziêki temu oszczêdza siê czas i programy mog± dzia³aæ szybciej.</td><td width=285 height=20 valign=top class=9pt></center></center><p class=9ptV align=justify>Poza tym zawsze mo¿na napisaæ sobie w³asn± klasê tablica, która bêdzie dba³a o sprawdzanie zakresu, przy odwo³ywaniu siê do odpowiednich elementów.<br> <br> Pora na kolejny program:<br> <br> <font color=#4048A8>#include &lt;iostream.h><br> <br> przesun_w_prawo(int tablica[], int rozmiar)<br> {<br> int e2=tablica[0], e1;<br> for(int i=0 ; i&lt;rozmiar ; i++)<br> {<br> e1=e2;<br> e2=tablica[(i+1)%rozmiar];<br> tablica[(i+1)%rozmiar]=e1;<br> }<br> }<br> <br> wypisz(int tablica[], int rozmiar)<br> {<br> for(int i=0; i&lt;rozmiar; i++)<br> cout&lt;&lt;"tablica["&lt;&lt;i&lt;&lt;"] = "&lt;&lt;tablica[i]&lt;&lt;endl;<br> }<br> <br> main()<br> {<br> int t[6];<br> cout&lt;&lt;"Przed przesunieciem"&lt;&lt;endl;<br> for(int i=0; i&lt;6; i++)<br> t[i]=i*10;<br> wypisz(t, 6);<br> przesun_w_prawo(t, 6);<br> cout&lt;&lt;"Po przesunieciu"&lt;&lt;endl;<br> wypisz(t, 6);<br> return 0;<br> }</font><br> <br> Funkcja przesun_w_prawo(int tablica[], int rozmiar) przesuwa elementy podanej tablicy o 1 w prawo (tzn. pierwszy bêdzie drugim, drugi trzecim, ..., ostatni bêdzie pierwszym). Oprócz przekazania tablicy potrzebne jest tak¿e przekazanie rozmiaru tablicy. Wszelkie operacje, które zostan± przeprowadzone w funkcji na elementach przyjêtej tablicy, zostan± przeprowadzone na tablicy, któr± podano jako parametr aktualny funkcji, czyli zmieni± przekazan± tablicê. Komentarza mo¿e wymagaæ % - operator reszty z dzielenia. Dziêki jego wykorzystaniu w wyra¿eniu tablica[(i+1)%rozmiar] po doj¶ciu do koñca tablicy kolejnym indeksem bêdzie 0, wiêc odwo³anie do istniej±cego (pierwszego) elementu tablicy.<br> Funkcja wypisz(int tablica[], int rozmiar) ma charakter kosmetyczny - wypisuje elementy przekazanej tablicy.<br> I na koniec opis tego, co mamy w main: Tworzymy tablicê 6 liczb int i wype³niamy j± liczbami 0, 10, 20, 30, 40, 50, a nastêpnie wypisujemy je. Pó¼niej wykorzystujemy funkcjê przesun_w_prawo do przesuniêcia elementów tablicy o jeden w prawo i ponownie je wypisujemy.<br> Na zakoñczenie mo¿na wykorzystaæ funkcjê przesun_w_prawo do napisania swojej funkcji przesuwaj±cej tablicê o dowoln± ilo¶æ miejsc w prawo - po prostu nale¿y w niej odpowiedni± ilo¶æ razy wywo³aæ funkcjê przesun_w_prawo. (a dok³adniej tyle razy, ile wynosi liczba miejsc o któr± chcemy przesun±æ tablicê w prawo). Oczywi¶cie jeszcze lepszym rozwi±zaniem bêdzie napisanie osobnej funkcji zajmuj±cej siê przesuwaniem o n-miejsc, która nie wykorzystuje ¿mudnego przesuwania tablicy po jednym elemencie.</p><p class=9ptV align=right><font color=#000000><b>Ralfik</b><br> </font><a href=mailto:ralphick@poczta.onet.pl class=link2><font color=#4048A8>ralphick@poczta.onet.pl</font></a></td></tr></table></div></td></tr><tr><center><td width=100% height=20 valign=bottom></center><div align=center><table border=0 width=586 height=20 cellspacing=0 cellpadding=0><tr><td width=135 background=../img/line3.gif><p align=right><img border=0 src=../img/line.gif width=9 height=20></td><center><td width=310 valign=bottom><p align=center class=9ptV><a href=17.htm class=link2><font color=#4048A8>poprzednia strona</font></a><font color=#4048A8> :: </font><a href=spis.htm class=link2><font color=#4048A8>spis tre¶ci</font></a><font color=#4048A8> :: </font><a href=19.htm class=link2><font color=#4048A8>nastêpna strona</font></a></td><td width=135 background=../img/line3.gif><img border=0 src=../img/line2.gif width=9 height=20></td></tr></table></center></div></td></tr><tr><td width=100% height=20 valign=top>&nbsp;</td></tr><tr><td width=100% height=25 valign=middle bgcolor=#4048A8><div align=center><table border=0 width=583 cellspacing=0 cellpadding=0><center><td width=596 class=9ptV valign=bottom colspan=6><p class=9ptV align=center><font color=#FFFFFF><b>WSZELKIE PRAWA ZASTRZE¯ONE :: COPYRIGHT &copy; LOOPUSNET/MAGAZIN 2001-2002</b></font></td></center><center></table></center></div></td></tr><tr><td width=100% height=20 valign=top>&nbsp;</td></tr></table></div></body></html>