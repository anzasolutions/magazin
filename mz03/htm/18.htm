<html><head><meta http-equiv=Content-Type content="text/html; charset=iso-8859-2"><link rel=stylesheet href="magazin.css" TYPE="text/css"><title>MagaZin #3 :: sierpieñ 2001</title></head><body link=478DE7 vlink=478DE7 alink=478DE7 topmargin=0 bottommargin=0 bgcolor="#000000"><div align=center><center><table border=0 width=700 cellspacing=0 cellpadding=0 height=250 bgcolor="#FFFFFF"><tr><td width=697 height=154 valign=top><img border=0 src="../img/up.png" width=700 height=150></td></tr><tr><td width=697 height=1 valign=top><div align=center><center><table border=0 width="92%" cellspacing=0 cellpadding=4><tr><td width="10%"><a href="17.htm"><img border=0 src="../img/4.gif" width=50 height=25 align=right></a></td><td width="23%"><font face=Arial size=1>poprzednia</font></td><td width="33%"><p align=center><a href="spis.htm"><img border=0 src="../img/6.gif" width=200 height=20></a></td></center></center><td width="23%"><p align=right><font size=1 face=Arial>nastêpna</font></td><td width="10%"><a href="19.htm"><img border=0 src="../img/3.gif" width=50 height=25></a></td></tr></table></div></td></tr><center><tr><td width=697 height=83 valign=top><div align=center><center><table border=0 width="92%" height=1 cellspacing=10 cellpadding=2><tr><td width="100%" height=5 valign=top colspan=2></td></tr><tr><td width="100%" height=16 valign=top bgcolor="#000000" colspan=2><img border=0 src="../img/10.gif" width=225 height=14></td></tr><tr><td width="100%" height=1 valign=top colspan=2><font face=Arial size=2><br></font><div align=center><center><table border=0 width="100%" cellspacing=0 cellpadding=0><tr><td width="64%" valign=top height=30><font class=u>System plików Linuxa</font></td></center></center></center><td width="36%" valign=top height=30><p align=right></td></tr></table></div><center><center></center></center></td></tr><tr><td width="50%" height=112 valign=top><p align=justify><font class=9pt>Znacie anegdotê o facecie, który, chc±c uporz±dkowaæ swój twardy dysk, utworzy³ katalog exe i umie¶ci³ w nim wszystkie pliki *.exe, nastêpnie w katalogu dll wszystkie pliki *.dll i tak dalej. Je¿eli uwa¿acie, ¿e to zabawne, przygotujcie siê na szok! Tak bowiem mniej wiêcej zorganizowane jest drzewo katalogów Linuxa (i ka¿dego innego Unixa).<br><br><b>Jak to drzewiej bywa³o</b><br><br>Czyli dlaczego system plików, czyli organizacja dysku(ów) Unixa tak bardzo ró¿ni siê od organizacji plików w dowolnym systemie klasy PC (dziadek DOS, Windows 9X, OS/2)?&nbsp;<br> Dawno, dawno temu, w okolicach drugiej po³owy lat osiemdziesi±tych XX wieku, w domach naszych pradziadków królowa³y komputery o¶miobitowe. Nieliczni szczê¶liwcy dysponowali pora¿aj±cym swymi osi±gami sprzêtem klasy XT czy AT. Ówczesne komputery z rzadka wyposa¿ane by³y w twarde dyski, w wiêkszo¶ci przodkom naszym wystarczyæ musia³y dyskietki sto kilkadziesi±t KB (Amstrad) czy ca³e 360 KB (PC XT). Taka dyskietka mie¶ci³a z regu³y jeden tylko program, np. edytor tekstu i zawiera³a nieco pustego miejsca na pliki w³asne u¿ytkownika. Potem, w momencie upowszechnienia twardych dysków i &quot;wynalezieniu'' katalogów dyskowych, przeniesiono stare nawyki do nowych warunków. I tak w z³otej erze dosa 5.0 dalej ka¿dy program mieszka³ sobie spokojnie w swoim podkatalogu dysku C: razem z plikami przezeñ tworzonymi. I ten schemat przetrwa³ praktycznie do dnia dzisiejszego, z niewielkimi modyfikacjami jakimi jest wydzielenie katalogu Moje Dokumenty na pliki u¿ytkownika.&nbsp; <br>Mniej wiêcej w tym samym czasie, w jakim zaczyna siê poprzedni paragraf, ,,elita'' skomputeryzowanej czê¶ci spo³eczeñstwa, w wiêkszo¶ci sk³adaj±ca siê z pracowników naukowych uniwersytetów na wydzia³ach nauk ¶cis³ych, otoczona nimbem tajemnicy, pracuje na tekstowych terminalach podpiêtych do ,,du¿ego'' komputera. Korzystaj± z jednej z odmian systemu UNIX. UNIX umo¿liwia pracê wielu u¿ytkownikom na raz w taki sposób, aby nie wchodzili sobie nawzajem w paradê. Jak zaprojektowano system plików do tych potrzeb? Trzymanie plików danych w katalogu aplikacji oczywi¶cie nie wchodzi³o w rachubê ze wzglêdu na konieczno¶æ rozdzielenia danych u¿ytkowników.&nbsp; <br>UNIX posiada tylko jedno drzewo katalogowe i tylko jeden katalog g³ówny oznaczany znakiem /. Nie stosuje siê literowych oznaczeñ dysków jak w komputerach PC; zadaniem systemu jest ukrycie przed u¿ytkownikami fizycznego rozmieszczenia katalogów na partycjach czy dyskach. O tym, gdzie w drzewie katalogowym bêdzie podpiêta dana partycja decyduje administrator systemu, u¿ytkownicy nie musz± siê tym zajmowaæ. Ca³y system plików UNIXa jest zaprojektowany w celu maksymalnego uproszczenia ¿ycia u¿ytkownikom (co niestety oznacza czasem utrudnienie ¿ycia administratorowi). Za chwilê zobaczymy, dlaczego.&nbsp;<br><br>Jak ju¿ napisa³em, g³ówny katalog w UNIXie (root directory) oznacza siê symbolem /. W pocz±tkowych latach istnienia UNIXa drzewo podkatalogów / mia³o stosunkowo prost± strukturê:&nbsp;<br><br><font color="#478DE7">/bin</font> W tym katalogu umieszczane by³y wszystkie pliki wykonywalne, tj. zawieraj±ce kod programu. UNIX dostaj±c zlecenie wykonania programu (np. w postaci wpisania jego nazwy, czyli nazwy zawieraj±cego kod pliku w linii komend) przeszukuje katalogi wymienione w zmiennej ¶rodowiskowej $PATH. Je¿eli umieszczono tam katalog /bin, zawarte w nim programy mo¿na by³o uruchamiaæ po prostu wpisuj±c ich nazwê, niezale¿nie od katalogu w którym u¿ytkownik siê znajdowa³. Zmienna %PATH% istnieje równie¿ w DOSie i Windows, ale tam jej znaczenie jest mniejsze, jako ¿e programy s± porozrzucane po ró¿nych katalogach.<br><br><font color="#478DE7">/etc</font> Katalog ten zawiera wszystkie pliki konfiguracyjne programów. Mam nadziejê, ¿e zaczynacie rozumieæ, i¿ w tym szaleñstwie jest metoda i dlaczego na pocz±tku przytoczy³em rzeczon± anegdotkê. Tak wiêc pliki wykonywalne mamy w katalogu /bin, a ich konfiguracjê w /etc. Co dalej?&nbsp;<br><br><font color="#478DE7">/lib</font> Tutaj umieszczono biblioteki dzielone *.so. Zawieraj± one kod rozmaitych funkcji wspó³dzielony przez ró¿ne programy. W systemach pecetowych ich odpowiednikami s± pliki *.dll.<br><br><font color="#478DE7">/var</font> Ide± tego katalogu jest umieszczanie w nim czêsto zmieniaj±cych siê plików. S± to np. dane robocze programów generowane w trakcie ich pracy, logi systemowe (zapis przebiegu pracy systemu u³atwiaj±cy administratorowi wyszukiwanie wszystkich nieprawid³owo¶ci), poczta u¿ytkowników itp.<br><br><font color="#478DE7">/dev</font> Ten katalog zawiera mnóstwo specjalnych plików (pliki specjalne to jeden z typów plików dostêpnych w UNIXie. O rozmaitych typach plików bêdzie mowa dalej). Reprezentuj± one urz±dzenia dostêpne w systemie. Np. aby uzyskaæ dostêp do dyskietki (nie do plików na niej zawartych, ale do ,,surowych'' danych bajt po bajcie, sektor po sektorze) nale¿y u¿yæ urz±dzenia (pliku) /dev/fd0 dla pierwszej lub /dev/fd1 dla drugiej stacji. Urz±dzeñ tych jest ogromna ilo¶æ (w moim systemie 5391) i nie wszystkie s± wykorzystane.<br><br><font color="#478DE7">/tmp</font> Jest to katalog na pliki tymczasowe. W niektórych implementacjach UNIXa (nie w Linuksie) czyszczony przy starcie systemu.<br><br><font color="#478DE7">/u</font> pó¼niej przemianowany na /usr jest (a raczej by³) miejscem na pliki u¿ytkowników. Zwykle zawiera³ podkatalogi nazwane tak samo jak login u¿ytkownika, tzn u¿ytkownik jasiu trzyma³ swoje pliki w katalogu /usr/jasiu.<br><br>Tak by³o dawniej, kiedy jeszcze nie by³o sieci komputerowych, a system komputerowy sk³ada³ siê z g³ównej maszyny i paru terminali przy³±czonych przez z³±cza szeregowe. W momencie, gdy komputery stania³y na tyle, aby o¶rodek badawczy móg³ pozwoliæ sobie na zakup kilku maszyn, pojawi³ siê pomys³, aby programy zainstalowaæ tylko na jednej, a pozosta³ym udostêpniaæ je poprzez dyski sieciowe. Jednak system musia³o daæ siê ,,postawiæ'' równie¿ w sytuacji awaryjnej, bez sieci. Programy niezbêdne dla pracy systemu pozosta³y w /bin, /lib, /etc, natomiast pozosta³e przeniesiono do odpowiednich podkatalogów katalogu /usr (/usr/bin, /usr/lib itd.). Równie¿ maszyny ,,nieusieciowione'' skorzysta³y na tym o tyle, ¿e programy mog³y zostaæ rozbite na dwie partycje czy zgo³a dwa ró¿ne dyski (katalog / na dysku startowym, a /usr na jakim¶ innym) co w przypadku awarii jednego z nich pozwala³o zminimalizowaæ straty. Katalogi u¿ytkowników przeniesiono do /home, gdzie pozosta³y do dzi¶.&nbsp;<br> Co jednak, je¿eli chcemy zainstalowaæ jaki¶ program tylko na jednej maszynie, katalog /usr jest wspó³dzielony, a w katalogu / nie ma miejsca (zwykle partycje / s± bardzo ma³e)? Zdecydowano siê zatem wydzieliæ jeszcze jedno (to ju¿ ostatnie, obiecujê) poddrzewo, tym razem /usr/local. Zatem mamy katalogi /usr/local/bin, /usr/local/lib itd.&nbsp;<br><br>Linux zawiera jeszcze kilka katalogów o specjalnym przeznaczeniu. Krótko:&nbsp;<br><br><font color="#478DE7">/boot</font> Zawiera j±dro systemu<br><br><font color="#478DE7">/mnt</font> W podkatalogach /mnt ,,montuje'' siê tymczasowe systemy plików np. z dyskietki, CD-ROMu. Ka¿dy no¶nik, aby mog³ byæ udostêpniony, musi zostaæ podczepiony gdzie¶ w drzewie katalogów. S³u¿y do tego polecenie mount. Do zamountowanej dyskietki odwo³ujemy siê poprzez np. katalog /mnt/floppy.<br><br><font color="#478DE7">/opt</font> Katalog na du¿e pakiety oprogramowania umieszczane wzorem DOSa we w³asnych katalogach. Przewa¿nie pusty, bo nikt nie lubi DOSa :-)<br><br><font color="#478DE7">/proc</font> Zawiera pliki nios±ce sporo informacji o &quot;bebechach'' systemu. Poni¿ej dla przyk³adu wydruk z pliku /proc/cpuinfo:<br><br><font color="#478DE7">processor : 0<br> vendor_id : GenuineIntel<br> cpu family : 5<br> model : 2<br> model name : Pentium 75 - 200<br> stepping : 12<br> cpu MHz : 132.956482<br> fdiv_bug : no<br> hlt_bug : no<br> sep_bug : no<br> f00f_bug : yes<br> coma_bug : no<br> fpu : yes<br> fpu_exception : yes<br> cpuid level : 1<br> wp : yes<br> flags : fpu vme de pse tsc msr mce cx8<br> bogomips : 265.42</font><br><br><font color="#478DE7">/root</font> Katalog domowy superu¿ytkownika (roota). On Mo¿e Wszystko. On Jest Twoim Adminem.<br><br><font color="#478DE7">/sbin</font>, <font color="#478DE7">/usr/sbin</font> Programy do administracji systemem.<br><br><font color="#478DE7">/usr/share</font>, <font color="#478DE7">/usr/local/share</font> Pliki z danymi programów. Wiêksze programy nie sk³adaj± siê wy³±cznie z jednego pliku, wymagaj± do pracy dodatkowych plików z danymi. Tu jest ich miejsce.<br><br><font color="#478DE7">/usr/man</font>, <font color="#478DE7">/usr/local/man</font>, <font color="#478DE7">/usr/info</font>, <font color="#478DE7">/usr/local/info</font> Pomoc on-line. Je¿eli nie wiesz do czego s³u¿y np. komenda ed, napisz man ed. Je¿eli pragniesz zapoznaæ siê z bardziej szczegó³ow± hipertekstow± pomoc± do tego programu, napisz info ed.<br><br><font color="#478DE7">/usr/include</font>, <font color="#478DE7">/usr/local/include</font> Pliki nag³ówkowe dla kompilatora C, dotycz± odpowiednio bibliotek w /usr/lib i /usr/local/lib.<br><br><font color="#478DE7">/usr/games</font> :-)<br><br><font color="#478DE7">/usr/X11R6</font> X Window System<br><br><font color="#478DE7">/usr/doc</font> Dokumentacja programów w postaci plików tekstowych (readme.txt i takie).<br><br><font color="#478DE7">/usr/src</font> ¬ród³owe wersje programów. Tu zwykle le¿± ¼ród³a j±dra Linuxa.<br><br>Parê innych jeszcze, ale nie bêdziemy siê zanadto rozdrabniaæ. Najwa¿niejsze s± powy¿sze.&nbsp; <br></font><td width="50%" height=93 valign=top><p align=justify><font class=9pt>To zamyka nasz± krótk± wycieczkê po systemie plików Linuxa.<br></font><font class=9pt>Mam nadziejê, ¿e nie zniechêci³a Was jego z³o¿ono¶æ. Wbrew pozorom jest bardzo uporz±dkowany i logicznie zaprojektowany. Ma tylko jedn± wadê: spróbujcie rêcznie odinstalowaæ jaki¶ program, który swoje pliki trzyma w /usr/bin, /usr/lib, /usr/share, /usr/etc i paru jeszcze miejscach. Na szczê¶cie dystrybucje Linuxa dysponuj± wydajnymi metodami zarz±dzania pakietami, w tym instalowania/odinstalowywania. Co jednak je¿eli chcemy zainstalowaæ nie program dostêpny w formie pakietu, a w³asnorêcznie skompilowan± aplikacjê? I tutaj napotykamy kolejn± zmianê przeznaczenia katalogów systemu. Otó¿ pakiety zwykle instaluje siê w /usr i podkatalogach, a samodzielnie instalowane programy w /usr/local. Dziêki temu /usr/local zawiera ma³o plików i ³atwiej jest wybraæ te w³a¶ciwe przy rêcznym usuwaniu aplikacji. </font><font class=9pt><br></font><font class=9pt><br><b>Co wolno wojewodzie, czyli prawa dostêpu do</b><b>plików</b></font><font class=9pt><br></font><font class=9pt><br>System praw dostêpu do plików Linuxa jest najbardziej standardowym rozwi±zaniem spotykanym w UNIXach od pocz±tku ich dziejów. Jest on prosty i przejrzysty, a zarazem wystarczaj±co mocny do wiêkszo¶ci zastosowañ. Zacznijmy od tego, ¿e ka¿da sesja u¿ytkownika w systemie Linux zaczyna siê od logowania. Ka¿dy u¿ytkownik ma przypisany jednoznaczny login (nazwê u¿ytkownika). Zwykle uwierzytelnienie nastêpuje po podaniu has³a. U¿ytkownicy przypisani s± do grup. Ka¿dy mo¿e znajdowaæ siê w dowolnej liczbie grup, ale jedna z nich jest tzw. grup± g³ówn± lub domy¶ln±. Ka¿dy plik w systemie Linux posiada dwóch w³a¶cicieli: jednym jest u¿ytkownik, a drugim grupa. Prawa dostêpu obejmuj± prawo do odczytu pliku, zapisu oraz wykonania zawartego w nim kodu. Prawa definiuje siê oddzielnie dla w³a¶ciciela, grupy oraz innych u¿ytkowników. Do wy¶wietlenia praw dostêpu s³u¿y komenda ls -l. Wyja¶niê teraz dzia³anie praw dostêpu na przyk³adzie: </font><font class=9pt><br></font><font class=9pt><br><font color="#478DE7">[mac@mac mac]$ ls -l *.pdf<br> -rw-rw-r-- 1 mac mac 123677 sie 19 23:28 southpark.pdf<br> [mac@mac mac]$</font><br><br>Widzimy tu znak zachêty systemu, po którym wpisa³em polecenie ls -l *.pdf. W odpowiedzi uzyska³em listê plików *.pdf z mojego katalogu domowego. Kolejne kolumny wydruku oznaczaj±: prawa dostêpu zakodowane w specjalnej notacji opisanej poni¿ej, liczbê tzw. twardych dowi±zañ do pliku, w³a¶ciciela pliku, grupê, rozmiar, datê modyfikacji pliku i jego nazwê. Jak zatem odczytaæ tajemniczy ci±g -rw-rw-r--? Pierwszy znak (-) oznacza typ pliku. Minus to zwyczajny plik. Inne znaki wyja¶nione s± w nastêpnej sekcji, np. d oznacza katalog. Kolejne 9 znaków brane trójkami oznacza kolejno prawa dostêpu dla w³a¶ciciela pliku, grupy i innych u¿ytkowników. Literka r oznacza prawo odczytu (Read), w - zapisu (Write), a x umieszczana w trzecim polu - wykonania zawartego w pliku programu (eXecute). Zatem plik southpark.pdf mogê przeczytaæ i zapisaæ ja i cz³onkowie grupy mac (czyli te¿ tylko ja). Inni u¿ytkownicy mog± ten plik jedynie przeczytaæ. Poniewa¿ southpark.pdf nie jest programem, nikt nie ma prawa go wykonaæ. Prawa dostêpu mo¿e zmieniæ jedynie w³a¶ciciel pliku lub root (który i tak wszystko mo¿e). </font><font class=9pt><br></font><font class=9pt><br><b>Typy plików</b></font><font class=9pt><br></font><font class=9pt><br>Abym móg³ opowiedzieæ o typach plików w Linuksie, muszê najpierw wyja¶niæ czym tak naprawdê jest plik. A wiêc plik ogólnowojskowy sk³ada siê z ... eee ... nie ta bajka. Jeszcze raz. W najwiêkszym skrócie ka¿dy plik reprezentowany jest przez tzw. i-wêze³ (i-node). Ka¿demu plikowi na dysku (oczywi¶cie mówimy tu o dyskach sformatowanych w Linuxowym systemie ext2, nikt nie oczekuje, ¿e na dysku fat32 sk±din±d równie¿ obs³ugiwanym przez Linuxa pojawi± siê nagle jakie¶ i-wêz³y) przyporz±dkowany jest dok³adnie jeden i-wêze³. I-wêz³y zapisywane s± w pewnym wydzieonym obszarze dysku. To w³a¶nie w nich zapisane s± takie informacje jak w³a¶ciciel pliku, grupa, prawa dostêpu, czas utworzenia pliku, ostatniej modyfikacji i ostatniego dostêpu, tytu³owy typ pliku, jego rozmiar no i oczywi¶cie najwa¿niejsze - numer i-noda. Zauwa¿cie, ¿e w i-nodzie nie jest zapisana nazwa pliku. Mog± siê tu za to znale¼æ informacje o blokach dyskowych, w których zapisano znajduj±ce siê w pliku dane, ale nie jest to konieczne. Np. wspomniane ju¿ pliki urz±dzeñ w katalogu /dev nie zajmuj± przestrzeni dyskowej poza oczywi¶cie przestrzeni± i-nodów. Odnajdywanie plików po numerach i-wêz³ów by³oby co najmniej ¿mudne, dlatego utworzono dodatkowe struktury zwane katalogami (chodzi tu o zwyczajne katalogi dyskowe czasem niepoprawnie :-) zwane folderami). Katalog jest plikiem specjalnego typu, w którym umieszczono listê nazw plików wraz z numerami i-wêz³ów. Do jednego i-wêz³a mog± istnieæ odwo³ania z ró¿nych katalogów, dlatego zapisuje siê w nim informacjê o liczbie takich dowi±zañ. Gdy liczba ta osi±gnie zero, plik mo¿na bezpiecznie skasowaæ. Oznacza to, ¿e jeden plik mo¿e mieæ kilka nazw w jednym lub w wielu katalogach. Jest to istotna ró¿nica pomiêdzy systemami plików klasy UNIX a PC. Informacjê o liczbie dowi±zañ pokazuje polecenie ls -l w drugiej kolumnie.&nbsp;<br> Pora zatem na opis rozmaitych typów plików spotykanych w Linuksie. Bêdê go ilustrowa³ przyk³adowymi wydrukami z polecenia ls -l. Jak pamiêtamy, typ pliku kodowany jest w pierwszej literce.&nbsp;<br><br><font color="#478DE7">-rw-rw-r-- 1 mac mac 123677 sie 19 23:28 southpark.pdf</font>. Zwyk³y plik. Opisany powy¿ej. </font><font class=9pt><br></font><font class=9pt><br><font color="#478DE7">drwxr-xr-x 5 mac mac 1024 pa¼ 16 1999 GNUstep</font>. Katalog. Prawa dostêpu oznaczaj± tu: r - prawo odczytu, czyli wylistowania zawarto¶ci katalogu, w - prawo zapisu, czyli tworzenia plików w katalogu (tak¿e podkatalogów), x - prawo wej¶cia do katalogu. </font><font class=9pt><br></font><font class=9pt><br><font color="#478DE7">brw-rw---- 1 mac floppy 2, 0 maj 5 1998 /dev/fd0</font>. Urz±dzenie blokowe, w tym wypadku stacja dyskietek. Prawa dostêpu standardowe. Jak widaæ ja oraz cz³onkowie grupy floppy maj± prawo pisaæ na dyskietce, inni nie mog± jej nawet przeczytaæ. Zamiast rozmiaru pliku wypisane s± dwa numery urz±dzenia - g³ówny (w tym wypadku 2) oznacza typ urz±dzenia (jak siê ³atwo domy¶liæ 2 to napêd dyskietek), a drugi (0) oznacza, które urz±dzenie nas interesuje (pierwsza stacja). To w³a¶nie te numery, a nie nazwa pliku, decyduj± do jakiego urz±dzenia dany plik specjalny siê odnosi. </font><font class=9pt><br></font><font class=9pt><br><font color="#478DE7">crw------- 1 mac tty 4, 64 sie 28 21:03 /dev/ttyS0</font>. Urz±dzenie znakowe. W tym wypadku pierwszy port szeregowy (w Dosie zwykle okre¶lany jako COM1). Urz±dzenia znakowe odczytuje siê sekwencyjnie, bajt po bajcie, w odró¿nieniu od blokowych, które dysponuj± swobodnym dostêpem i czyta siê je blokami danych (np. sektorami w przypadku dysków). </font><font class=9pt><br></font><font class=9pt><br><font color="#478DE7">lrwxrwxrwx 1 root root 28 sie 18 20:20 X -> ../../usr/X11R6/bin/XF86_S3V</font>. Dowi±zanie symboliczne. Ten plik po prostu wskazuje na inny (ls nawet pokazuje na jaki). Czytanie tego pliku (/etc/X11/X) spowoduje przeczytanie /usr/X11R6/bin/XF86_S3V. Prawa dostêpu pobierane s± z pliku docelowego, st±d w symlinku (to popularna nazwa dowi±zania symbolicznego) s± wszystkie ustawione. Idea jest taka, ¿e w tym przypadku aby uruchomiæ X Window System wystarczy wydaæ polecenie /etc/X11/X, co spowoduje uruchomienie X przeznaczonych dla danej karty graficznej (S3 Virge). Po zmianie karty graficznej wystarczy podmieniæ symlink. </font><font class=9pt><br></font><font class=9pt><br><font color="#478DE7">srwxrwxrwx 1 root root 0 sie 28 18:23 gpmctl</font> UNIX socket oraz </font><font class=9pt><br></font><font class=9pt><br><font color="#478DE7">prw-r--r-- 1 root root 0 lis 27 1999 gpmdata</font> Named Pipe (FIFO) s³u¿± do komunikacji miêdzy programami. </font><font class=9pt><br></font><font class=9pt><br>Aby zakoñczyæ definitywnie temat plików w Linuksie nale¿y jeszcze wspomnieæ o dwóch dodatkowych atrybutach pliku. </font><font class=9pt><br></font><font class=9pt><br><font color="#478DE7">Suid/sgid bit</font>. Wy¶wietlany jako s w kolumnie praw dostêpu w miejscu zajmowanym zwykle przez x. Np.: </font><font class=9pt><br></font><font class=9pt><br><font color="#478DE7">[mac@mac /dev]$ ls -l `which passwd`<br> -r-s--x--x 1 root root 12244 lut 7 2000 /usr/bin/passwd<br> [mac@mac /dev]$</font><br><br>Oznacza wykonanie programu z prawami w³a¶ciciela, a nie u¿ytkownika uruchamiaj±cego program. Zatem /usr/bin/passwd wykona siê z prawami roota, czyli uzyska dostêp do wszystkich plików w systemie. Na szczê¶cie wiadomo, ¿e passwd nie robi nic g³upiego. :-) Umo¿liwia on po prostu u¿ytkownikowi zmianê has³a, a tylko root ma prawo zapisu do pliku przechowuj±cego has³a. Podobnie mo¿na ustawiæ wykonanie dla grupy. </font><font class=9pt><br></font><font class=9pt><br><font color="#478DE7">[mac@mac /dev]$ ls -l `which write`<br> -rwxr-sr-x 1 root tty 8328 mar 7 11:29 /usr/bin/write<br> [mac@mac /dev]$</font><br><br>Program write uruchamia siê z prawami grupy tty. Do tej grupy nale¿± wszystkie urz±dzenia reprezentuj±ce terminale pod³±czone do systemu, zatem program write mo¿e pisaæ po dowolnym terminalu. Program ten s³u¿y do wysy³ania krótkich zawiadomieñ innym u¿ytkownikom.&nbsp;<br> Suid/sgid ustawiony dla katalogu powoduje, ¿e ka¿dy z plików tworzony w tym katalogu przejmuje od niego w³a¶ciciela lub grupê odpowiednio. Mam nadziejê kiedy¶ opisaæ sztuczki mo¿liwe do wykonania z u¿yciem suid/sgid.&nbsp;<br><br><font color="#478DE7">Sticky bit</font>. U¿ywany teraz wy³±cznie dla katalogów. </font><font class=9pt><br></font><font class=9pt><br><font color="#478DE7">drwxrwxrwt 26 root root 8192 sie 28 21:56 /tmp</font><br><br>Oznaczany literk± t w ostatniej kolumnie praw dostêpu. Ustawienie go dla katalogu oznacza, ¿e nie mo¿na z niego usuwaæ plików, których siê nie jest w³a¶cicielem. Zwyczajowo ustawiony dla katalogu /tmp przeznaczonym na wspólne pliki tymczasowe. Poniewa¿ ka¿dy ma prawo pisaæ do /tmp, zapobiega to skasowaniu plików innego u¿ytkownika. Dla plików jego ustawienie oznacza³o kiedy¶ pozostawienie programu w pamiêci po zakoñczeniu. Przydatne by³o dla d³ugo ³aduj±cych siê programów, ale konsumowa³o pamiêæ.&nbsp;<br> Acha, nazwy plików s± case-sensitive czyli np. Ala_ma_kota.txt i Ala_ma_kota.TXT to dwa zupe³nie ró¿ne pliki!&nbsp;<br><br></font></tr><tr><td width="100%" height=1 valign=top colspan=2><p align=right><font class=9pt><b>Archiwum</b><br><a href="mailto:magazin@hoga.pl" class=link>magazin@hoga.pl</a></font></tr><tr><td width="100%" height=1 valign=middle colspan=2 bgcolor="#000000"><b><font face=Verdana color="#FFFFFF" size=1>&nbsp;Copyright &copy; MagaZin 2001</font></b></td></tr></table><table border=0 width="92%" height=1 cellspacing=10 cellpadding=2><center></table></div></center></td></tr></table></div></body></html>