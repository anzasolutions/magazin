<html><head><meta http-equiv=Content-Type content="text/html; charset=iso-8859-2"><link rel=stylesheet href=magazin.css TYPE=text/css><title>MagaZin #17 :: grudzieñ 2003</title></head><body link=#176B9A vlink=#176B9A alink=#176B9A leftmargin=1 topmargin=15 bgcolor=#F2F2F2><div align=center><center><table border=0 width=750 cellspacing=0 cellpadding=0 style="border: 1 solid #176B9A"><tr><td width=100% style="border-bottom: 1 solid #F2F2F2" bgcolor=#1C84BB height=18><div align=center><table border=0 width=720 cellspacing=0 cellpadding=0><tr><td width=295 valign=top class=9ptV><font color=#FFFFFF><img border=0 src=../img/dir_003.gif width=6 height=7><b> </b><font face=Arial size=1 color=#FFFFFF>MAGAZIN #3/2003 (17) </font></font><font color=#FFFFFF face=Arial size=1><img border=0 src=../img/dir_003.gif width=6 height=7> GRUDZIEÑ 2003</font></td></center><td valign=top class=9ptV><p align=right><font color=#FFFFFF><img border=0 src=../img/dir_003.gif width=6 height=7><b> </b><font face=Arial size=1>MULTIMEDIALNE PISMO INTERNETOWE</font></font></td></tr></table></div></td></tr><center><tr><td width=100% height=80 style="border-bottom: 1 solid #176B9A"><img border=0 src=../img/003_top.gif width=748 height=80></td></tr><tr><td width=100% style="border-bottom: 1 solid #176B9A" bgcolor=#D1E3EF height=20><div align=center><table border=0 width=720 cellspacing=0 cellpadding=0><tr><td width=295 valign=top class=9ptV><b><font color=#176B9A><img border=0 src=../img/kwad.gif width=8 height=8> KURSY</font></b></td><td valign=top class=9ptV></td></tr></table></div></td></tr><tr><td width=100% bgcolor=#B1D3E4 style="border-bottom: 1 solid #176B9A" background=../img/003_title/delphi8.gif><div align=center><table border=0 width=720 cellspacing=0 cellpadding=0 height=55><tr><td width=1 valign=top><p align=right></td><td width=60 valign=middle><p align=right></td><td width=580 valign=middle height=70><i><font face=impact size=7 color=#176B9A>&nbsp;</font></i></td></center><td width=80 valign=middle height=70><p align=right></td><center><td width=1 valign=top></td></tr></table></div></center></td></tr><tr><td width=100% style="border-bottom: 1 solid #176B9A" bgcolor=#D1E3EF><div align=center><center><table border=0 width=720 cellspacing=0 cellpadding=0 height=20><tr><td width=10><p class=9ptV><img border=0 src=../img/dir_003.gif width=6 height=7></td><td width=353><p class=9ptV><a href=mailto:przempc@poczta.onet.pl class=link2><font color=#176B9A face=Tahoma><b>PC3T</b></font></a></td></center><td width=353><p class=9ptV align=right><img border=0 src=../img/dir_003.gif width=6 height=7> <a href=46.htm class=link2><font face=Tahoma color=#176B9A>poprzednia strona</font></a><font color=#176B9A face=Tahoma> </font><img border=0 src=../img/dir_003.gif width=6 height=7> <a href=spis.htm class=link2><font face=Tahoma color=#176B9A>spis tre¶ci</font></a><font color=#176B9A face=Tahoma> </font><img border=0 src=../img/dir_003.gif width=6 height=7> <a href=48.htm class=link2><font face=Tahoma color=#176B9A>nastêpna strona</font></a></td></tr></table></div></td></tr><center><tr><td width=100% valign=top background=../img/003_tlo2.gif><div align=center><table border=0 width=720 cellspacing=0 cellpadding=0><tr><td width=720 colspan=3 height=10></td></tr><tr><td width=350 valign=top class=9ptV><p style="line-height: 130%" align=justify><font color=#176b9a>Achhh... Maj. Nied³ugo wakacje, s³oñce, rower, pi³ka, jezioro... ekhm... rozmarzy³em siê. :) A¿ dziwne, ¿e komu¶ chce siê to czytaæ o takiej porze. Powinni¶cie i¶æ na spacer: odkleiæ swoje 4 litery od siedzenia... No dobra, skoro tamci poszli, my prawdziwi programi¶ci mo¿emy zacz±æ nowy odcinek kursu oraz znowu my¶leæ jak to bêdzie fajnie jak napiszemy nowy system operacyjny. :) (tak, tak... ten tekst by³ pisany w maju, sorki, ¿e musieli¶cie tak d³ugo czekaæ - przyp. dr.loop.us)</font><font color=#000000><br> <br> </font><img border=0 src=../img/bl3/003_n.gif style="float: left; margin-right: 4; margin-top: 4" width=46 height=39><font color=#000000>iestety systemu operacyjnego dzi¶ nie napiszemy ;( ale siê nie martwice, bo to i tak niemo¿liwe w tym jêzyku. ;) Có¿, jeste¶my uzale¿nieni od okienek na ca³ego dlatego dzi¶ napiszemy edytor tekstu, który mo¿na bêdzie porównaæ do Aplikacji WordPad MFC (cokolwiek ten skrót oznacza :)). Có¿ takiego wiêc bêdzie w naszym programie? A takie ró¿ne bajery: zmiana czcionki, drukowanie, ró¿ne wyrównanie, szukanie tekstu i jego zamiana. W sumie trochê tego jest. ;) Zaczynajmy wiêc od...</font></p><div align=center><table border=0 width=100% cellspacing=0 cellpadding=0 style="border-left: 5 solid #176B9A; border-bottom: 1 solid #176B9A"><tr><td width=100%><b><font color=#176B9A face=arial size=3>&nbsp;</font><font face=arial size=3>Programowanie wizualne</font></b></td></tr></table></div><p style="line-height: 130%" align=justify><font color=#000000>Tworzymy now± aplikacjê. Wszystko powinno wygl±daæ tak jak na rysunku obok tekstu, który gdzie¶ tutaj powinien byæ. :) Na pocz±tku proponujê zaj±æ siê TMainMenu: klikamy dwukrotnie. Otworzy siê nam nowe okienko. W Object Inspectorze tworzymy nowe pozycje w menu: Plik (Nowy, Otwórz, Zapisz, Zapisz jako..., - (minus powoduje stworzenie linii, która oddziela od siebie pozycje w menu), Drukuj, - (minus), Zakoñcz); Edycja (Cofnij, - (minus), Wytnij, Kopiuj, Wklej, Zaznacz wszystko, - (minus), Znajd¼, Znajd¼ nastêpny, Zamieñ); Format (Czcionka).</font></p><div align=center><table border=0 cellspacing=0 cellpadding=0 style="border: 1 solid #176B9A"><tr><td width=100%><img border=0 src=../img/screens/delphi8.jpg width=347 height=243></td></tr><tr><td width=100% height=20 bgcolor=#D1E3EF style="border-top: 1 solid #176B9A"><p class=9ptV>&nbsp;<img border=0 src=../img/dir_003.gif width=6 height=7><font color=#009830> </font><font color=#176B9A>Niech stanie siê ¶wiat³o¶æ</font></td></tr></table></div><p style="line-height: 130%" align=justify><font color=#000000>Mam nadziejê, ¿e z tym nie ma nikt z was problemu, a jakby co to proszê siê cofn±æ o parê lekcji od ty³u. ;) Teraz wstawiamy dwa komponenty ToolBar. Naciskamy prawym klawiszem na ten po³o¿ony wy¿ej; poka¿e siê nam menu. Tam bêd± dwie wa¿ne pozycje: New Button i New Seperator. Button to oczywi¶cie przycisk na ToolBarze, a Seperator to komponent, który oddziela przyciski od siebie. Tworzymy wiêc przyciski na obu ToolBarach. Nie zapominajmy te¿ o dwóch ComboBox w ni¿szym ToolBarze. Wszystkie nasze przyciski nie maj± obrazków. Niestety musimy sami sobie stworzyæ takie rysunki: najpro¶ciej robi±c zrzut ekranu jakiego¶ programu do edycji tekstu (WordPad). Jednak samymi obrazkami nic nie zdzia³amy: nie bêd± siê chcia³y przykleiæ do przycisków nawet gdy u¿yjemy SuperGlue. :) Potrzebna jest nam w³a¶ciwo¶æ ToolBar.Images. Tutaj wybierzemy jeden z komponentów: ImageList. Do pierwszego ToolBara proponujê ImageList1, a do drugiego: ImageList2. Teraz dwukrotnie klikamy na ImageList1. Poka¿e siê nam okienko: poprzez przycisk Add dodajemy grafiki. Ka¿da z nich bêdzie mia³a swój numer. Gdy wczytamy ju¿ wszystkie to ka¿demu przyciskowi z ToolBar wybieramy w³a¶ciwo¶æ ImageIndex i wpisujemy odpowiedni numer. Proponujê ³adowaæ grafiki po kolei (tj. Nowy, Otwórz, Zapisz itd.) a wtedy wszystkie one przypisz± siê do odpowiednich przycisków. Gdy ju¿ to zrobicie to mo¿ecie zmieniæ ka¿demu przyciskowi ShowHint na True, a w³a¶ciwo¶ci Hint przypisaæ odpowiedni± nazwê (Nowy, Otwórz itd.). Chyba siê domy¶lacie co to jest? Je¶li nie to najed¼cie myszk± na przycisk, gdy uruchomi siê aplikacja... o... co¶ siê pojawi³o! :) Ciekawym bajerem jest te¿ Flat na True w ToolBar. Proponuje zobaczyæ efekt, bo jest ostatnio czêsto u¿ywany. Wstawcie teraz RichEdit i ustawcie jego Align na alClient. Dziêki temu nasz komponent ca³y czas bêdzie zajmowa³ ca³e okno. Wstawcie te¿ StatusBar. Automatycznie spadnie na dó³. :) Znowu dwukrotnie kliknijcie. Pojawi siê okienko (chyba siê domy¶lili¶cie :). Stwórzcie piêæ obiektów poprzez naci¶niêcie na Add New. Ka¿demu z obiektów ustawcie Width na 80 w Object Inspectorze. Trzy komponenty niewidzialne mamy ju¿ za sob±. Teraz pora na OpenDialog. W Filter wpiszcie RTF|*.rtf|TXT|*.txt. W Options wybierzcie: ofPathMustExist i ofFileMustExist (spowoduje to, ¿e katalog i plik podany przez u¿ytkownika musi istnieæ). Teraz obiekt SaveDialog: Filter: RTF|*.rtf|TXT|*.txt, a w Options: ofOverwritePrompt (program pyta siê czy zast±piæ ju¿ istniej±cy plik w razie przypadku takowego). Reszta obiektów nie wymaga zmiany w³a¶ciwo¶ci. jedynie w ComboBox2 w Items trzeba wpisaæ: 8, 9, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 36, 48 i 72.</font></p><div align=center><table border=0 width=100% cellspacing=0 cellpadding=0 style="border-left: 5 solid #176B9A; border-bottom: 1 solid #176B9A"><tr><td width=100%><b><font color=#176B9A face=arial size=3>&nbsp;</font><font face=arial size=3>Piszemy</font></b></td></tr></table></div><p style="line-height: 130%" align=justify><font color=#000000>Po s³owie iplementation piszemy:<br> <br> </font><font color=#176b9a>implementation<br> {$R *.DFM}<br> var<br> plik:String;</font><font color=#000000><br> <br> W zmiennej plik bêdziemy przechowywaæ ¶cie¿kê dokumentu. Przyda siê nam ona np.: przy zapisywaniu. :) Teraz wybieramy zdarzenie Form1.OnCreate (w Object Inspectorze) i piszemy tak± oto procedurê:<br> <br> </font><font color=#176b9a>procedure TForm1.FormCreate(Sender: TObject);<br> begin<br> Form1.Caption := 'Editxt - Nowy';<br> plik:='nowy';<br> RichEdit1.Modified := False;<br> ComboBox1.Items := Screen.Fonts;<br> Atrybuty;<br> end;</font><font color=#000000><br> <br> Na pocz±tku zmienimy Form1.Caption (nag³ówek okna) na nazwê naszego programu (Editxt - prawda, ¿e niez³a nazwa?) plus nazwê aktualnie tworzonego pliku: Nowy. Pó¼niej podstawiamy pod zmienn± plik warto¶æ "nowy". W pó¼niejszych procedurach bêdziemy przez to sprawdzaæ czy plik by³ ju¿ zapisany. Je¶li zmienna plik bêdzie mia³a warto¶æ "nowy" to oznacza, ¿e plik nie by³ jeszcze zapisany, jak bêdzie zawiera³a inn± nazwê, to bêdzie to ¶cie¿ka pliku. Nastêpnie zmieniamy warto¶æ w³a¶ciwo¶ci RichEdit1.Modified, Ta w³a¶ciwo¶æ typu Boolean (True&amp;False) zmienia siê z False na True, gdy w dokumencie zajdzie jaka¶ zmiana. Przedostatnia linijka tekstu to naprawdê du¿y krok w przód. :) W naszym programie istnieje obiekt, którego nie da siê stworzyæ, bo zawsze istnieje. Nie widzimy go przy projektowaniu wizualnym, ale mo¿emy go u¿yæ w kodowaniu. Jest nim TScreen - obiekt posiadaj±cy wszystkie informacje o naszym ekranie: szeroko¶æ, wysoko¶æ, aktywne okno itp. Nas interesuje jego w³a¶ciwo¶æ typu TStrings Fonts. Zawiera ona nawy wszystkich czcionek jakie s± zainstalowane w systemie. Naszym zadaniem by³o umieszczenie ich w ComboBox1.Items. Na samym koñcu jest odwo³anie do procedury, która jeszcze nie istnieje, ale stworzymy j± trochê pó¼niej. Mogê tylko wam zdradziæ, ¿e ta procedura bêdzie s³u¿y³a do wczytania atrybutów tekstu z RichEdit1 i pokazaniu ich na ToolBarze... Teraz kliknij na Plik: Nowy...<br> <br> </font><font color=#176b9a>procedure TForm1.Nowy1Click(Sender: TObject);<br> var<br> odp:Integer;<br> A: array[0..256] of Char;<br> begin<br> if RichEdit1.Modified = True then<br> begin<br> StrPCopy(A, 'Zapisaæ zmiany w '+ExtractFileName(plik)+'?');<br> odp:= Application.MessageBox(A,'Edytor',<br> MB_YESNOCANCEL+MB_ICONWARNING);<br> if odp = IDYES then Zapisz1Click(Sender);<br> if odp = IDCANCEL then Exit;<br> end;<br> RichEdit1.Clear;<br> Form1.Caption := 'Editxt - Nowy';<br> plik:='nowy';<br> Atrybuty;<br> end;</font><font color=#000000><br> <br> Plik- Nowy. Na pocz±tku definiujemy dwie zmienne: odp. typu integer (bêdzie potrzebna przy sprawdzaniu jaki przycisk wybra³ uzytkownik w komunikacie) oraz tablicê Char. Char powinni¶cie znaæ, ale gorzej mo¿e byæ z tablic±, bo tego jeszcze nie t³umaczy³em. Nie wiem czy na razie ma to wiêkszy sens, bo i tak w tym programie nie zobaczycie tablic podczas ich prawdziwego dzia³ania. Najpierw sprawd¼my czy zwarto¶æ dokumentu siê zmieni³a. je¶li tak to: pierwsz± procedur± jak± tutaj piszemy jest zmiana String na tablicê Char: StrPCopy(Dest: PChar, Source:String). Mówi±c ja¶niej podstawi on pod zmienn± A warto¶æ Stringa. Pod zmienn± odp. podstawiamy wynik naszego komunikatu (Application.MessageBox). Je¶li u¿ytkownik wybra³ YES (Tak) to ka¿emy naszemu programowi wykonaæ procedurê Zapisz1Click, któr± zaraz zrobimy. Je¶li wybra³ Cancel (anuluj) to wychodzimy z procedury (Exit). Nie obs³u¿yli¶my tutaj jednego z mo¿liwych rozwi±zañ: u¿ytkownik wybierze przycisk Nie. Specjalnie to zrobi³em, bo je¶li tak naprawdê siê stanie to nic nie musimy robiæ tylko i¶æ dalej. Mam racjê? Dalej to ju¿ proste rzeczy: czy¶cimy zawarto¶æ RichEdit1, zmieniamy nag³ówek formularza, zmieniamy warto¶æ zmiennej nowy i uruchamiamy tajemnicz± procedurê Atrybuty. :)<br> <br> </font><font color=#176b9a>procedure TForm1.Otwrz1Click(Sender: TObject);<br> var<br> odp:Integer;<br> A: array[0..256] of Char;<br> begin<br> if RichEdit1.Modified = True then<br> begin<br> StrPCopy(A, 'Zapisaæ zmiany w '<br> +ExtractFileName(plik)+'?');<br> odp:= Application.MessageBox(A,'Edytor',<br> MB_YESNOCANCEL+MB_ICONWARNING);<br> if odp = IDYES then Zapisz1Click(Sender);<br> if odp = IDCANCEL then Exit;<br> end;<br> if not OpenDialog1.Execute then Exit;<br> RichEdit1.Lines.LoadFromFile(OpenDialog1.FileName);<br> Form1.Caption := 'Editxt - '+ExtractFileName<br> (OpenDialog1.FileName);<br> plik:=OpenDialog1.FileName;<br> RichEdit1.Modified := False;<br> Atrybuty;<br> end;</font><font color=#000000><br> <br> Plik- Otwórz... Tutaj pocz±tek taki sam jak powy¿ej... Pó¼niej sprawdzamy warunek czy u¿ytkownik po otwarciu OpenDialog1 wybra³ przycisk Otwórz. Je¶li nie to wychodzimy z procedury, je¶li nie to idziemy dalej. RichEdit1.Lines.LoadFromFile - s³u¿y do wczytywania zawarto¶ci pliku do RichEdit1. Zwróæcie uwagê, ¿e formatowanie czcionki wczytuje siê automatycznie. Za pomoc± funkcji ExtractFileName wyci±gamy z d³ugiej ¶cie¿ki tylko sam± nazwê pliku i podstawiamy do nag³ówka formularza. Pod zmienn± plik podstawiamy ¶cie¿kê pliku (ca³±). Na koniec ustalamy, ¿e RichEdit1 nie zosta³ zmodyfikowany.<br> <br> </font><font color=#176b9a>procedure TForm1.Zapisz1Click(Sender: TObject);<br> begin<br> if plik&lt;>'nowy' then RichEdit1.Lines.SaveToFile(plik)<br> else<br> begin<br> if not SaveDialog1.Execute then Exit;<br> RichEdit1.Lines.SaveToFile(SaveDialog1.FileName);<br> Form1.Caption := 'Editxt - '<br> +ExtractFileName(SaveDialog1.FileName);<br> plik:=SaveDialog1.FileName;<br> end;<br> end;</font><font color=#000000><br> <br> Plik- Zapisz. Powy¿sza procedura s³u¿y do zapisywania zawarto¶ci RichEdit1. Oczywi¶cie jeste¶my w XXI wieku i dlatego musieli¶my zrobiæ uproszczenie: program sprawdza czy plik by³ ju¿ zapisany. Je¶li tak (zmienna plik nie równa siê "nowy") to po prostu zapisujemy po podan± nazwê zawarto¶æ RichEdit1. Je¶li nie (zmienna plik ma warto¶æ "nowy") to otwieramy okienko SaveDialog1. Sprawdzamy czy u¿ytkownik wybra³ Zapisz w okienku. Zapisujemy, zmieniamy nag³ówek i podstawiamy pod zmienn± plik ¶cie¿kê (je¶li u¿ytkownik nie nacisn±³ Zapisz to wychodzimy z procedury).<br> <br> </font><font color=#176b9a>procedure TForm1.Zapiszjako1Click(Sender: TObject);<br> begin<br> if not SaveDialog1.Execute then Exit;<br> RichEdit1.Lines.SaveToFile(SaveDialog1.FileName);<br> Form1.Caption := 'Editxt -<br> '+ExtractFileName(SaveDialog1.FileName);<br> plik:=SaveDialog1.FileName;<br> end;</font><font color=#000000><br> <br> Plik- Zapisz jako... Powy¿sza procedura Zapisuje nasz plik pod now± nazwê, nawet gdy jest ju¿ ¶cie¿ka pliku pod zmienn± plik.<br> <br> </font><font color=#176b9a>procedure TForm1.Drukuj1Click(Sender: TObject);<br> begin<br> Zapisz1Click(Sender);<br> RichEdit1.Print(plik);<br> end;</font><font color=#000000><br> <br> Plik- Drukuj. Powy¿sza procedura s³u¿y do drukowania pliku. Niestety najpierw trzeba zapisaæ plik, a pó¼niej wywo³aæ procedurê Print z RichEdit1.<br> <br> </font><font color=#176b9a>procedure TForm1.Zakocz1Click(Sender: TObject);<br> begin<br> Application.Terminate;<br> end;</font><font color=#000000><br> <br> Koñczymy aplikacjê po naci¶niêciu Plik- Zakoñcz.<br> Poni¿ej procedury po naci¶niêciu kolejno: Edycja: Cofnij, Wytnij, Kopiuj, Wklej, Zaznacz wszystko, Znajd¼:</font></p></center><p style="line-height: 130%" align=left><font color=#176b9a>procedure TForm1.Cofnij1Click(Sender: TObject);<br> begin<br> RichEdit1.Undo;<br> end;<br> <br> procedure TForm1.Wytnij1Click(Sender: TObject);<br> begin<br> RichEdit1.CutToClipboard;<br> end;<br> <br> procedure TForm1.Kopiuj1Click(Sender: TObject);<br> begin<br> RichEdit1.CopyToClipboard;<br> end;<br> <br> procedure TForm1.Wklej1Click(Sender: TObject);<br> begin<br> RichEdit1.PasteFromClipboard;<br> end;<br> <br> procedure TForm1.Zaznaczwszystko1Click(Sender: TObject);<br> begin<br> RichEdit1.SelectAll;<br> end;<br> <br> procedure TForm1.Znajd1Click(Sender: TObject);<br> begin<br> FindDialog1.Execute;<br> end;</font></p><center><p style="line-height: 130%" align=justify><font color=#000000>No i tutaj siê zatrzymamy. Po otwarciu okienka Znajd¼ (FindDialog) nie piszemy ¿adnego kodu. Musimy teraz nacisn±æ raz na FindDialog1 i wybraæ z Object Inspectora z karty Events zdarzenie OnFind. Zdarzenie te zostanie wykonane, gdy u¿ytkownik naci¶nie Znajd¼ w okienku dialogowym.</font></p><p style="line-height: 130%" align=left><font color=#176b9a>procedure TForm1.FindDialog1Find(Sender: TObject);<br> var<br> cale,litery: TSearchType;<br> znajdz:Integer;<br> begin</font></p></center></td><td width=21 valign=top class=9ptV></td><td width=349 valign=top class=9ptV><p style="line-height: 130%" align=left><font color=#176b9a>if FindDialog1.Options = FindDialog1.Options + [frMatchCase] then cale:=stMatchCase;<br> if FindDialog1.Options = FindDialog1.Options + [frWholeWord] then litery:=stWholeWord;<br> if (litery = stWholeWord) or (cale = stMatchCase) then<br> znajdz:=RichEdit1.FindText(FindDialog1.FindText, RichEdit1.SelStart + RichEdit1.SelLength, Length(RichEdit1.Text) - RichEdit1.SelStart - RichEdit1.SelLength, [cale, litery])<br> else znajdz := RichEdit1.FindText(FindDialog1.FindText, RichEdit1.SelStart + RichEdit1.SelLength, Length(RichEdit1.Text) - RichEdit1.SelStart - RichEdit1.SelLength, []);<br> if znajdz &lt;> -1 then<br> begin<br> RichEdit1.SelStart := znajdz;<br> RichEdit1.SelLength := Length(FindDialog1.FindText);<br> end<br> else ShowMessage('Zakoñczono przeszukiwanie dokumentu');<br> end;</font></p><p style="line-height: 130%" align=justify><font color=#000000>To bardzo trudna i d³uga procedura. TSearchType jest obiektem, w którym, zapisuje siê ustawienia poszukiwañ w RichEdit1. Nam bêd± potrzebne dwie takie zmienne. Zmienna znajd¼ zawieraæ bêdzie wynik poszukiwañ, czyli liczbê w której zaczyna siê poszukiwany ci±g znaków w RichEdit1. Pó¼niej jest warunek: je¶li opcje w FindDialog1 zawieraæ bêd± opcjê frMatchCase (uwzglêdnij wielko¶æ liter) to do naszego obiektu cale podstawimy warto¶æ stMatchCase. To samo tyczy siê linijki ni¿ej, ale tutaj uwzglêdniamy tylko ca³e wyrazy. W tych dwóch powy¿szych warunkach sprawdzamy czy u¿ytkownik zaznaczy³ opcje: uwzglêdnij wielko¶æ liter lub uwzglêdnij tylko ca³e wyrazy. Pó¼niej mamy zabezpieczenie przed dziwnym zachowaniem Delphi. Otó¿, gdy obydwie zmienne (cale i litery) bêd± puste to program siê sypie. :( Sprawdzamy wiêc czy chocia¿ jedna z nich ma jak±¶ warto¶æ je¶li tak to wywo³ujemy funkcjê z RichEdit.FindText(tekst: String, pocz±tek_poszukiwañ: Integer, d³ugo¶æ_poszukiwañ, opcje: TSearchTypes): Integer. Poszukiwania zaczynamy od miejsca, gdzie znajduje siê kursor (RichEdit1.SelStart) plus d³ugo¶æ zaznaczenia kursorem (RichEdit1.SelLength). D³ugo¶æ poszukiwañ ustalamy po odjêciu od d³ugo¶ci tekstu w RichEdit1 Zaznaczenia tekstu i miejsca kursora. Opcje dajemy w nawiasach kwadratowych. Gdy ¿adne z ustawieñ nie ma warto¶ci to robimy tak± sam± funkcjê, tylko ¿e pod opcje nic nie podstawiamy. Je¶li wynik poszukiwañ jest ró¿ny od -1 (tak± warto¶æ otrzymamy, gdy nie ma danego tekstu w RichEdit) to idziemy kursorem w miejsce, gdzie jest nasza zguba ( RichEdit1.SelStart := znajdz) i zaznaczamy j± (RichEdit1.SelLength := Length(FindDialog1.FindText). Je¶li nic nie znajdziemy to mówimy, ¿e zakoñczyli¶my ju¿ poszukiwania w dokumencie. :)<br> <br> </font><font color=#176b9a>procedure TForm1.Znajdnastepny1Click(Sender: TObject);<br> begin<br> if FindDialog1.FindText &lt;> '' then<br> FindDialog1Find(Sender);<br> end;</font><font color=#000000><br> <br> Edycja- Znajd¼ nastêpny. Tutaj szukamy dalej tego samego wyrazu, gdy ju¿ wcze¶niej ustalili¶my jaki to wyraz. Dlatego najpierw jest warunek czy w FindDialog1.FindText co¶ jest.<br> <br> </font><font color=#176b9a>procedure TForm1.Zamie1Click(Sender: TObject);<br> begin<br> ReplaceDialog1.Execute;<br> end;</font><font color=#000000><br> <br> Edycja- Zamieñ. Teraz wywo³ujemy okienko Znajd¼ i Zamieñ. Poni¿ej zdarzenie ReplaceDialog1.OnFind (naci¶niêcie przycisku Znajd¼):</font></p><p style="line-height: 130%" align=left><font color=#176b9a>procedure TForm1.ReplaceDialog1Find(Sender: TObject);<br> var<br> cale,litery: TSearchType;<br> znajdz:Integer;<br> begin<br> if ReplaceDialog1.Options = ReplaceDialog1.Options + [frMatchCase] then cale:=stMatchCase;<br> if ReplaceDialog1.Options = ReplaceDialog1.Options + [frWholeWord] then litery:=stWholeWord;<br> if (litery = stWholeWord) or (cale = stMatchCase) then<br> znajdz:=RichEdit1.FindText(ReplaceDialog1.FindText, RichEdit1.SelStart + RichEdit1.SelLength, Length(RichEdit1.Text) - RichEdit1.SelStart - RichEdit1.SelLength, [cale, litery])<br> else znajdz := RichEdit1.FindText(ReplaceDialog1.<br> FindText, RichEdit1.SelStart + RichEdit1.SelLength, Length(RichEdit1.Text) - RichEdit1.SelStart - RichEdit1.SelLength, []);<br> if znajdz&lt;>-1 then<br> begin<br> RichEdit1.SelStart := znajdz;<br> RichEdit1.SelLength := Length(ReplaceDialog1.FindText);<br> end<br> else ShowMessage('Zakoñczono przeszukiwanie dokumentu');<br> end;</font></p><p style="line-height: 130%" align=justify><font color=#000000>Tutaj wszystko tak jak ostatnio tylko, ¿e tutaj mamy ReplaceDialog. :) Teraz zdarzenie po naci¶niêciu Zamieñ lub Zamieñ wszystko.</font></p><p style="line-height: 130%" align=left><font color=#176b9a>procedure TForm1.ReplaceDialog1Replace(Sender: TObject);<br> var<br> cale,litery:TSearchType;<br> znajdz:Integer;<br> begin<br> if ReplaceDialog1.Options = ReplaceDialog1.Options + [frReplace] then<br> if RichEdit1.SelLength > 0 then RichEdit1.SelText := ReplaceDialog1.ReplaceText;<br> if ReplaceDialog1.Options = ReplaceDialog1.Options + [frReplaceAll] then<br> begin<br> if ReplaceDialog1.Options = ReplaceDialog1.Options + [frMatchCase] then cale:=stMatchCase;<br> if ReplaceDialog1.Options = ReplaceDialog1.Options + [frWholeWord] then litery:=stWholeWord;<br> repeat<br> if (litery = stWholeWord) or (cale = stMatchCase) then<br> znajdz:=RichEdit1.FindText(ReplaceDialog1.FindText, RichEdit1.SelStart + RichEdit1.SelLength, Length(RichEdit1.Text) - RichEdit1.SelStart - RichEdit1.SelLength, [cale, litery])<br> else znajdz := RichEdit1.FindText(ReplaceDialog1.FindText, RichEdit1.SelStart + RichEdit1.SelLength, Length(RichEdit1.Text) - RichEdit1.SelStart - RichEdit1.SelLength, []);<br> if znajdz&lt;>-1 then<br> begin<br> RichEdit1.SelStart := znajdz;<br> RichEdit1.SelLength := Length(ReplaceDialog1.FindText);<br> RichEdit1.SelText := ReplaceDialog1.ReplaceText;<br> end<br> else ShowMessage('Zakoñczono przeszukiwanie dokumentu');<br> until znajdz=-1;<br> end<br> ; end;</font></p><p style="line-height: 130%" align=justify><font color=#000000>Ta procedura mimo wygl±da jest tak naprawdê ju¿ prosta. Znowu powtarzamy du¿o. :) Najwa¿niejsze s± dwa warunki: if ReplaceDialog1.Options = ReplaceDialog1.Options + [frReplace] then sprawdza on czy u¿ytkownik nacisn±³ Zamieñ oraz if ReplaceDialog1.Options = ReplaceDialog1.Options + [frReplaceAll] then sprawdza czy mo¿e jednak u¿ytkownik nacisn±³ Zamieñ wszystko. Dlatego ta pêtla.<br> <br> Teraz odkryjemy t± tajemnicz± procedurê Atrybuty. :) Do tej sekcji wpiszcie:<br> <br> </font><font color=#176b9a>type<br> TForm1 = class(TForm)<br> {itd}<br> procedure Atrybuty;</font><font color=#000000><br> <br> Dziêki temu zainicjujemy now± procedurê w naszym programie. Teraz tam gdzie inne procedury (na koñcu kodu, ale przed end. z kropk±!) napiszcie:</font></p><p style="line-height: 130%" align=left><font color=#176b9a>procedure TForm1.Atrybuty;<br> var<br> p:TPoint;<br> begin<br> ComboBox1.Text := RichEdit1.SelAttributes.Name;<br> ComboBox2.Text := IntToStr(RichEdit1.SelAttributes.Size);<br> if RichEdit1.SelAttributes.Style = RichEdit1.SelAttributes.Style + [fsBold] then<br> ToolButton17.Down := True else ToolButton17.Down := False;<br> if RichEdit1.SelAttributes.Style = RichEdit1.SelAttributes.Style + [fsItalic] then<br> ToolButton18.Down := True else ToolButton18.Down := False;<br> if RichEdit1.SelAttributes.Style = RichEdit1.SelAttributes.Style + [fsUnderLine] then<br> ToolButton19.Down := True else ToolButton19.Down := False;<br> ToolButton22.Down := False;<br> ToolButton23.Down := False;<br> ToolButton24.Down := False;<br> if RichEdit1.Paragraph.Alignment = taLeftJustify then<br> ToolButton22.Down := True;<br> if RichEdit1.Paragraph.Alignment = taCenter then<br> ToolButton23.Down := True;<br> if RichEdit1.Paragraph.Alignment = taRightJustify then<br> ToolButton24.Down := True;<br> //tutaj troche nie zwiazane z atrybutami<br> p := RichEdit1.CaretPos;<br> StatusBar1.Panels[0].Text := IntToStr(p.y)+','+IntToStr(p.x);<br> if GetKeyState(VK_NUMLOCK) = 1 then<br> StatusBar1.Panels[1].Text := 'NumLock: on'<br> else StatusBar1.Panels[1].Text := 'NumLock: off';<br> if GetKeyState(VK_CAPITAL) = 1 then<br> StatusBar1.Panels[2].Text := 'CapsLock: on'<br> else StatusBar1.Panels[2].Text := 'CapsLock: off';<br> if GetKeyState(VK_SCROLL) = 1 then<br> StatusBar1.Panels[3].Text := 'ScrollLock: on'<br> else StatusBar1.Panels[3].Text := 'ScrollLock: off';<br> if RichEdit1.Modified = True then<br> StatusBar1.Panels[4].Text := 'Zmodyfikowany'<br> else StatusBar1.Panels[4].Text := '';<br> end;</font></p><p style="line-height: 130%" align=justify><font color=#000000>Ufff... Najpierw do ComboBox1podstawiamy nazwê czcionki z zaznaczonego tekstu w RichEdit. Pó¼niej do ComboBox2 podstawiamy rozmiar czcionki (pamiêtaj±c o zmianie IntToStr czyli Integer na String). Nastêpnie sprawdzamy czy na czcionce s± takie efekty jak: pogrubienie (fsBold), kursywa (fsItalic) lub podkre¶lenie (fsUnderLine). Pó¼nej wszystkim przyciskom odpowiednim za wyrównanie tekstu ka¿emy pój¶æ w górê (nie byæ ju¿ wci¶niêtym) i sprawdzamy jak wyrównany jest dany tekst. Na sam koniec taki ma³y bajer ode mnie. Podajemy pozycjê kursora w RichEdit1, pozycje klawiszy: NumLock, CapsLock i ScrollLock. W ostatniej czê¶ci StatusBar podajemy czy plik jest zmodyfikowany. Zwróæcie uwagê: poprzez pisanie: StatusBar1.Panels[0] uzyskujemy dostêp do panelu pierwszego w statusie. Teraz mo¿emy zmieniæ jego w³a¶ciwo¶ci. My tutaj zmieniamy Text. To samo siê tyczy innych paneli w statusie.<br> <br> Teraz zdarzenia: gdy zostanie wci¶niêty jaki¶ klawisz (a raczej podniesie go) lub gdy u¿ytkownik kliknie na RichEdit1 myszk±:</font></p><p style="line-height: 130%" align=left><font color=#176b9a>procedure TForm1.RichEdit1KeyUp(Sender: TObject; var Key: Word; Shift: TShiftState);<br> begin<br> Atrybuty;<br> end;<br> procedure TForm1.RichEdit1MouseDown(Sender: TObject; Button: TMouseButton; Shift: TShiftState; X, Y: Integer);<br> begin<br> Atrybuty;<br> end;</font></p><p style="line-height: 130%" align=justify><font color=#000000>Ni¿ej mamy zdarzenia, które zmieniaj± format czcionki. Pozostawiê je wam do rozgryzienia. :)</font></p><p style="line-height: 130%" align=left><font color=#176b9a>procedure TForm1.ToolButton17Click(Sender: TObject);<br> begin<br> ToolButton17.Down := True;<br> RichEdit1.SelAttributes.Style := RichEdit1.SelAttributes.Style + [fsBold];<br> end;<br> <br> procedure TForm1.ToolButton18Click(Sender: TObject);<br> begin<br> ToolButton18.Down := True;<br> RichEdit1.SelAttributes.Style := RichEdit1.SelAttributes.Style + [fsItalic];<br> end;<br> <br> procedure TForm1.ToolButton19Click(Sender: TObject);<br> begin<br> ToolButton19.Down := True;<br> RichEdit1.SelAttributes.Style := RichEdit1.SelAttributes.Style + [fsUnderLine];<br> end;<br> <br> procedure TForm1.ToolButton22Click(Sender: TObject);<br> begin<br> RichEdit1.Paragraph.Alignment := taLeftJustify;<br> Atrybuty;<br> end;<br> <br> procedure TForm1.ToolButton23Click(Sender: TObject);<br> begin<br> RichEdit1.Paragraph.Alignment := taCenter;<br> Atrybuty;<br> end;<br> <br> procedure TForm1.ToolButton24Click(Sender: TObject);<br> begin<br> RichEdit1.Paragraph.Alignment := taRightJustify;<br> Atrybuty;<br> end;<br> <br> procedure TForm1.ToolButton20Click(Sender: TObject);<br> begin<br> ColorDialog1.Color := RichEdit1.SelAttributes.Color;<br> if not ColorDialog1.Execute then Exit;<br> RichEdit1.SelAttributes.Color := ColorDialog1.Color;<br> end;<br> <br> procedure TForm1.Czcionka1Click(Sender: TObject);<br> begin<br> FontDialog1.Font.Name := RichEdit1.SelAttributes.Name;<br> FontDialog1.Font.Size := RichEdit1.SelAttributes.Size;<br> FontDialog1.Font.Color := RichEdit1.SelAttributes.Color;<br> FontDialog1.Font.Style := RichEdit1.SelAttributes.Style;<br> if not FontDialog1.Execute then Exit;<br> RichEdit1.SelAttributes.Name := FontDialog1.Font.Name;<br> RichEdit1.SelAttributes.Size := FontDialog1.Font.Size;<br> RichEdit1.SelAttributes.Color := FontDialog1.Font.Color;<br> RichEdit1.SelAttributes.Style := FontDialog1.Font.Style;<br> Atrybuty;<br> end;</font></p><p style="line-height: 130%" align=justify><font color=#000000>Na sam koniec zdarzenie, które wydarza siê przed zamkniêciem programu. Sprawdzamy tutaj czy dokument czasem nie jest czasem zmodyfikowany. Ja siê z wami ¿egnam i do nastêpnego odcinka. :)</font></p><p style="line-height: 130%"><font color=#176b9a>procedure TForm1.FormCloseQuery(Sender: TObject; var CanClose: Boolean);<br> var<br> odp:Integer;<br> A: array[0..256] of Char;<br> begin<br> CanClose := True;<br> if RichEdit1.Modified = True then<br> begin<br> StrPCopy(A, 'Zapisaæ zmiany w '+ExtractFileName(plik)+'?');<br> odp:= Application.MessageBox(A,'Edytor',<br> MB_YESNOCANCEL+MB_ICONWARNING);<br> if odp = IDYES then Zapisz1Click(Sender);<br> if odp = IDCANCEL then CanClose := False;<br> end;<br> end;</font></p></td></tr><tr><td width=694 valign=top height=10 colspan=3></td></tr></table></div></td></tr><tr><td width=100% bgcolor=#D1E3EF style="border-top: 1 solid #176B9A"><div align=center><table border=0 width=720 cellspacing=0 cellpadding=0 height=20><tr><td width=10><p class=9ptV><img border=0 src=../img/dir_003.gif width=6 height=7></td><td width=447><p class=9ptV><font color=#176B9A face=Tahoma>Copyright &copy; </font><b><font face=Tahoma color=#176B9A>MAGAZIN</font></b><font color=#176B9A face=Tahoma> 2001-2003 | Wszystkie prawa zastrze¿one</font></td><td width=259><p class=9ptV align=right><img border=0 src=../img/dir_003.gif width=6 height=7> <a href=46.htm class=link2><font face=Tahoma color=#176B9A>poprzednia strona</font></a><font color=#176B9A face=Tahoma> </font><img border=0 src=../img/dir_003.gif width=6 height=7> <a href=spis.htm class=link2><font face=Tahoma color=#176B9A>spis tre¶ci</font></a><font color=#176B9A face=Tahoma> </font><img border=0 src=../img/dir_003.gif width=6 height=7> <a href=48.htm class=link2><font face=Tahoma color=#176B9A>nastêpna strona</font></a></td></tr></table></div></td></tr><center></table></center></div></body></html>