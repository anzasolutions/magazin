<html><head><meta http-equiv=Content-Type content="text/html; charset=iso-8859-2"><link rel=stylesheet href=magazin.css TYPE=text/css><title>MagaZin #13 :: pa¼dziernik 2002</title></head><body link=#478DE7 vlink=#478DE7 alink=#478DE7 topmargin=0 bottommargin=0 bgcolor=#000000><div align=center><table border=0 width=650 style="border-style: solid; border-width: 0" cellspacing=0 cellpadding=0 height=100% bgcolor=#FFFFFF><tr><td width=100% height=70 valign=middle background=../img/003b.png><div align=center><table border=0 width=550 cellspacing=0 cellpadding=0 height=28><tr><td width=550 align=center height=26 valign=bottom><p class=9ptV align=right><font color=#FFFFFF><b>MAGAZIN #13 :: STRONA 20</b></font></td></tr></table></div></td></tr><center><tr><td width=100% height=20 valign=bottom></center><div align=center><table border=0 width=586 height=20 cellspacing=0 cellpadding=0><tr><td width=135 background=../img/line3.gif><p align=right><img border=0 src=../img/line.gif width=9 height=20></td><center><td width=310 valign=bottom><p align=center class=9ptV><a href=19.htm class=link2><font color=#2078A8>poprzednia strona</font></a><font color=#4048A8> </font><font color=#2078A8>::</font><font color=#4048A8> </font><a href=spis.htm class=link2><font color=#2078A8>spis tre¶ci</font></a><font color=#4048A8> </font><font color=#2078A8>::</font><font color=#4048A8> </font><a href=21.htm class=link2><font color=#2078A8>nastêpna strona</font></a></td><td width=135 background=../img/line3.gif><img border=0 src=../img/line2.gif width=9 height=20></td></tr></table></center></div></td></tr><center><tr><td width=100% height=5 valign=top><p class=9ptV>&nbsp;</td></tr><tr><td width=100% height=5 valign=top><div align=center><center><table border=0 width=590 cellspacing=0 cellpadding=0><tr><td width=590 valign=top class=9ptV height=20 style="border-bottom: 1 solid #2078A8" colspan=2><b><font color=#009830><img border=0 src=../img/kwad.gif width=8 height=8> </font></b><b><font color=#2078A8>KURSY</font></b></td></tr><tr><td width=528><p><font face=Impact size=7 color=#E0F0F8><span style="background-color: #2078A8">K</span></font><font face=Impact size=7 color=#000000>urs C++, cz. 6</font></td></center></center><td width=58 valign=middle></td></tr><center><center><tr><td width=588 valign=bottom class=9ptV height=20 colspan=2><a href=mailto:ralphick@poczta.onet.pl class=link2><b><font color=#2078A8>Ralfik</font></b></a></td></tr><tr><td width=588 height=10 colspan=2></td></tr></table></center></div></center></td></tr><tr><td width=100% height=21 valign=top><center><table border=0 width=600 cellspacing=0 cellpadding=6 height=20 bgcolor=#FFFFFF><tr><td width=285 height=20 valign=top class=9pt></center><p class=9ptV align=justify><b>Sterowanie przebiegiem programu - pêtle</b><br> <br> <font color=#2078A8>Czo³em koderzy C++. Kontynuujemy temat sterowania przebiegiem programu i tym razem bierzemy siê za pêtle, czyli co¶, co pozwoli nam wielokrotnie wykonywaæ okre¶lony kawa³ek kodu. My¶lê, ¿e idea pêtli jest dla was jasna, wiêc od razu przejd¼my do rzeczy i zobaczmy, jak to wygl±da w C++.</font><br> <br> <img border=0 src=../img/003_c.gif style="float: left" width=23 height=38>++ "czêstuje" nas trzema instrukcjami do robienia pêtli:<br> - pêtla for<br> - pêtla while<br> - pêtla do&#8230;while<br> <br> <b>Pêtla for</b> wygl±da tak:<br> <br><table border=0 width=100% style="border: 1 solid #2078A8" cellspacing=0 cellpadding=0 bgcolor=#E0F0F8><tr><td width=100%><div align=center><center><table border=0 width=269 cellspacing=0 cellpadding=0><tr><td width=267 height=8></td></tr><tr><td width=267 valign=top><p class=9ptV align=left><font color=#2078A8>for( inicjalizacja zmiennych ; warunek ; instrukcja_wykonywana_na_koñcu_pêtli) instrukcja;</font></td></tr><tr><td width=267 height=8></td></tr></table></center></div></td></tr></table><class=9ptV align=justify><br> Oczywi¶cie zamiast ostatniej instrukcji mo¿na podaæ ca³y blok instrukcji (w {}). T± pêtlê najczê¶ciej stosuje siê do wykonania danej instrukcji okre¶lon± ilo¶æ razy. Wykorzystywali¶my j± np. do wypisania elementów tablicy.<br> <br><table border=0 width=100% style="border: 1 solid #2078A8" cellspacing=0 cellpadding=0 bgcolor=#E0F0F8><tr><td width=100%><div align=center><center><table border=0 width=269 cellspacing=0 cellpadding=0><tr><td width=267 height=8></td></tr><tr><td width=267 valign=top><p class=9ptV align=left><font color=#2078A8>int t[10];<br> int ilosc = 10; // Ilosc elementow tablicy t<br> for(int i=0 ; i&lt;ilosc ; i++)<br> {<br> t[i] = i*5;<br> // Wypisanie elementu tablicy<br> cout &lt;&lt; "t[" &lt;&lt; i &lt;&lt; "] = " &lt;&lt; t[i] &lt;&lt; endl;<br> }</font></td></tr><tr><td width=267 height=8></td></tr></table></center></div></td></tr></table><class=9ptV align=justify><br> Dodatkowo mo¿emy bêd±c wewn±trz pêtli nakazaæ wyj¶cie z aktualnej pêtli (break), lub natychmiastowe przej¶cie do kolejnej iteracji, czyli kolejnego przebiegu pêtli (continue). Break i continue mog± byæ tak¿e stosowane w pêtlach while i do...while.<br> <br> Poni¿szy kod przedstawia proste u¿ycie break i continue. Program wypisze nastêpuj±ce elementy tablicy: 0, 1, 6. Elementy od 2 do 5 nie zostan± wypisane (continue). W przypadku elementu 7 równie¿ nie zostaje on wypisany, gdy¿ opuszczamy pêtlê przed wypisaniem (break).<br> <br><table border=0 width=100% style="border: 1 solid #2078A8" cellspacing=0 cellpadding=0 bgcolor=#E0F0F8><tr><td width=100%><div align=center><center><table border=0 width=269 cellspacing=0 cellpadding=0><tr><td width=267 height=8></td></tr><tr><td width=267 valign=top><p class=9ptV align=left><font color=#2078A8>int t[10];<br> int ilosc = 10; // Ilosc elementow tablicy t<br> for(int i=0 ; i&lt;ilosc ; i++)<br> {<br> t[i] = i*5;<br> <br> if(i>=2 &amp;&amp; i&lt;=5) continue;<br> if(i==7) break;<br> <br> // Wypisanie elementu tablicy<br> cout &lt;&lt; "t[" &lt;&lt; i &lt;&lt; "] = " &lt;&lt; t[i] &lt;&lt; endl;<br> }</font></td></tr><tr><td width=267 height=8></td></tr></table></center></div></td></tr></table><class=9ptV align=justify><br> <b>Pêtla while</b> wykonuje siê dopóki spe³niony jest warunek:</td><td width=285 height=20 valign=top class=9pt><p class=9ptV>while(warunek) instrukcja;<br> <br> Dopóki i&lt;5, pêtla bêdzie siê wykonywaæ.<br> <br><table border=0 width=100% style="border: 1 solid #2078A8" cellspacing=0 cellpadding=0 bgcolor=#E0F0F8><tr><td width=100%><div align=center><center><table border=0 width=269 cellspacing=0 cellpadding=0><tr><td width=267 height=8><p class=9ptV></td></tr><tr><td width=267 valign=top><p class=9ptV align=left><font color=#2078A8>int i=0;<br> while(i&lt;5)<br> {<br> cout&lt;&lt;"i=" &lt;&lt; i &lt;&lt; ", czyli i&lt;5, co nas bardzo cieszy!!!";<br> cout&lt;&lt;endl;<br> i++;<br> }</font></td></tr><tr><td width=267 height=8><p class=9ptV></td></tr></table></center></div></td></tr></table><p align=justify class=9ptV><align=justify><class=9ptV align=justify><b>Pêtla do...while</b> dzia³a tak, jak while, z t± jednak ró¿nic±, ¿e warunek sprawdzany jest na koñcu (czyli zawsze pêtla wykona siê przynajmniej raz). Je¶li warunek bêdzie spe³niony, nast±pi kolejne wykonanie instrukcji w pêtli, a je¶li warunek nie bêdzie spe³niony, wychodzimy z pêtli (to odró¿nia t± pêtlê od Pascalowej pêtli repeat...until)<br> <br> Aby zakoñczyæ program, nale¿y nacisn±æ 'k' (i ENTER). Pro¶ba naci¶niêcia 'k' pojawi siê przynajmniej raz.<br> <br><table border=0 width=100% style="border: 1 solid #2078A8" cellspacing=0 cellpadding=0 bgcolor=#E0F0F8><tr><td width=100%><div align=center><center><table border=0 width=269 cellspacing=0 cellpadding=0><tr><td width=267 height=8><p class=9ptV></td></tr><tr><td width=267 valign=top><p class=9ptV align=left><font color=#2078A8>char z;<br> do<br> {<br> cout &lt;&lt; "Nacisnij k, aby zakonczyc program" &lt;&lt; endl;<br> cin >> z;<br> }<br> while(z!='k');</font></td></tr><tr><td width=267 height=8><p class=9ptV></td></tr></table></center></div></td></tr></table><p class=9ptV align=justify><class=9ptV align=justify>Do tego arsena³u pêtli dodano tak¿e instrukcje goto, znan± zapewne wszystkim tym, którzy spotkali siê kiedy¶ z jêzykiem Basic i jego odmianami. Goto, chocia¿ niezalecana ze wzglêdu na ³amanie podej¶cia strukturalnego do programowania, bywa czasami niezwykle u¿yteczna, np. gdy chcemy szybko wyj¶æ z kilku zagnie¿d¿onych pêtli poza wszystkie z nich (break umo¿liwia wyj¶cie tylko z aktualnie wykonywanej pêtli, je¶li bêdzie to pêtla wewnêtrzna, to trzeba bêdzie wyj¶æ jeszcze z pêtli zewnêtrznych). Po instrukcji goto podajemy etykietê, do której chcemy "skoczyæ".<br> <br><table border=0 width=100% style="border: 1 solid #2078A8" cellspacing=0 cellpadding=0 bgcolor=#E0F0F8><tr><td width=100%><div align=center><center><table border=0 width=269 cellspacing=0 cellpadding=0><tr><td width=267 height=8><p class=9ptV></td></tr><tr><td width=267 valign=top><p class=9ptV align=left><font color=#2078A8>int i=0;<br> while(1) // Pêtla wykonuj±ca siê ca³y czas<br> {<br> while(i&lt;15)<br> {<br> if(i&gt;7) goto koniec;<br> i++;<br> }<br> }<br> <br> koniec:<br> cout&lt;&lt;"Uff, wyszlismy calo z tych petli"&lt;&lt; endl;</font></td></tr><tr><td width=267 height=8><p class=9ptV></td></tr></table></center></div></td></tr></table><p class=9ptV align=justify><class=9ptV align=justify>Oczywi¶cie, aby te przyk³ady zadzia³a³y, potrzeba do³±czyæ bibliotekê iostream oraz umie¶ciæ kod w funkcji main. Ale to ju¿ drobnostka.<div align=center><table border=0 width=100% cellspacing=0 cellpadding=0><tr><td width=100%><p align=right class=9ptV><font face=Arial size=1 color=#000000><img border=0 src=../img/kwad_03.gif width=8 height=8> </font><a href=http://www.magazin.prv.pl class=link><font face=Arial size=1 color=#2078A8>MZ</font></a></p></td></tr></table></div></td></tr></table></td></tr><tr><center><td width=100% height=20 valign=bottom></center><div align=center><table border=0 width=586 height=20 cellspacing=0 cellpadding=0><tr><td width=135 background=../img/line3.gif><p align=right><img border=0 src=../img/line.gif width=9 height=20></td><center><td width=310 valign=bottom><p align=center class=9ptV><a href=19.htm class=link2><font color=#2078A8>poprzednia strona</font></a><font color=#4048A8> </font><font color=#2078A8>::</font><font color=#4048A8> </font><a href=spis.htm class=link2><font color=#2078A8>spis tre¶ci</font></a><font color=#4048A8> </font><font color=#2078A8>::</font><font color=#4048A8> </font><a href=21.htm class=link2><font color=#2078A8>nastêpna strona</font></a></td><td width=135 background=../img/line3.gif><img border=0 src=../img/line2.gif width=9 height=20></td></tr></table></center></div></td></tr><tr><td width=100% height=65 valign=top background=../img/003c.png><div align=center><center><table border=0 width=592 cellspacing=0 cellpadding=0 height=55><tr><td width=590 height=55><p align=center class=9ptV><b><font color=#FFFFFF>WSZELKIE PRAWA ZASTRZE¯ONE :: COPYRIGHT &copy; LOOPUSNET/MAGAZIN 2001-2002</font></b></td></tr></table></center></div></td></tr></table></div></body></html>