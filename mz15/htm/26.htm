<html><head><meta http-equiv=Content-Type content="text/html; charset=iso-8859-2"><link rel=stylesheet href=magazin.css TYPE=text/css><title>MagaZin #15 :: luty 2003</title></head><body link=#478DE7 vlink=#478DE7 alink=#478DE7 topmargin=0 bottommargin=0 bgcolor=#000000><div align=center><table border=0 width=650 style="border-style: solid; border-width: 0" cellspacing=0 cellpadding=0 bgcolor=#FFFFFF><tr><td width=100% height=70 valign=middle background=../img/003b.png><div align=center><table border=0 width=550 cellspacing=0 cellpadding=0 height=28><tr><td width=550 align=center height=26 valign=bottom><p class=9ptV align=right><font color=#FFFFFF><b>MAGAZIN #15 :: STRONA 26</b></font></td></tr></table></div></td></tr><center><tr><td width=100% height=20 valign=bottom></center><div align=center><table border=0 width=586 height=20 cellspacing=0 cellpadding=0><tr><td width=135 background=../img/line3.gif><p align=right><img border=0 src=../img/line.gif width=9 height=20></td><center><td width=310 valign=bottom><p align=center class=9ptV><a href=25.htm class=link2><font color=#2078A8>poprzednia strona</font></a><font color=#4048A8> </font><font color=#2078A8>::</font><font color=#4048A8> </font><a href=spis.htm class=link2><font color=#2078A8>spis tre¶ci</font></a><font color=#4048A8> </font><font color=#2078A8>::</font><font color=#4048A8> </font><a href=27.htm class=link2><font color=#2078A8>nastêpna strona</font></a></td><td width=135 background=../img/line3.gif><img border=0 src=../img/line2.gif width=9 height=20></td></tr></table></center></div></td></tr><center><tr><td width=100% height=5 valign=top><p class=9ptV>&nbsp;</td></tr><tr><td width=100% height=5 valign=top><div align=center><center><table border=0 width=600 cellspacing=0 cellpadding=0><tr><td width=590 valign=top class=9ptV height=20 style="border-bottom: 1 solid #2078A8" colspan=2><b><font color=#009830><img border=0 src=../img/kwad.gif width=8 height=8> </font></b><b><font color=#2078A8>KURSY</font></b></td></tr><tr><td width=528><p><font face=Impact size=7 color=#E0F0F8><span style="background-color: #2078A8">K</span></font><font color=#000000 size=7 face=Impact>urs C++, cz. 8</font></td></center></center><td width=58 valign=top></td></tr><center><center><tr><td width=588 valign=bottom class=9ptV height=20 colspan=2><font color=#009830><img border=0 src=../img/goto3.gif width=8 height=8> </font><a href=mailto:ralphick@poczta.onet.pl class=link2><b><font color=#2078A8>Ralfik</font></b></a></td></tr><tr><td width=588 height=10 colspan=2></td></tr></table></center></div></center></td></tr><tr><td width=100% height=21 valign=top background=../img/back3.gif><div align=center><center><table border=0 width=600 cellspacing=0 cellpadding=6><tr><td width=50% valign=top><p align=justify class=9ptV style="line-height: 130%"><font color=#1F77A4>Witam wszystkich w nowym roku. Rok jest nowy, a temat, którym siê dzi¶ zajmiemy, to kontynuacja poprzedniego - czyli znowu wska¼niki. Tym razem powiemy sobie o dynamicznej alokacji pamiêci oraz wska¼nikach do funkcji.<br> <br> </font><b>I znowu wska¼niki<br> </b><br> <font face=Tahoma><img border=0 src=../img/bl2/003_d.gif style="float: left; margin-right: 4; margin-top: 4" width=25 height=40></font>ynamiczna alokacja pamiêci - termin ten brzmi bardzo technicznie, lecz jest w istocie bardzo prosty. Wyobra¼my sobie, ¿e chcemy stworzyæ tablicê, ale podczas pisania programu nie znamy jej rozmiaru. Kompilator nie przepu¶ci nam takiego kodu, np.<br> <br> <font color=#1F77A4>int r;<br> cout &lt;&lt; "Podaj rozmiar tablicy: ";<br> cin >> r;<br> float tab[r];</font><br> <br> nie skompiluje siê. Okazuje siê, ¿e jest na to rada - tablicê trzeba zaalokowaæ dynamicznie - w³a¶nie z wykorzystaniem wska¼ników. W tym celu musimy poznaæ dwa nowe operatory: new i delete.<br> <br> <font color=#1F77A4>new</font> - alokuje pamiêæ na nowy element (lub tablicê elementów) okre¶lonego typu/klasy<br> <br> <font color=#1F77A4>delete</font> - usuwa zaalokowan± pamiêæ<br> <br> A oto przyk³ad, jak takiej dynamicznej alokacji dokonaæ:<p align=left class=9ptV style="line-height: 130%"><font color=#1F77A4>#include &lt;iostream.h><br> <br> main()<br> {<br> int r;<br> float *t; /*Wska¼nik na float*/<br> cout &lt;&lt; "Podaj rozmiar tablicy: ";<br> cin >> r;<br> <br> t = new float [r]; /* Dynamiczna alokacja - tworzymy tablice zawierajaca r zmiennych float - wskaznik t pokazuje na jej poczatek */<br> <br> /* Teraz dzialamy na takiej tablicy t*/<br> <br> /* A gdy nie jest nam ju¿ potrzebna - zwalniamy zaalokowana pamiec */<br> <br> delete [] t; /* Zwalniamy pamiec wykorzystywana przez tablice */<br> <br> t = 0; /* Dodatkowo ustawiamy wskaznik, aby nie pokazywal na nic konkretnego */<br> <br> /* Mo¿emy stworzyc nowa tablice o innym rozmiarze, znowu wykorzystujemy wskaznik t, bo nie pokazuje on na nic innego*/<br> <br> t = new float [r*r]; /* Dynamiczna alokacja - tworzymy tablice zawierajaca r*r zmiennych float - wskaznik t pokazuje na jej poczatek */<br> <br> /* Teraz znowu dzialamy na takiej tablicy t*/<br> <br> /* A gdy nie jest nam ju¿ potrzebna - zwalniamy zaalokowana pamiec */<br> <br> delete [] t; /* Zwalniamy pamiec wykorzystywana przez tablice */<br> <br> t = 0; /* Dodatkowo ustawiamy wskaznik, aby nie pokazywal na nic konkretnego */<br> <br> return 0;<br> }</font><p align=justify class=9ptV style="line-height: 130%">Dodatkowe uwagi - oczywi¶cie rozmiar tablicy musi byæ liczb± wiêksz± lub równ± od jeden. Ponadto ka¿da dynamicznie zaalokowana za pomoc± operatora new tablica musi zostaæ zwolniona za pomoc± operatora delete. W przeciwnym wypadku mog± powstaæ problemy z tzw. wyciekiem pamiêci, tzn. bêdzie stale ubywa³o pamiêci w obszarze pamiêci przeznaczonym na dynamiczn± alokacjê (tzw. sterta), poniewa¿ nie bêdziemy zwalniaæ niepotrzebnych nam ju¿ tablic.</td><td width=50% valign=top><p align=justify class=9ptV style="line-height: 130%">Oczywi¶cie mo¿na dynamicznie alokowaæ pamiêæ nie tylko dla ca³ej tablicy, ale i dla pojedynczego elementu, np.<br> <br> <font color=#1F77A4>int *w;<br> w = new int;<br> /* Operacje na w */<br> delete w;</font><br> <br> W przypadku, gdy nie mo¿na utworzyæ elementu/tablicy z powodu braku pamiêci, wska¼nik zostanie ustawiony na adres zerowy (null). Nale¿y wiêc zawsze sprawdzaæ, czy dany element/tablica zosta³a rzeczywi¶cie w pamiêci utworzona, np.:<br> <br> <font color=#1F77A4>int *t;<br> t = new int [10];<br> if (t==0)<br> {<br> cout&lt;&lt;"Brak pamieci";<br> exit(1); /* Wyjscie z programu */<br> }<br> <br> /* kod w przypadku poprawnej alokacji */<br> <br> delete [] t;</font><br> <br> Innym ciekawym zastosowaniem wska¼ników s± wska¼niki do funkcji. Taki wska¼nik przechowuje adres okre¶lonej funkcji, tzn. funkcji wywo³ywanej z okre¶lonymi parametrami i zwracaj±cej okre¶lony typ. Maj±c taki wska¼nik, który pokazuje na funkcjê, mo¿na za jego pomoc± t± funkcjê wywo³aæ. Na pierwszy rzut oka wydaje siê, ¿e takie wska¼niki s± niepotrzebne - bo po co wywo³ywaæ funkcjê za pomoc± jakiego¶ wska¼nika, lepiej po prostu u¿yæ jej nazwy. Wyobra¼my sobie jednak tak± sytuacjê - piszemy funkcjê, która ma robiæ jakie¶ obliczenia wykorzystuj±c inn± funkcjê, przy czym t± inn± funkcjê chcemy dostarczyæ "z zewn±trz". Najprostszym przyk³adem mo¿e byæ funkcja licz±ca pozycjê jakiego¶ cia³a w chwili t, gdy mamy zadane równanie ruchu tego cia³a (równanie dane jest funkcj± postaci y=f(t), gdzie y jest po³o¿eniem cia³a w chwili t). Nasza "uniwersalna" funkcja bêdzie dostawa³a jako parametry wska¼nik na aktualnie wykorzystywan± funkcjê równania ruchu oraz czas t, w którym liczymy po³o¿enie wed³ug aktualnej funkcji równania ruchu.<br> <br> <font color=#1F77A4>float ruch_1(float t)<br> {<br> return 10*t;<br> }<br> <br> float ruch_2(float t)<br> {<br> return 2*t*t+3*t;<br> }<br> <br> float polozenie(float (*w)(float), float t)<br> {<br> return (*w)(t);<br> }</font><br> <br> Funkcje ruch_1 i ruch_2 to funkcje ruchu maj±ce jeden parametr - czas (float t) i zwracaj±ce po³o¿enie - równie¿ typu float. Funkcja po³o¿enie dostaje wska¼nik w na funkcjê ruchu o argumencie typu float i zwracaj±c± liczbê float - float (*w)(float). Teraz aby obliczyæ po³o¿enie w danym ruchu - nale¿y wywo³aæ funkcjê po³o¿enie i podaæ o który ruch chodzi oraz czas ruchu, np.:<br> <br> <font color=#1F77A4>polozenie(ruch_1, 3);<br> polozenie(ruch_2, 10);</font><br> <br> Te funkcje zwróc± po³o¿enie w danym ruchu w danej chwili czasu. Po³o¿enie to jest obliczane poprzez wywo³anie funkcji ruchu, na któr± pokazuje przekazany funkcji po³o¿enie wska¼nik, z argumentem t, które tak¿e zosta³ funkcji po³o¿enie - to wywo³anie to: (*w)(t).</center><div align=center><table border=0 width=100% cellspacing=0 cellpadding=0><center><tr><td width=100%><p align=right class=9ptV><font face=Arial size=1><br> <a href=http://www.magazin.prv.pl><img border=0 src=../img/cd.gif width=47 height=20></a></font></p></td></tr></table></div></center></td></tr></table></div></td></tr><tr><center><td width=100% height=20 valign=bottom></center><div align=center><table border=0 width=586 height=20 cellspacing=0 cellpadding=0><tr><td width=135 background=../img/line3.gif><p align=right><img border=0 src=../img/line.gif width=9 height=20></td><center><td width=310 valign=bottom><p align=center class=9ptV><a href=25.htm class=link2><font color=#2078A8>poprzednia strona</font></a><font color=#4048A8> </font><font color=#2078A8>::</font><font color=#4048A8> </font><a href=spis.htm class=link2><font color=#2078A8>spis tre¶ci</font></a><font color=#4048A8> </font><font color=#2078A8>::</font><font color=#4048A8> </font><a href=27.htm class=link2><font color=#2078A8>nastêpna strona</font></a></td><td width=135 background=../img/line3.gif><img border=0 src=../img/line2.gif width=9 height=20></td></tr></table></center></div></td></tr><tr><td width=100% height=65 valign=top background=../img/003c.png><div align=center><center><table border=0 width=592 cellspacing=0 cellpadding=0 height=55><tr><td width=590 height=55><p align=center class=9ptV><b><font color=#FFFFFF>WSZELKIE PRAWA ZASTRZE¯ONE :: COPYRIGHT &copy; MAGAZIN 2001-2003</font></b></td></tr></table></center></div></td></tr></table></div></body></html>